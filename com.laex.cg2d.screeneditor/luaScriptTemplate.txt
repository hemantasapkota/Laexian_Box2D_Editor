ptm = 16 --default
cardNoX = 0
cardNoY = 0
cardWidth = 0
maxXVelocity = 10
onAir = false

local screenModel = nil
local queryMgr = nil

function init(_screenModel, _queryMgr, world, cam)
	screenModel = _screenModel
	queryMgr = _queryMgr
	
	ptm = screenModel:getScreenPrefs():getWorldPrefs():getPtmRatio()
	cardNoX = screenModel:getScreenPrefs():getCardPrefs():getCardNoX()
	cardNoY = screenModel:getScreenPrefs():getCardPrefs():getCardNoY()
	cardWidth = screenModel:getScreenPrefs():getCardPrefs():getCardWidth()
end

function initBody(world, cam, body, id)
end

function update(world, cam, body, id)
	local posX = body:getTransform():getPosition().x

	local leftBoundsCondition = posX > (cardWidth/ptm/2)
	local rightBoundsCondition = posX < ((cardNoX - 0.5) * cardWidth) / ptm

	if leftBoundsCondition and rightBoundsCondition then
		cam.position.x = posX
	end
	
end

function keyPressed(world, cam, key)
	local body = queryMgr:getEntityById("entity0")

    if key == "LEFT" then   
        body:applyLinearImpulse(-1, 0, 0.5, 0)
    end

	if key == "RIGHT" then
		if body:getLinearVelocity().x <= maxXVelocity then
			body:applyLinearImpulse(0.8, 0, -0.5, 0)
		end
	end

	if key == "SPACE" then
		if not onAir then
			local velo = luajava.newInstance("com.badlogic.gdx.math.Vector2")
			velo.y = 9
			velo.x = body:getLinearVelocity().x
		
			body:setLinearVelocity(velo)
			onAir = true
		end
	end

end

function collisionCallback(idA, idB, bodyA, bodyB, world, cam) 
	if string.match(idA, "edge") and idB == "entity0" then
		onAir = false
	end
end
