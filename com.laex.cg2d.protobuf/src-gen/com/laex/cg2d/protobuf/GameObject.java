// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/laex/cg2d/protobuf/GameObject.proto

package com.laex.cg2d.protobuf;

public final class GameObject {
  private GameObject() {
  }

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
  }

  public enum CGJointType implements com.google.protobuf.ProtocolMessageEnum {
    UNKNOWN(0, 1), REVOLUTE(1, 2), PRISMATIC(2, 3), DISTANCE(3, 4), PULLEY(4, 5), MOUSE(5, 6), GEAR(6, 7), WHEEL(7, 8), WELD(
        8, 9), FRICTION(9, 10), ROPE(10, 11), ;

    public static final int UNKNOWN_VALUE = 1;
    public static final int REVOLUTE_VALUE = 2;
    public static final int PRISMATIC_VALUE = 3;
    public static final int DISTANCE_VALUE = 4;
    public static final int PULLEY_VALUE = 5;
    public static final int MOUSE_VALUE = 6;
    public static final int GEAR_VALUE = 7;
    public static final int WHEEL_VALUE = 8;
    public static final int WELD_VALUE = 9;
    public static final int FRICTION_VALUE = 10;
    public static final int ROPE_VALUE = 11;

    public final int getNumber() {
      return value;
    }

    public static CGJointType valueOf(int value) {
      switch (value) {
      case 1:
        return UNKNOWN;
      case 2:
        return REVOLUTE;
      case 3:
        return PRISMATIC;
      case 4:
        return DISTANCE;
      case 5:
        return PULLEY;
      case 6:
        return MOUSE;
      case 7:
        return GEAR;
      case 8:
        return WHEEL;
      case 9:
        return WELD;
      case 10:
        return FRICTION;
      case 11:
        return ROPE;
      default:
        return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CGJointType> internalGetValueMap() {
      return internalValueMap;
    }

    private static com.google.protobuf.Internal.EnumLiteMap<CGJointType> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<CGJointType>() {
      public CGJointType findValueByNumber(int number) {
        return CGJointType.valueOf(number);
      }
    };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.getDescriptor().getEnumTypes().get(0);
    }

    private static final CGJointType[] VALUES =
      { UNKNOWN, REVOLUTE, PRISMATIC, DISTANCE, PULLEY, MOUSE, GEAR, WHEEL, WELD, FRICTION, ROPE, };

    public static CGJointType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CGJointType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.laex.cg2d.protobuf.CGJointType)
  }

  public enum CGEntityCollisionType implements com.google.protobuf.ProtocolMessageEnum {
    NONE(0, 0), BOX(1, 1), CIRCLE(2, 2), CUSTOM(3, 3), ;

    public static final int NONE_VALUE = 0;
    public static final int BOX_VALUE = 1;
    public static final int CIRCLE_VALUE = 2;
    public static final int CUSTOM_VALUE = 3;

    public final int getNumber() {
      return value;
    }

    public static CGEntityCollisionType valueOf(int value) {
      switch (value) {
      case 0:
        return NONE;
      case 1:
        return BOX;
      case 2:
        return CIRCLE;
      case 3:
        return CUSTOM;
      default:
        return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CGEntityCollisionType> internalGetValueMap() {
      return internalValueMap;
    }

    private static com.google.protobuf.Internal.EnumLiteMap<CGEntityCollisionType> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<CGEntityCollisionType>() {
      public CGEntityCollisionType findValueByNumber(int number) {
        return CGEntityCollisionType.valueOf(number);
      }
    };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.getDescriptor().getEnumTypes().get(1);
    }

    private static final CGEntityCollisionType[] VALUES =
      { NONE, BOX, CIRCLE, CUSTOM, };

    public static CGEntityCollisionType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CGEntityCollisionType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.laex.cg2d.protobuf.CGEntityCollisionType)
  }

  public enum CGBodyType implements com.google.protobuf.ProtocolMessageEnum {
    STATIC(0, 1), KINEMATIC(1, 2), DYNAMIC(2, 3), ;

    public static final int STATIC_VALUE = 1;
    public static final int KINEMATIC_VALUE = 2;
    public static final int DYNAMIC_VALUE = 3;

    public final int getNumber() {
      return value;
    }

    public static CGBodyType valueOf(int value) {
      switch (value) {
      case 1:
        return STATIC;
      case 2:
        return KINEMATIC;
      case 3:
        return DYNAMIC;
      default:
        return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CGBodyType> internalGetValueMap() {
      return internalValueMap;
    }

    private static com.google.protobuf.Internal.EnumLiteMap<CGBodyType> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<CGBodyType>() {
      public CGBodyType findValueByNumber(int number) {
        return CGBodyType.valueOf(number);
      }
    };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.getDescriptor().getEnumTypes().get(2);
    }

    private static final CGBodyType[] VALUES =
      { STATIC, KINEMATIC, DYNAMIC, };

    public static CGBodyType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CGBodyType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.laex.cg2d.protobuf.CGBodyType)
  }

  public enum CGEditorShapeType implements com.google.protobuf.ProtocolMessageEnum {
    SIMPLE_SHAPE_CIRCLE(0, 1), SIMPLE_SHAPE_BOX(1, 2), SIMPLE_SHAPE_HEDGE(2, 3), SIMPLE_SHAPE_VEDGE(3, 4), BACKGROUND_SHAPE(
        4, 5), ENTITY_SHAPE(5, 6), ;

    public static final int SIMPLE_SHAPE_CIRCLE_VALUE = 1;
    public static final int SIMPLE_SHAPE_BOX_VALUE = 2;
    public static final int SIMPLE_SHAPE_HEDGE_VALUE = 3;
    public static final int SIMPLE_SHAPE_VEDGE_VALUE = 4;
    public static final int BACKGROUND_SHAPE_VALUE = 5;
    public static final int ENTITY_SHAPE_VALUE = 6;

    public final int getNumber() {
      return value;
    }

    public static CGEditorShapeType valueOf(int value) {
      switch (value) {
      case 1:
        return SIMPLE_SHAPE_CIRCLE;
      case 2:
        return SIMPLE_SHAPE_BOX;
      case 3:
        return SIMPLE_SHAPE_HEDGE;
      case 4:
        return SIMPLE_SHAPE_VEDGE;
      case 5:
        return BACKGROUND_SHAPE;
      case 6:
        return ENTITY_SHAPE;
      default:
        return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CGEditorShapeType> internalGetValueMap() {
      return internalValueMap;
    }

    private static com.google.protobuf.Internal.EnumLiteMap<CGEditorShapeType> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<CGEditorShapeType>() {
      public CGEditorShapeType findValueByNumber(int number) {
        return CGEditorShapeType.valueOf(number);
      }
    };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.getDescriptor().getEnumTypes().get(3);
    }

    private static final CGEditorShapeType[] VALUES =
      { SIMPLE_SHAPE_CIRCLE, SIMPLE_SHAPE_BOX, SIMPLE_SHAPE_HEDGE, SIMPLE_SHAPE_VEDGE, BACKGROUND_SHAPE, ENTITY_SHAPE, };

    public static CGEditorShapeType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CGEditorShapeType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.laex.cg2d.protobuf.CGEditorShapeType)
  }

  public interface CGGameModelOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;
    java.util.List<com.laex.cg2d.protobuf.GameObject.CGLayer> getLayersList();

    com.laex.cg2d.protobuf.GameObject.CGLayer getLayers(int index);

    int getLayersCount();

    java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder> getLayersOrBuilderList();

    com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder getLayersOrBuilder(int index);

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;
    boolean hasScreenPrefs();

    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences getScreenPrefs();

    com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder getScreenPrefsOrBuilder();
  }

  public static final class CGGameModel extends com.google.protobuf.GeneratedMessage implements CGGameModelOrBuilder {
    // Use CGGameModel.newBuilder() to construct.
    private CGGameModel(Builder builder) {
      super(builder);
    }

    private CGGameModel(boolean noInit) {
    }

    private static final CGGameModel defaultInstance;

    public static CGGameModel getDefaultInstance() {
      return defaultInstance;
    }

    public CGGameModel getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGGameModel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGGameModel_fieldAccessorTable;
    }

    private int bitField0_;
    // repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;
    public static final int LAYERS_FIELD_NUMBER = 1;
    private java.util.List<com.laex.cg2d.protobuf.GameObject.CGLayer> layers_;

    public java.util.List<com.laex.cg2d.protobuf.GameObject.CGLayer> getLayersList() {
      return layers_;
    }

    public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder> getLayersOrBuilderList() {
      return layers_;
    }

    public int getLayersCount() {
      return layers_.size();
    }

    public com.laex.cg2d.protobuf.GameObject.CGLayer getLayers(int index) {
      return layers_.get(index);
    }

    public com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder getLayersOrBuilder(int index) {
      return layers_.get(index);
    }

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;
    public static final int SCREENPREFS_FIELD_NUMBER = 2;
    private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences screenPrefs_;

    public boolean hasScreenPrefs() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences getScreenPrefs() {
      return screenPrefs_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder getScreenPrefsOrBuilder() {
      return screenPrefs_;
    }

    private void initFields() {
      layers_ = java.util.Collections.emptyList();
      screenPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      for (int i = 0; i < getLayersCount(); i++) {
        if (!getLayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < layers_.size(); i++) {
        output.writeMessage(1, layers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, screenPrefs_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      for (int i = 0; i < layers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, layers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, screenPrefs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGGameModel prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGGameModelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGGameModel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGGameModel_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGGameModel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLayersFieldBuilder();
          getScreenPrefsFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (layersBuilder_ == null) {
          layers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          layersBuilder_.clear();
        }
        if (screenPrefsBuilder_ == null) {
          screenPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance();
        } else {
          screenPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGGameModel.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGGameModel getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGGameModel.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGGameModel build() {
        com.laex.cg2d.protobuf.GameObject.CGGameModel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGGameModel buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGGameModel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGGameModel buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGGameModel result = new com.laex.cg2d.protobuf.GameObject.CGGameModel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (layersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            layers_ = java.util.Collections.unmodifiableList(layers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.layers_ = layers_;
        } else {
          result.layers_ = layersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (screenPrefsBuilder_ == null) {
          result.screenPrefs_ = screenPrefs_;
        } else {
          result.screenPrefs_ = screenPrefsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGGameModel) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGGameModel) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGGameModel other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGGameModel.getDefaultInstance())
          return this;
        if (layersBuilder_ == null) {
          if (!other.layers_.isEmpty()) {
            if (layers_.isEmpty()) {
              layers_ = other.layers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLayersIsMutable();
              layers_.addAll(other.layers_);
            }
            onChanged();
          }
        } else {
          if (!other.layers_.isEmpty()) {
            if (layersBuilder_.isEmpty()) {
              layersBuilder_.dispose();
              layersBuilder_ = null;
              layers_ = other.layers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              layersBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getLayersFieldBuilder()
                  : null;
            } else {
              layersBuilder_.addAllMessages(other.layers_);
            }
          }
        }
        if (other.hasScreenPrefs()) {
          mergeScreenPrefs(other.getScreenPrefs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getLayersCount(); i++) {
          if (!getLayers(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 10: {
            com.laex.cg2d.protobuf.GameObject.CGLayer.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGLayer
                .newBuilder();
            input.readMessage(subBuilder, extensionRegistry);
            addLayers(subBuilder.buildPartial());
            break;
          }
          case 18: {
            com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences
                .newBuilder();
            if (hasScreenPrefs()) {
              subBuilder.mergeFrom(getScreenPrefs());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setScreenPrefs(subBuilder.buildPartial());
            break;
          }
          }
        }
      }

      private int bitField0_;

      // repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;
      private java.util.List<com.laex.cg2d.protobuf.GameObject.CGLayer> layers_ = java.util.Collections.emptyList();

      private void ensureLayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          layers_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGLayer>(layers_);
          bitField0_ |= 0x00000001;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGLayer, com.laex.cg2d.protobuf.GameObject.CGLayer.Builder, com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder> layersBuilder_;

      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGLayer> getLayersList() {
        if (layersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(layers_);
        } else {
          return layersBuilder_.getMessageList();
        }
      }

      public int getLayersCount() {
        if (layersBuilder_ == null) {
          return layers_.size();
        } else {
          return layersBuilder_.getCount();
        }
      }

      public com.laex.cg2d.protobuf.GameObject.CGLayer getLayers(int index) {
        if (layersBuilder_ == null) {
          return layers_.get(index);
        } else {
          return layersBuilder_.getMessage(index);
        }
      }

      public Builder setLayers(int index, com.laex.cg2d.protobuf.GameObject.CGLayer value) {
        if (layersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLayersIsMutable();
          layers_.set(index, value);
          onChanged();
        } else {
          layersBuilder_.setMessage(index, value);
        }
        return this;
      }

      public Builder setLayers(int index, com.laex.cg2d.protobuf.GameObject.CGLayer.Builder builderForValue) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          layers_.set(index, builderForValue.build());
          onChanged();
        } else {
          layersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }

      public Builder addLayers(com.laex.cg2d.protobuf.GameObject.CGLayer value) {
        if (layersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLayersIsMutable();
          layers_.add(value);
          onChanged();
        } else {
          layersBuilder_.addMessage(value);
        }
        return this;
      }

      public Builder addLayers(int index, com.laex.cg2d.protobuf.GameObject.CGLayer value) {
        if (layersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLayersIsMutable();
          layers_.add(index, value);
          onChanged();
        } else {
          layersBuilder_.addMessage(index, value);
        }
        return this;
      }

      public Builder addLayers(com.laex.cg2d.protobuf.GameObject.CGLayer.Builder builderForValue) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          layers_.add(builderForValue.build());
          onChanged();
        } else {
          layersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }

      public Builder addLayers(int index, com.laex.cg2d.protobuf.GameObject.CGLayer.Builder builderForValue) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          layers_.add(index, builderForValue.build());
          onChanged();
        } else {
          layersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }

      public Builder addAllLayers(java.lang.Iterable<? extends com.laex.cg2d.protobuf.GameObject.CGLayer> values) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          super.addAll(values, layers_);
          onChanged();
        } else {
          layersBuilder_.addAllMessages(values);
        }
        return this;
      }

      public Builder clearLayers() {
        if (layersBuilder_ == null) {
          layers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          layersBuilder_.clear();
        }
        return this;
      }

      public Builder removeLayers(int index) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          layers_.remove(index);
          onChanged();
        } else {
          layersBuilder_.remove(index);
        }
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGLayer.Builder getLayersBuilder(int index) {
        return getLayersFieldBuilder().getBuilder(index);
      }

      public com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder getLayersOrBuilder(int index) {
        if (layersBuilder_ == null) {
          return layers_.get(index);
        } else {
          return layersBuilder_.getMessageOrBuilder(index);
        }
      }

      public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder> getLayersOrBuilderList() {
        if (layersBuilder_ != null) {
          return layersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(layers_);
        }
      }

      public com.laex.cg2d.protobuf.GameObject.CGLayer.Builder addLayersBuilder() {
        return getLayersFieldBuilder().addBuilder(com.laex.cg2d.protobuf.GameObject.CGLayer.getDefaultInstance());
      }

      public com.laex.cg2d.protobuf.GameObject.CGLayer.Builder addLayersBuilder(int index) {
        return getLayersFieldBuilder()
            .addBuilder(index, com.laex.cg2d.protobuf.GameObject.CGLayer.getDefaultInstance());
      }

      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGLayer.Builder> getLayersBuilderList() {
        return getLayersFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGLayer, com.laex.cg2d.protobuf.GameObject.CGLayer.Builder, com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder> getLayersFieldBuilder() {
        if (layersBuilder_ == null) {
          layersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGLayer, com.laex.cg2d.protobuf.GameObject.CGLayer.Builder, com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder>(
              layers_, ((bitField0_ & 0x00000001) == 0x00000001), getParentForChildren(), isClean());
          layers_ = null;
        }
        return layersBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;
      private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences screenPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGScreenPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder> screenPrefsBuilder_;

      public boolean hasScreenPrefs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences getScreenPrefs() {
        if (screenPrefsBuilder_ == null) {
          return screenPrefs_;
        } else {
          return screenPrefsBuilder_.getMessage();
        }
      }

      public Builder setScreenPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences value) {
        if (screenPrefsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          screenPrefs_ = value;
          onChanged();
        } else {
          screenPrefsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder setScreenPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder builderForValue) {
        if (screenPrefsBuilder_ == null) {
          screenPrefs_ = builderForValue.build();
          onChanged();
        } else {
          screenPrefsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder mergeScreenPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences value) {
        if (screenPrefsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)
              && screenPrefs_ != com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance()) {
            screenPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.newBuilder(screenPrefs_)
                .mergeFrom(value).buildPartial();
          } else {
            screenPrefs_ = value;
          }
          onChanged();
        } else {
          screenPrefsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder clearScreenPrefs() {
        if (screenPrefsBuilder_ == null) {
          screenPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance();
          onChanged();
        } else {
          screenPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder getScreenPrefsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getScreenPrefsFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder getScreenPrefsOrBuilder() {
        if (screenPrefsBuilder_ != null) {
          return screenPrefsBuilder_.getMessageOrBuilder();
        } else {
          return screenPrefs_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGScreenPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder> getScreenPrefsFieldBuilder() {
        if (screenPrefsBuilder_ == null) {
          screenPrefsBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGScreenPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder>(
              screenPrefs_, getParentForChildren(), isClean());
          screenPrefs_ = null;
        }
        return screenPrefsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGGameModel)
    }

    static {
      defaultInstance = new CGGameModel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGGameModel)
  }

  public interface CGJointOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional string sourceShapeId = 1;
    boolean hasSourceShapeId();

    String getSourceShapeId();

    // optional string targetShapeId = 2;
    boolean hasTargetShapeId();

    String getTargetShapeId();

    // optional .com.laex.cg2d.protobuf.CGJointType type = 3;
    boolean hasType();

    com.laex.cg2d.protobuf.GameObject.CGJointType getType();

    // optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;
    boolean hasDistanceJointDef();

    com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef getDistanceJointDef();

    com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder getDistanceJointDefOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;
    boolean hasRevoluteJointDef();

    com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef getRevoluteJointDef();

    com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder getRevoluteJointDefOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef =
    // 7;
    boolean hasPrismaticJointDef();

    com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef getPrismaticJointDef();

    com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder getPrismaticJointDefOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;
    boolean hasPulleyJointDef();

    com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef getPulleyJointDef();

    com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder getPulleyJointDefOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;
    boolean hasFrictionJointDef();

    com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef getFrictionJointDef();

    com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder getFrictionJointDefOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;
    boolean hasWeldJointDef();

    com.laex.cg2d.protobuf.GameObject.CGWeldJointDef getWeldJointDef();

    com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder getWeldJointDefOrBuilder();
  }

  public static final class CGJoint extends com.google.protobuf.GeneratedMessage implements CGJointOrBuilder {
    // Use CGJoint.newBuilder() to construct.
    private CGJoint(Builder builder) {
      super(builder);
    }

    private CGJoint(boolean noInit) {
    }

    private static final CGJoint defaultInstance;

    public static CGJoint getDefaultInstance() {
      return defaultInstance;
    }

    public CGJoint getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGJoint_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGJoint_fieldAccessorTable;
    }

    private int bitField0_;
    // optional string sourceShapeId = 1;
    public static final int SOURCESHAPEID_FIELD_NUMBER = 1;
    private java.lang.Object sourceShapeId_;

    public boolean hasSourceShapeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public String getSourceShapeId() {
      java.lang.Object ref = sourceShapeId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          sourceShapeId_ = s;
        }
        return s;
      }
    }

    private com.google.protobuf.ByteString getSourceShapeIdBytes() {
      java.lang.Object ref = sourceShapeId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        sourceShapeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string targetShapeId = 2;
    public static final int TARGETSHAPEID_FIELD_NUMBER = 2;
    private java.lang.Object targetShapeId_;

    public boolean hasTargetShapeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public String getTargetShapeId() {
      java.lang.Object ref = targetShapeId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          targetShapeId_ = s;
        }
        return s;
      }
    }

    private com.google.protobuf.ByteString getTargetShapeIdBytes() {
      java.lang.Object ref = targetShapeId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        targetShapeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.laex.cg2d.protobuf.CGJointType type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private com.laex.cg2d.protobuf.GameObject.CGJointType type_;

    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public com.laex.cg2d.protobuf.GameObject.CGJointType getType() {
      return type_;
    }

    // optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;
    public static final int DISTANCEJOINTDEF_FIELD_NUMBER = 5;
    private com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef distanceJointDef_;

    public boolean hasDistanceJointDef() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef getDistanceJointDef() {
      return distanceJointDef_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder getDistanceJointDefOrBuilder() {
      return distanceJointDef_;
    }

    // optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;
    public static final int REVOLUTEJOINTDEF_FIELD_NUMBER = 6;
    private com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef revoluteJointDef_;

    public boolean hasRevoluteJointDef() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }

    public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef getRevoluteJointDef() {
      return revoluteJointDef_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder getRevoluteJointDefOrBuilder() {
      return revoluteJointDef_;
    }

    // optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef =
    // 7;
    public static final int PRISMATICJOINTDEF_FIELD_NUMBER = 7;
    private com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef prismaticJointDef_;

    public boolean hasPrismaticJointDef() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }

    public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef getPrismaticJointDef() {
      return prismaticJointDef_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder getPrismaticJointDefOrBuilder() {
      return prismaticJointDef_;
    }

    // optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;
    public static final int PULLEYJOINTDEF_FIELD_NUMBER = 8;
    private com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef pulleyJointDef_;

    public boolean hasPulleyJointDef() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }

    public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef getPulleyJointDef() {
      return pulleyJointDef_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder getPulleyJointDefOrBuilder() {
      return pulleyJointDef_;
    }

    // optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;
    public static final int FRICTIONJOINTDEF_FIELD_NUMBER = 9;
    private com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef frictionJointDef_;

    public boolean hasFrictionJointDef() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }

    public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef getFrictionJointDef() {
      return frictionJointDef_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder getFrictionJointDefOrBuilder() {
      return frictionJointDef_;
    }

    // optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;
    public static final int WELDJOINTDEF_FIELD_NUMBER = 10;
    private com.laex.cg2d.protobuf.GameObject.CGWeldJointDef weldJointDef_;

    public boolean hasWeldJointDef() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }

    public com.laex.cg2d.protobuf.GameObject.CGWeldJointDef getWeldJointDef() {
      return weldJointDef_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder getWeldJointDefOrBuilder() {
      return weldJointDef_;
    }

    private void initFields() {
      sourceShapeId_ = "";
      targetShapeId_ = "";
      type_ = com.laex.cg2d.protobuf.GameObject.CGJointType.UNKNOWN;
      distanceJointDef_ = com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance();
      revoluteJointDef_ = com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance();
      prismaticJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance();
      pulleyJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance();
      frictionJointDef_ = com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance();
      weldJointDef_ = com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      if (hasPrismaticJointDef()) {
        if (!getPrismaticJointDef().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPulleyJointDef()) {
        if (!getPulleyJointDef().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSourceShapeIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTargetShapeIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, distanceJointDef_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, revoluteJointDef_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, prismaticJointDef_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, pulleyJointDef_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(9, frictionJointDef_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(10, weldJointDef_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, getSourceShapeIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, getTargetShapeIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, distanceJointDef_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, revoluteJointDef_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, prismaticJointDef_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, pulleyJointDef_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, frictionJointDef_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(10, weldJointDef_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGJoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGJoint_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGJoint_fieldAccessorTable;
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGJoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDistanceJointDefFieldBuilder();
          getRevoluteJointDefFieldBuilder();
          getPrismaticJointDefFieldBuilder();
          getPulleyJointDefFieldBuilder();
          getFrictionJointDefFieldBuilder();
          getWeldJointDefFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sourceShapeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        targetShapeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = com.laex.cg2d.protobuf.GameObject.CGJointType.UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (distanceJointDefBuilder_ == null) {
          distanceJointDef_ = com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance();
        } else {
          distanceJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (revoluteJointDefBuilder_ == null) {
          revoluteJointDef_ = com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance();
        } else {
          revoluteJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (prismaticJointDefBuilder_ == null) {
          prismaticJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance();
        } else {
          prismaticJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (pulleyJointDefBuilder_ == null) {
          pulleyJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance();
        } else {
          pulleyJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (frictionJointDefBuilder_ == null) {
          frictionJointDef_ = com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance();
        } else {
          frictionJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (weldJointDefBuilder_ == null) {
          weldJointDef_ = com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance();
        } else {
          weldJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGJoint.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGJoint getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGJoint.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGJoint build() {
        com.laex.cg2d.protobuf.GameObject.CGJoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGJoint buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGJoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGJoint buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGJoint result = new com.laex.cg2d.protobuf.GameObject.CGJoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sourceShapeId_ = sourceShapeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.targetShapeId_ = targetShapeId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (distanceJointDefBuilder_ == null) {
          result.distanceJointDef_ = distanceJointDef_;
        } else {
          result.distanceJointDef_ = distanceJointDefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (revoluteJointDefBuilder_ == null) {
          result.revoluteJointDef_ = revoluteJointDef_;
        } else {
          result.revoluteJointDef_ = revoluteJointDefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (prismaticJointDefBuilder_ == null) {
          result.prismaticJointDef_ = prismaticJointDef_;
        } else {
          result.prismaticJointDef_ = prismaticJointDefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (pulleyJointDefBuilder_ == null) {
          result.pulleyJointDef_ = pulleyJointDef_;
        } else {
          result.pulleyJointDef_ = pulleyJointDefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (frictionJointDefBuilder_ == null) {
          result.frictionJointDef_ = frictionJointDef_;
        } else {
          result.frictionJointDef_ = frictionJointDefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (weldJointDefBuilder_ == null) {
          result.weldJointDef_ = weldJointDef_;
        } else {
          result.weldJointDef_ = weldJointDefBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGJoint) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGJoint) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGJoint other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGJoint.getDefaultInstance())
          return this;
        if (other.hasSourceShapeId()) {
          setSourceShapeId(other.getSourceShapeId());
        }
        if (other.hasTargetShapeId()) {
          setTargetShapeId(other.getTargetShapeId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDistanceJointDef()) {
          mergeDistanceJointDef(other.getDistanceJointDef());
        }
        if (other.hasRevoluteJointDef()) {
          mergeRevoluteJointDef(other.getRevoluteJointDef());
        }
        if (other.hasPrismaticJointDef()) {
          mergePrismaticJointDef(other.getPrismaticJointDef());
        }
        if (other.hasPulleyJointDef()) {
          mergePulleyJointDef(other.getPulleyJointDef());
        }
        if (other.hasFrictionJointDef()) {
          mergeFrictionJointDef(other.getFrictionJointDef());
        }
        if (other.hasWeldJointDef()) {
          mergeWeldJointDef(other.getWeldJointDef());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasPrismaticJointDef()) {
          if (!getPrismaticJointDef().isInitialized()) {

            return false;
          }
        }
        if (hasPulleyJointDef()) {
          if (!getPulleyJointDef().isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 10: {
            bitField0_ |= 0x00000001;
            sourceShapeId_ = input.readBytes();
            break;
          }
          case 18: {
            bitField0_ |= 0x00000002;
            targetShapeId_ = input.readBytes();
            break;
          }
          case 24: {
            int rawValue = input.readEnum();
            com.laex.cg2d.protobuf.GameObject.CGJointType value = com.laex.cg2d.protobuf.GameObject.CGJointType
                .valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(3, rawValue);
            } else {
              bitField0_ |= 0x00000004;
              type_ = value;
            }
            break;
          }
          case 42: {
            com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef
                .newBuilder();
            if (hasDistanceJointDef()) {
              subBuilder.mergeFrom(getDistanceJointDef());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setDistanceJointDef(subBuilder.buildPartial());
            break;
          }
          case 50: {
            com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef
                .newBuilder();
            if (hasRevoluteJointDef()) {
              subBuilder.mergeFrom(getRevoluteJointDef());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setRevoluteJointDef(subBuilder.buildPartial());
            break;
          }
          case 58: {
            com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef
                .newBuilder();
            if (hasPrismaticJointDef()) {
              subBuilder.mergeFrom(getPrismaticJointDef());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setPrismaticJointDef(subBuilder.buildPartial());
            break;
          }
          case 66: {
            com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef
                .newBuilder();
            if (hasPulleyJointDef()) {
              subBuilder.mergeFrom(getPulleyJointDef());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setPulleyJointDef(subBuilder.buildPartial());
            break;
          }
          case 74: {
            com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef
                .newBuilder();
            if (hasFrictionJointDef()) {
              subBuilder.mergeFrom(getFrictionJointDef());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setFrictionJointDef(subBuilder.buildPartial());
            break;
          }
          case 82: {
            com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGWeldJointDef
                .newBuilder();
            if (hasWeldJointDef()) {
              subBuilder.mergeFrom(getWeldJointDef());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setWeldJointDef(subBuilder.buildPartial());
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional string sourceShapeId = 1;
      private java.lang.Object sourceShapeId_ = "";

      public boolean hasSourceShapeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public String getSourceShapeId() {
        java.lang.Object ref = sourceShapeId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          sourceShapeId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      public Builder setSourceShapeId(String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        sourceShapeId_ = value;
        onChanged();
        return this;
      }

      public Builder clearSourceShapeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sourceShapeId_ = getDefaultInstance().getSourceShapeId();
        onChanged();
        return this;
      }

      void setSourceShapeId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        sourceShapeId_ = value;
        onChanged();
      }

      // optional string targetShapeId = 2;
      private java.lang.Object targetShapeId_ = "";

      public boolean hasTargetShapeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public String getTargetShapeId() {
        java.lang.Object ref = targetShapeId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          targetShapeId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      public Builder setTargetShapeId(String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        targetShapeId_ = value;
        onChanged();
        return this;
      }

      public Builder clearTargetShapeId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetShapeId_ = getDefaultInstance().getTargetShapeId();
        onChanged();
        return this;
      }

      void setTargetShapeId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        targetShapeId_ = value;
        onChanged();
      }

      // optional .com.laex.cg2d.protobuf.CGJointType type = 3;
      private com.laex.cg2d.protobuf.GameObject.CGJointType type_ = com.laex.cg2d.protobuf.GameObject.CGJointType.UNKNOWN;

      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public com.laex.cg2d.protobuf.GameObject.CGJointType getType() {
        return type_;
      }

      public Builder setType(com.laex.cg2d.protobuf.GameObject.CGJointType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }

      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = com.laex.cg2d.protobuf.GameObject.CGJointType.UNKNOWN;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef =
      // 5;
      private com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef distanceJointDef_ = com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder> distanceJointDefBuilder_;

      public boolean hasDistanceJointDef() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef getDistanceJointDef() {
        if (distanceJointDefBuilder_ == null) {
          return distanceJointDef_;
        } else {
          return distanceJointDefBuilder_.getMessage();
        }
      }

      public Builder setDistanceJointDef(com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef value) {
        if (distanceJointDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          distanceJointDef_ = value;
          onChanged();
        } else {
          distanceJointDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }

      public Builder setDistanceJointDef(com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder builderForValue) {
        if (distanceJointDefBuilder_ == null) {
          distanceJointDef_ = builderForValue.build();
          onChanged();
        } else {
          distanceJointDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }

      public Builder mergeDistanceJointDef(com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef value) {
        if (distanceJointDefBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)
              && distanceJointDef_ != com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance()) {
            distanceJointDef_ = com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.newBuilder(distanceJointDef_)
                .mergeFrom(value).buildPartial();
          } else {
            distanceJointDef_ = value;
          }
          onChanged();
        } else {
          distanceJointDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }

      public Builder clearDistanceJointDef() {
        if (distanceJointDefBuilder_ == null) {
          distanceJointDef_ = com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance();
          onChanged();
        } else {
          distanceJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder getDistanceJointDefBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDistanceJointDefFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder getDistanceJointDefOrBuilder() {
        if (distanceJointDefBuilder_ != null) {
          return distanceJointDefBuilder_.getMessageOrBuilder();
        } else {
          return distanceJointDef_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder> getDistanceJointDefFieldBuilder() {
        if (distanceJointDefBuilder_ == null) {
          distanceJointDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder>(
              distanceJointDef_, getParentForChildren(), isClean());
          distanceJointDef_ = null;
        }
        return distanceJointDefBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef =
      // 6;
      private com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef revoluteJointDef_ = com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder> revoluteJointDefBuilder_;

      public boolean hasRevoluteJointDef() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }

      public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef getRevoluteJointDef() {
        if (revoluteJointDefBuilder_ == null) {
          return revoluteJointDef_;
        } else {
          return revoluteJointDefBuilder_.getMessage();
        }
      }

      public Builder setRevoluteJointDef(com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef value) {
        if (revoluteJointDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          revoluteJointDef_ = value;
          onChanged();
        } else {
          revoluteJointDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }

      public Builder setRevoluteJointDef(com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder builderForValue) {
        if (revoluteJointDefBuilder_ == null) {
          revoluteJointDef_ = builderForValue.build();
          onChanged();
        } else {
          revoluteJointDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }

      public Builder mergeRevoluteJointDef(com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef value) {
        if (revoluteJointDefBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)
              && revoluteJointDef_ != com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance()) {
            revoluteJointDef_ = com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.newBuilder(revoluteJointDef_)
                .mergeFrom(value).buildPartial();
          } else {
            revoluteJointDef_ = value;
          }
          onChanged();
        } else {
          revoluteJointDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }

      public Builder clearRevoluteJointDef() {
        if (revoluteJointDefBuilder_ == null) {
          revoluteJointDef_ = com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance();
          onChanged();
        } else {
          revoluteJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder getRevoluteJointDefBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getRevoluteJointDefFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder getRevoluteJointDefOrBuilder() {
        if (revoluteJointDefBuilder_ != null) {
          return revoluteJointDefBuilder_.getMessageOrBuilder();
        } else {
          return revoluteJointDef_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder> getRevoluteJointDefFieldBuilder() {
        if (revoluteJointDefBuilder_ == null) {
          revoluteJointDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder>(
              revoluteJointDef_, getParentForChildren(), isClean());
          revoluteJointDef_ = null;
        }
        return revoluteJointDefBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef
      // = 7;
      private com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef prismaticJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder> prismaticJointDefBuilder_;

      public boolean hasPrismaticJointDef() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }

      public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef getPrismaticJointDef() {
        if (prismaticJointDefBuilder_ == null) {
          return prismaticJointDef_;
        } else {
          return prismaticJointDefBuilder_.getMessage();
        }
      }

      public Builder setPrismaticJointDef(com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef value) {
        if (prismaticJointDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          prismaticJointDef_ = value;
          onChanged();
        } else {
          prismaticJointDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }

      public Builder setPrismaticJointDef(com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder builderForValue) {
        if (prismaticJointDefBuilder_ == null) {
          prismaticJointDef_ = builderForValue.build();
          onChanged();
        } else {
          prismaticJointDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }

      public Builder mergePrismaticJointDef(com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef value) {
        if (prismaticJointDefBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)
              && prismaticJointDef_ != com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance()) {
            prismaticJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.newBuilder(prismaticJointDef_)
                .mergeFrom(value).buildPartial();
          } else {
            prismaticJointDef_ = value;
          }
          onChanged();
        } else {
          prismaticJointDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }

      public Builder clearPrismaticJointDef() {
        if (prismaticJointDefBuilder_ == null) {
          prismaticJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance();
          onChanged();
        } else {
          prismaticJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder getPrismaticJointDefBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getPrismaticJointDefFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder getPrismaticJointDefOrBuilder() {
        if (prismaticJointDefBuilder_ != null) {
          return prismaticJointDefBuilder_.getMessageOrBuilder();
        } else {
          return prismaticJointDef_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder> getPrismaticJointDefFieldBuilder() {
        if (prismaticJointDefBuilder_ == null) {
          prismaticJointDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder>(
              prismaticJointDef_, getParentForChildren(), isClean());
          prismaticJointDef_ = null;
        }
        return prismaticJointDefBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;
      private com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef pulleyJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder> pulleyJointDefBuilder_;

      public boolean hasPulleyJointDef() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }

      public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef getPulleyJointDef() {
        if (pulleyJointDefBuilder_ == null) {
          return pulleyJointDef_;
        } else {
          return pulleyJointDefBuilder_.getMessage();
        }
      }

      public Builder setPulleyJointDef(com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef value) {
        if (pulleyJointDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pulleyJointDef_ = value;
          onChanged();
        } else {
          pulleyJointDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }

      public Builder setPulleyJointDef(com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder builderForValue) {
        if (pulleyJointDefBuilder_ == null) {
          pulleyJointDef_ = builderForValue.build();
          onChanged();
        } else {
          pulleyJointDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }

      public Builder mergePulleyJointDef(com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef value) {
        if (pulleyJointDefBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)
              && pulleyJointDef_ != com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance()) {
            pulleyJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.newBuilder(pulleyJointDef_)
                .mergeFrom(value).buildPartial();
          } else {
            pulleyJointDef_ = value;
          }
          onChanged();
        } else {
          pulleyJointDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }

      public Builder clearPulleyJointDef() {
        if (pulleyJointDefBuilder_ == null) {
          pulleyJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance();
          onChanged();
        } else {
          pulleyJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder getPulleyJointDefBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getPulleyJointDefFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder getPulleyJointDefOrBuilder() {
        if (pulleyJointDefBuilder_ != null) {
          return pulleyJointDefBuilder_.getMessageOrBuilder();
        } else {
          return pulleyJointDef_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder> getPulleyJointDefFieldBuilder() {
        if (pulleyJointDefBuilder_ == null) {
          pulleyJointDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder>(
              pulleyJointDef_, getParentForChildren(), isClean());
          pulleyJointDef_ = null;
        }
        return pulleyJointDefBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef =
      // 9;
      private com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef frictionJointDef_ = com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder> frictionJointDefBuilder_;

      public boolean hasFrictionJointDef() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }

      public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef getFrictionJointDef() {
        if (frictionJointDefBuilder_ == null) {
          return frictionJointDef_;
        } else {
          return frictionJointDefBuilder_.getMessage();
        }
      }

      public Builder setFrictionJointDef(com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef value) {
        if (frictionJointDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          frictionJointDef_ = value;
          onChanged();
        } else {
          frictionJointDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }

      public Builder setFrictionJointDef(com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder builderForValue) {
        if (frictionJointDefBuilder_ == null) {
          frictionJointDef_ = builderForValue.build();
          onChanged();
        } else {
          frictionJointDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }

      public Builder mergeFrictionJointDef(com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef value) {
        if (frictionJointDefBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)
              && frictionJointDef_ != com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance()) {
            frictionJointDef_ = com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.newBuilder(frictionJointDef_)
                .mergeFrom(value).buildPartial();
          } else {
            frictionJointDef_ = value;
          }
          onChanged();
        } else {
          frictionJointDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }

      public Builder clearFrictionJointDef() {
        if (frictionJointDefBuilder_ == null) {
          frictionJointDef_ = com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance();
          onChanged();
        } else {
          frictionJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder getFrictionJointDefBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getFrictionJointDefFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder getFrictionJointDefOrBuilder() {
        if (frictionJointDefBuilder_ != null) {
          return frictionJointDefBuilder_.getMessageOrBuilder();
        } else {
          return frictionJointDef_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder> getFrictionJointDefFieldBuilder() {
        if (frictionJointDefBuilder_ == null) {
          frictionJointDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder>(
              frictionJointDef_, getParentForChildren(), isClean());
          frictionJointDef_ = null;
        }
        return frictionJointDefBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;
      private com.laex.cg2d.protobuf.GameObject.CGWeldJointDef weldJointDef_ = com.laex.cg2d.protobuf.GameObject.CGWeldJointDef
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGWeldJointDef, com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder> weldJointDefBuilder_;

      public boolean hasWeldJointDef() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }

      public com.laex.cg2d.protobuf.GameObject.CGWeldJointDef getWeldJointDef() {
        if (weldJointDefBuilder_ == null) {
          return weldJointDef_;
        } else {
          return weldJointDefBuilder_.getMessage();
        }
      }

      public Builder setWeldJointDef(com.laex.cg2d.protobuf.GameObject.CGWeldJointDef value) {
        if (weldJointDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          weldJointDef_ = value;
          onChanged();
        } else {
          weldJointDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }

      public Builder setWeldJointDef(com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder builderForValue) {
        if (weldJointDefBuilder_ == null) {
          weldJointDef_ = builderForValue.build();
          onChanged();
        } else {
          weldJointDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }

      public Builder mergeWeldJointDef(com.laex.cg2d.protobuf.GameObject.CGWeldJointDef value) {
        if (weldJointDefBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)
              && weldJointDef_ != com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance()) {
            weldJointDef_ = com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.newBuilder(weldJointDef_).mergeFrom(value)
                .buildPartial();
          } else {
            weldJointDef_ = value;
          }
          onChanged();
        } else {
          weldJointDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }

      public Builder clearWeldJointDef() {
        if (weldJointDefBuilder_ == null) {
          weldJointDef_ = com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance();
          onChanged();
        } else {
          weldJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder getWeldJointDefBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getWeldJointDefFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder getWeldJointDefOrBuilder() {
        if (weldJointDefBuilder_ != null) {
          return weldJointDefBuilder_.getMessageOrBuilder();
        } else {
          return weldJointDef_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGWeldJointDef, com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder> getWeldJointDefFieldBuilder() {
        if (weldJointDefBuilder_ == null) {
          weldJointDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGWeldJointDef, com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder>(
              weldJointDef_, getParentForChildren(), isClean());
          weldJointDef_ = null;
        }
        return weldJointDefBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGJoint)
    }

    static {
      defaultInstance = new CGJoint(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGJoint)
  }

  public interface CGDistanceJointDefOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional bool collideConnected = 1;
    boolean hasCollideConnected();

    boolean getCollideConnected();

    // optional float freqencyHz = 2;
    boolean hasFreqencyHz();

    float getFreqencyHz();

    // optional float dampingRatio = 3;
    boolean hasDampingRatio();

    float getDampingRatio();
  }

  public static final class CGDistanceJointDef extends com.google.protobuf.GeneratedMessage implements
      CGDistanceJointDefOrBuilder {
    // Use CGDistanceJointDef.newBuilder() to construct.
    private CGDistanceJointDef(Builder builder) {
      super(builder);
    }

    private CGDistanceJointDef(boolean noInit) {
    }

    private static final CGDistanceJointDef defaultInstance;

    public static CGDistanceJointDef getDefaultInstance() {
      return defaultInstance;
    }

    public CGDistanceJointDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_fieldAccessorTable;
    }

    private int bitField0_;
    // optional bool collideConnected = 1;
    public static final int COLLIDECONNECTED_FIELD_NUMBER = 1;
    private boolean collideConnected_;

    public boolean hasCollideConnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public boolean getCollideConnected() {
      return collideConnected_;
    }

    // optional float freqencyHz = 2;
    public static final int FREQENCYHZ_FIELD_NUMBER = 2;
    private float freqencyHz_;

    public boolean hasFreqencyHz() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public float getFreqencyHz() {
      return freqencyHz_;
    }

    // optional float dampingRatio = 3;
    public static final int DAMPINGRATIO_FIELD_NUMBER = 3;
    private float dampingRatio_;

    public boolean hasDampingRatio() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public float getDampingRatio() {
      return dampingRatio_;
    }

    private void initFields() {
      collideConnected_ = false;
      freqencyHz_ = 0F;
      dampingRatio_ = 0F;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, freqencyHz_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, dampingRatio_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(2, freqencyHz_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(3, dampingRatio_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(
        com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        collideConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        freqencyHz_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        dampingRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef build() {
        com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef result = new com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.collideConnected_ = collideConnected_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.freqencyHz_ = freqencyHz_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dampingRatio_ = dampingRatio_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance())
          return this;
        if (other.hasCollideConnected()) {
          setCollideConnected(other.getCollideConnected());
        }
        if (other.hasFreqencyHz()) {
          setFreqencyHz(other.getFreqencyHz());
        }
        if (other.hasDampingRatio()) {
          setDampingRatio(other.getDampingRatio());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            collideConnected_ = input.readBool();
            break;
          }
          case 21: {
            bitField0_ |= 0x00000002;
            freqencyHz_ = input.readFloat();
            break;
          }
          case 29: {
            bitField0_ |= 0x00000004;
            dampingRatio_ = input.readFloat();
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional bool collideConnected = 1;
      private boolean collideConnected_;

      public boolean hasCollideConnected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public boolean getCollideConnected() {
        return collideConnected_;
      }

      public Builder setCollideConnected(boolean value) {
        bitField0_ |= 0x00000001;
        collideConnected_ = value;
        onChanged();
        return this;
      }

      public Builder clearCollideConnected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        collideConnected_ = false;
        onChanged();
        return this;
      }

      // optional float freqencyHz = 2;
      private float freqencyHz_;

      public boolean hasFreqencyHz() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public float getFreqencyHz() {
        return freqencyHz_;
      }

      public Builder setFreqencyHz(float value) {
        bitField0_ |= 0x00000002;
        freqencyHz_ = value;
        onChanged();
        return this;
      }

      public Builder clearFreqencyHz() {
        bitField0_ = (bitField0_ & ~0x00000002);
        freqencyHz_ = 0F;
        onChanged();
        return this;
      }

      // optional float dampingRatio = 3;
      private float dampingRatio_;

      public boolean hasDampingRatio() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public float getDampingRatio() {
        return dampingRatio_;
      }

      public Builder setDampingRatio(float value) {
        bitField0_ |= 0x00000004;
        dampingRatio_ = value;
        onChanged();
        return this;
      }

      public Builder clearDampingRatio() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dampingRatio_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGDistanceJointDef)
    }

    static {
      defaultInstance = new CGDistanceJointDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGDistanceJointDef)
  }

  public interface CGRevoluteJointDefOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional bool collideConnected = 1;
    boolean hasCollideConnected();

    boolean getCollideConnected();

    // optional float referenceAngle = 2;
    boolean hasReferenceAngle();

    float getReferenceAngle();

    // optional bool enableLimit = 3;
    boolean hasEnableLimit();

    boolean getEnableLimit();

    // optional float lowerAngle = 4;
    boolean hasLowerAngle();

    float getLowerAngle();

    // optional float upperAngle = 5;
    boolean hasUpperAngle();

    float getUpperAngle();

    // optional bool enableMotor = 6;
    boolean hasEnableMotor();

    boolean getEnableMotor();

    // optional float motorSpeed = 7;
    boolean hasMotorSpeed();

    float getMotorSpeed();

    // optional float maxMotorTorque = 8;
    boolean hasMaxMotorTorque();

    float getMaxMotorTorque();
  }

  public static final class CGRevoluteJointDef extends com.google.protobuf.GeneratedMessage implements
      CGRevoluteJointDefOrBuilder {
    // Use CGRevoluteJointDef.newBuilder() to construct.
    private CGRevoluteJointDef(Builder builder) {
      super(builder);
    }

    private CGRevoluteJointDef(boolean noInit) {
    }

    private static final CGRevoluteJointDef defaultInstance;

    public static CGRevoluteJointDef getDefaultInstance() {
      return defaultInstance;
    }

    public CGRevoluteJointDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_fieldAccessorTable;
    }

    private int bitField0_;
    // optional bool collideConnected = 1;
    public static final int COLLIDECONNECTED_FIELD_NUMBER = 1;
    private boolean collideConnected_;

    public boolean hasCollideConnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public boolean getCollideConnected() {
      return collideConnected_;
    }

    // optional float referenceAngle = 2;
    public static final int REFERENCEANGLE_FIELD_NUMBER = 2;
    private float referenceAngle_;

    public boolean hasReferenceAngle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public float getReferenceAngle() {
      return referenceAngle_;
    }

    // optional bool enableLimit = 3;
    public static final int ENABLELIMIT_FIELD_NUMBER = 3;
    private boolean enableLimit_;

    public boolean hasEnableLimit() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public boolean getEnableLimit() {
      return enableLimit_;
    }

    // optional float lowerAngle = 4;
    public static final int LOWERANGLE_FIELD_NUMBER = 4;
    private float lowerAngle_;

    public boolean hasLowerAngle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    public float getLowerAngle() {
      return lowerAngle_;
    }

    // optional float upperAngle = 5;
    public static final int UPPERANGLE_FIELD_NUMBER = 5;
    private float upperAngle_;

    public boolean hasUpperAngle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }

    public float getUpperAngle() {
      return upperAngle_;
    }

    // optional bool enableMotor = 6;
    public static final int ENABLEMOTOR_FIELD_NUMBER = 6;
    private boolean enableMotor_;

    public boolean hasEnableMotor() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }

    public boolean getEnableMotor() {
      return enableMotor_;
    }

    // optional float motorSpeed = 7;
    public static final int MOTORSPEED_FIELD_NUMBER = 7;
    private float motorSpeed_;

    public boolean hasMotorSpeed() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }

    public float getMotorSpeed() {
      return motorSpeed_;
    }

    // optional float maxMotorTorque = 8;
    public static final int MAXMOTORTORQUE_FIELD_NUMBER = 8;
    private float maxMotorTorque_;

    public boolean hasMaxMotorTorque() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }

    public float getMaxMotorTorque() {
      return maxMotorTorque_;
    }

    private void initFields() {
      collideConnected_ = false;
      referenceAngle_ = 0F;
      enableLimit_ = false;
      lowerAngle_ = 0F;
      upperAngle_ = 0F;
      enableMotor_ = false;
      motorSpeed_ = 0F;
      maxMotorTorque_ = 0F;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, referenceAngle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, enableLimit_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, lowerAngle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, upperAngle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, enableMotor_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, motorSpeed_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, maxMotorTorque_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(2, referenceAngle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(3, enableLimit_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(4, lowerAngle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(5, upperAngle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(6, enableMotor_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(7, motorSpeed_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(8, maxMotorTorque_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(
        com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        collideConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        referenceAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        enableLimit_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        lowerAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        upperAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        enableMotor_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        motorSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        maxMotorTorque_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef build() {
        com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef result = new com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.collideConnected_ = collideConnected_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.referenceAngle_ = referenceAngle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.enableLimit_ = enableLimit_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lowerAngle_ = lowerAngle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.upperAngle_ = upperAngle_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.enableMotor_ = enableMotor_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.motorSpeed_ = motorSpeed_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.maxMotorTorque_ = maxMotorTorque_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance())
          return this;
        if (other.hasCollideConnected()) {
          setCollideConnected(other.getCollideConnected());
        }
        if (other.hasReferenceAngle()) {
          setReferenceAngle(other.getReferenceAngle());
        }
        if (other.hasEnableLimit()) {
          setEnableLimit(other.getEnableLimit());
        }
        if (other.hasLowerAngle()) {
          setLowerAngle(other.getLowerAngle());
        }
        if (other.hasUpperAngle()) {
          setUpperAngle(other.getUpperAngle());
        }
        if (other.hasEnableMotor()) {
          setEnableMotor(other.getEnableMotor());
        }
        if (other.hasMotorSpeed()) {
          setMotorSpeed(other.getMotorSpeed());
        }
        if (other.hasMaxMotorTorque()) {
          setMaxMotorTorque(other.getMaxMotorTorque());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            collideConnected_ = input.readBool();
            break;
          }
          case 21: {
            bitField0_ |= 0x00000002;
            referenceAngle_ = input.readFloat();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            enableLimit_ = input.readBool();
            break;
          }
          case 37: {
            bitField0_ |= 0x00000008;
            lowerAngle_ = input.readFloat();
            break;
          }
          case 45: {
            bitField0_ |= 0x00000010;
            upperAngle_ = input.readFloat();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            enableMotor_ = input.readBool();
            break;
          }
          case 61: {
            bitField0_ |= 0x00000040;
            motorSpeed_ = input.readFloat();
            break;
          }
          case 69: {
            bitField0_ |= 0x00000080;
            maxMotorTorque_ = input.readFloat();
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional bool collideConnected = 1;
      private boolean collideConnected_;

      public boolean hasCollideConnected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public boolean getCollideConnected() {
        return collideConnected_;
      }

      public Builder setCollideConnected(boolean value) {
        bitField0_ |= 0x00000001;
        collideConnected_ = value;
        onChanged();
        return this;
      }

      public Builder clearCollideConnected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        collideConnected_ = false;
        onChanged();
        return this;
      }

      // optional float referenceAngle = 2;
      private float referenceAngle_;

      public boolean hasReferenceAngle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public float getReferenceAngle() {
        return referenceAngle_;
      }

      public Builder setReferenceAngle(float value) {
        bitField0_ |= 0x00000002;
        referenceAngle_ = value;
        onChanged();
        return this;
      }

      public Builder clearReferenceAngle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        referenceAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional bool enableLimit = 3;
      private boolean enableLimit_;

      public boolean hasEnableLimit() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public boolean getEnableLimit() {
        return enableLimit_;
      }

      public Builder setEnableLimit(boolean value) {
        bitField0_ |= 0x00000004;
        enableLimit_ = value;
        onChanged();
        return this;
      }

      public Builder clearEnableLimit() {
        bitField0_ = (bitField0_ & ~0x00000004);
        enableLimit_ = false;
        onChanged();
        return this;
      }

      // optional float lowerAngle = 4;
      private float lowerAngle_;

      public boolean hasLowerAngle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public float getLowerAngle() {
        return lowerAngle_;
      }

      public Builder setLowerAngle(float value) {
        bitField0_ |= 0x00000008;
        lowerAngle_ = value;
        onChanged();
        return this;
      }

      public Builder clearLowerAngle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lowerAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float upperAngle = 5;
      private float upperAngle_;

      public boolean hasUpperAngle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }

      public float getUpperAngle() {
        return upperAngle_;
      }

      public Builder setUpperAngle(float value) {
        bitField0_ |= 0x00000010;
        upperAngle_ = value;
        onChanged();
        return this;
      }

      public Builder clearUpperAngle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        upperAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional bool enableMotor = 6;
      private boolean enableMotor_;

      public boolean hasEnableMotor() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }

      public boolean getEnableMotor() {
        return enableMotor_;
      }

      public Builder setEnableMotor(boolean value) {
        bitField0_ |= 0x00000020;
        enableMotor_ = value;
        onChanged();
        return this;
      }

      public Builder clearEnableMotor() {
        bitField0_ = (bitField0_ & ~0x00000020);
        enableMotor_ = false;
        onChanged();
        return this;
      }

      // optional float motorSpeed = 7;
      private float motorSpeed_;

      public boolean hasMotorSpeed() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }

      public float getMotorSpeed() {
        return motorSpeed_;
      }

      public Builder setMotorSpeed(float value) {
        bitField0_ |= 0x00000040;
        motorSpeed_ = value;
        onChanged();
        return this;
      }

      public Builder clearMotorSpeed() {
        bitField0_ = (bitField0_ & ~0x00000040);
        motorSpeed_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxMotorTorque = 8;
      private float maxMotorTorque_;

      public boolean hasMaxMotorTorque() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }

      public float getMaxMotorTorque() {
        return maxMotorTorque_;
      }

      public Builder setMaxMotorTorque(float value) {
        bitField0_ |= 0x00000080;
        maxMotorTorque_ = value;
        onChanged();
        return this;
      }

      public Builder clearMaxMotorTorque() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxMotorTorque_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGRevoluteJointDef)
    }

    static {
      defaultInstance = new CGRevoluteJointDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGRevoluteJointDef)
  }

  public interface CGPrismaticJointDefOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional bool collideConnected = 1;
    boolean hasCollideConnected();

    boolean getCollideConnected();

    // optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;
    boolean hasAnchor();

    com.laex.cg2d.protobuf.GameObject.CGVector2 getAnchor();

    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getAnchorOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;
    boolean hasAxis();

    com.laex.cg2d.protobuf.GameObject.CGVector2 getAxis();

    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getAxisOrBuilder();

    // optional float referenceAngle = 5;
    boolean hasReferenceAngle();

    float getReferenceAngle();

    // optional bool enableLimit = 6;
    boolean hasEnableLimit();

    boolean getEnableLimit();

    // optional float lowerTranslation = 7;
    boolean hasLowerTranslation();

    float getLowerTranslation();

    // optional float upperTranslation = 8;
    boolean hasUpperTranslation();

    float getUpperTranslation();

    // optional bool enableMotor = 9;
    boolean hasEnableMotor();

    boolean getEnableMotor();

    // optional float maxMotorForce = 10;
    boolean hasMaxMotorForce();

    float getMaxMotorForce();

    // optional float motorSpeed = 11;
    boolean hasMotorSpeed();

    float getMotorSpeed();
  }

  public static final class CGPrismaticJointDef extends com.google.protobuf.GeneratedMessage implements
      CGPrismaticJointDefOrBuilder {
    // Use CGPrismaticJointDef.newBuilder() to construct.
    private CGPrismaticJointDef(Builder builder) {
      super(builder);
    }

    private CGPrismaticJointDef(boolean noInit) {
    }

    private static final CGPrismaticJointDef defaultInstance;

    public static CGPrismaticJointDef getDefaultInstance() {
      return defaultInstance;
    }

    public CGPrismaticJointDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_fieldAccessorTable;
    }

    private int bitField0_;
    // optional bool collideConnected = 1;
    public static final int COLLIDECONNECTED_FIELD_NUMBER = 1;
    private boolean collideConnected_;

    public boolean hasCollideConnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public boolean getCollideConnected() {
      return collideConnected_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;
    public static final int ANCHOR_FIELD_NUMBER = 2;
    private com.laex.cg2d.protobuf.GameObject.CGVector2 anchor_;

    public boolean hasAnchor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2 getAnchor() {
      return anchor_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getAnchorOrBuilder() {
      return anchor_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;
    public static final int AXIS_FIELD_NUMBER = 3;
    private com.laex.cg2d.protobuf.GameObject.CGVector2 axis_;

    public boolean hasAxis() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2 getAxis() {
      return axis_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getAxisOrBuilder() {
      return axis_;
    }

    // optional float referenceAngle = 5;
    public static final int REFERENCEANGLE_FIELD_NUMBER = 5;
    private float referenceAngle_;

    public boolean hasReferenceAngle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    public float getReferenceAngle() {
      return referenceAngle_;
    }

    // optional bool enableLimit = 6;
    public static final int ENABLELIMIT_FIELD_NUMBER = 6;
    private boolean enableLimit_;

    public boolean hasEnableLimit() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }

    public boolean getEnableLimit() {
      return enableLimit_;
    }

    // optional float lowerTranslation = 7;
    public static final int LOWERTRANSLATION_FIELD_NUMBER = 7;
    private float lowerTranslation_;

    public boolean hasLowerTranslation() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }

    public float getLowerTranslation() {
      return lowerTranslation_;
    }

    // optional float upperTranslation = 8;
    public static final int UPPERTRANSLATION_FIELD_NUMBER = 8;
    private float upperTranslation_;

    public boolean hasUpperTranslation() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }

    public float getUpperTranslation() {
      return upperTranslation_;
    }

    // optional bool enableMotor = 9;
    public static final int ENABLEMOTOR_FIELD_NUMBER = 9;
    private boolean enableMotor_;

    public boolean hasEnableMotor() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }

    public boolean getEnableMotor() {
      return enableMotor_;
    }

    // optional float maxMotorForce = 10;
    public static final int MAXMOTORFORCE_FIELD_NUMBER = 10;
    private float maxMotorForce_;

    public boolean hasMaxMotorForce() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }

    public float getMaxMotorForce() {
      return maxMotorForce_;
    }

    // optional float motorSpeed = 11;
    public static final int MOTORSPEED_FIELD_NUMBER = 11;
    private float motorSpeed_;

    public boolean hasMotorSpeed() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }

    public float getMotorSpeed() {
      return motorSpeed_;
    }

    private void initFields() {
      collideConnected_ = false;
      anchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      axis_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      referenceAngle_ = 0F;
      enableLimit_ = false;
      lowerTranslation_ = 0F;
      upperTranslation_ = 0F;
      enableMotor_ = false;
      maxMotorForce_ = 0F;
      motorSpeed_ = 0F;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      if (hasAnchor()) {
        if (!getAnchor().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasAxis()) {
        if (!getAxis().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, anchor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, axis_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(5, referenceAngle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, enableLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(7, lowerTranslation_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(8, upperTranslation_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(9, enableMotor_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(10, maxMotorForce_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(11, motorSpeed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, anchor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, axis_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(5, referenceAngle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(6, enableLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(7, lowerTranslation_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(8, upperTranslation_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(9, enableMotor_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(10, maxMotorForce_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(11, motorSpeed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(
        com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAnchorFieldBuilder();
          getAxisFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        collideConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (anchorBuilder_ == null) {
          anchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          anchorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (axisBuilder_ == null) {
          axis_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          axisBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        referenceAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        enableLimit_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        lowerTranslation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        upperTranslation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        enableMotor_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        maxMotorForce_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        motorSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef build() {
        com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef result = new com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.collideConnected_ = collideConnected_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (anchorBuilder_ == null) {
          result.anchor_ = anchor_;
        } else {
          result.anchor_ = anchorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (axisBuilder_ == null) {
          result.axis_ = axis_;
        } else {
          result.axis_ = axisBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.referenceAngle_ = referenceAngle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.enableLimit_ = enableLimit_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lowerTranslation_ = lowerTranslation_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.upperTranslation_ = upperTranslation_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.enableMotor_ = enableMotor_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.maxMotorForce_ = maxMotorForce_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.motorSpeed_ = motorSpeed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance())
          return this;
        if (other.hasCollideConnected()) {
          setCollideConnected(other.getCollideConnected());
        }
        if (other.hasAnchor()) {
          mergeAnchor(other.getAnchor());
        }
        if (other.hasAxis()) {
          mergeAxis(other.getAxis());
        }
        if (other.hasReferenceAngle()) {
          setReferenceAngle(other.getReferenceAngle());
        }
        if (other.hasEnableLimit()) {
          setEnableLimit(other.getEnableLimit());
        }
        if (other.hasLowerTranslation()) {
          setLowerTranslation(other.getLowerTranslation());
        }
        if (other.hasUpperTranslation()) {
          setUpperTranslation(other.getUpperTranslation());
        }
        if (other.hasEnableMotor()) {
          setEnableMotor(other.getEnableMotor());
        }
        if (other.hasMaxMotorForce()) {
          setMaxMotorForce(other.getMaxMotorForce());
        }
        if (other.hasMotorSpeed()) {
          setMotorSpeed(other.getMotorSpeed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasAnchor()) {
          if (!getAnchor().isInitialized()) {

            return false;
          }
        }
        if (hasAxis()) {
          if (!getAxis().isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            collideConnected_ = input.readBool();
            break;
          }
          case 18: {
            com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGVector2
                .newBuilder();
            if (hasAnchor()) {
              subBuilder.mergeFrom(getAnchor());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setAnchor(subBuilder.buildPartial());
            break;
          }
          case 26: {
            com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGVector2
                .newBuilder();
            if (hasAxis()) {
              subBuilder.mergeFrom(getAxis());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setAxis(subBuilder.buildPartial());
            break;
          }
          case 45: {
            bitField0_ |= 0x00000008;
            referenceAngle_ = input.readFloat();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000010;
            enableLimit_ = input.readBool();
            break;
          }
          case 61: {
            bitField0_ |= 0x00000020;
            lowerTranslation_ = input.readFloat();
            break;
          }
          case 69: {
            bitField0_ |= 0x00000040;
            upperTranslation_ = input.readFloat();
            break;
          }
          case 72: {
            bitField0_ |= 0x00000080;
            enableMotor_ = input.readBool();
            break;
          }
          case 85: {
            bitField0_ |= 0x00000100;
            maxMotorForce_ = input.readFloat();
            break;
          }
          case 93: {
            bitField0_ |= 0x00000200;
            motorSpeed_ = input.readFloat();
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional bool collideConnected = 1;
      private boolean collideConnected_;

      public boolean hasCollideConnected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public boolean getCollideConnected() {
        return collideConnected_;
      }

      public Builder setCollideConnected(boolean value) {
        bitField0_ |= 0x00000001;
        collideConnected_ = value;
        onChanged();
        return this;
      }

      public Builder clearCollideConnected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        collideConnected_ = false;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;
      private com.laex.cg2d.protobuf.GameObject.CGVector2 anchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> anchorBuilder_;

      public boolean hasAnchor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2 getAnchor() {
        if (anchorBuilder_ == null) {
          return anchor_;
        } else {
          return anchorBuilder_.getMessage();
        }
      }

      public Builder setAnchor(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (anchorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          anchor_ = value;
          onChanged();
        } else {
          anchorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder setAnchor(com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (anchorBuilder_ == null) {
          anchor_ = builderForValue.build();
          onChanged();
        } else {
          anchorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder mergeAnchor(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (anchorBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)
              && anchor_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            anchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(anchor_).mergeFrom(value).buildPartial();
          } else {
            anchor_ = value;
          }
          onChanged();
        } else {
          anchorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder clearAnchor() {
        if (anchorBuilder_ == null) {
          anchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          anchorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getAnchorBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAnchorFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getAnchorOrBuilder() {
        if (anchorBuilder_ != null) {
          return anchorBuilder_.getMessageOrBuilder();
        } else {
          return anchor_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> getAnchorFieldBuilder() {
        if (anchorBuilder_ == null) {
          anchorBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
              anchor_, getParentForChildren(), isClean());
          anchor_ = null;
        }
        return anchorBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;
      private com.laex.cg2d.protobuf.GameObject.CGVector2 axis_ = com.laex.cg2d.protobuf.GameObject.CGVector2
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> axisBuilder_;

      public boolean hasAxis() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2 getAxis() {
        if (axisBuilder_ == null) {
          return axis_;
        } else {
          return axisBuilder_.getMessage();
        }
      }

      public Builder setAxis(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (axisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          axis_ = value;
          onChanged();
        } else {
          axisBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }

      public Builder setAxis(com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (axisBuilder_ == null) {
          axis_ = builderForValue.build();
          onChanged();
        } else {
          axisBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }

      public Builder mergeAxis(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (axisBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)
              && axis_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            axis_ = com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(axis_).mergeFrom(value).buildPartial();
          } else {
            axis_ = value;
          }
          onChanged();
        } else {
          axisBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }

      public Builder clearAxis() {
        if (axisBuilder_ == null) {
          axis_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          axisBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getAxisBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getAxisFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getAxisOrBuilder() {
        if (axisBuilder_ != null) {
          return axisBuilder_.getMessageOrBuilder();
        } else {
          return axis_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> getAxisFieldBuilder() {
        if (axisBuilder_ == null) {
          axisBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
              axis_, getParentForChildren(), isClean());
          axis_ = null;
        }
        return axisBuilder_;
      }

      // optional float referenceAngle = 5;
      private float referenceAngle_;

      public boolean hasReferenceAngle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public float getReferenceAngle() {
        return referenceAngle_;
      }

      public Builder setReferenceAngle(float value) {
        bitField0_ |= 0x00000008;
        referenceAngle_ = value;
        onChanged();
        return this;
      }

      public Builder clearReferenceAngle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        referenceAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional bool enableLimit = 6;
      private boolean enableLimit_;

      public boolean hasEnableLimit() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }

      public boolean getEnableLimit() {
        return enableLimit_;
      }

      public Builder setEnableLimit(boolean value) {
        bitField0_ |= 0x00000010;
        enableLimit_ = value;
        onChanged();
        return this;
      }

      public Builder clearEnableLimit() {
        bitField0_ = (bitField0_ & ~0x00000010);
        enableLimit_ = false;
        onChanged();
        return this;
      }

      // optional float lowerTranslation = 7;
      private float lowerTranslation_;

      public boolean hasLowerTranslation() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }

      public float getLowerTranslation() {
        return lowerTranslation_;
      }

      public Builder setLowerTranslation(float value) {
        bitField0_ |= 0x00000020;
        lowerTranslation_ = value;
        onChanged();
        return this;
      }

      public Builder clearLowerTranslation() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lowerTranslation_ = 0F;
        onChanged();
        return this;
      }

      // optional float upperTranslation = 8;
      private float upperTranslation_;

      public boolean hasUpperTranslation() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }

      public float getUpperTranslation() {
        return upperTranslation_;
      }

      public Builder setUpperTranslation(float value) {
        bitField0_ |= 0x00000040;
        upperTranslation_ = value;
        onChanged();
        return this;
      }

      public Builder clearUpperTranslation() {
        bitField0_ = (bitField0_ & ~0x00000040);
        upperTranslation_ = 0F;
        onChanged();
        return this;
      }

      // optional bool enableMotor = 9;
      private boolean enableMotor_;

      public boolean hasEnableMotor() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }

      public boolean getEnableMotor() {
        return enableMotor_;
      }

      public Builder setEnableMotor(boolean value) {
        bitField0_ |= 0x00000080;
        enableMotor_ = value;
        onChanged();
        return this;
      }

      public Builder clearEnableMotor() {
        bitField0_ = (bitField0_ & ~0x00000080);
        enableMotor_ = false;
        onChanged();
        return this;
      }

      // optional float maxMotorForce = 10;
      private float maxMotorForce_;

      public boolean hasMaxMotorForce() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }

      public float getMaxMotorForce() {
        return maxMotorForce_;
      }

      public Builder setMaxMotorForce(float value) {
        bitField0_ |= 0x00000100;
        maxMotorForce_ = value;
        onChanged();
        return this;
      }

      public Builder clearMaxMotorForce() {
        bitField0_ = (bitField0_ & ~0x00000100);
        maxMotorForce_ = 0F;
        onChanged();
        return this;
      }

      // optional float motorSpeed = 11;
      private float motorSpeed_;

      public boolean hasMotorSpeed() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }

      public float getMotorSpeed() {
        return motorSpeed_;
      }

      public Builder setMotorSpeed(float value) {
        bitField0_ |= 0x00000200;
        motorSpeed_ = value;
        onChanged();
        return this;
      }

      public Builder clearMotorSpeed() {
        bitField0_ = (bitField0_ & ~0x00000200);
        motorSpeed_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGPrismaticJointDef)
    }

    static {
      defaultInstance = new CGPrismaticJointDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGPrismaticJointDef)
  }

  public interface CGPulleyJointDefOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional bool collideConnected = 1;
    boolean hasCollideConnected();

    boolean getCollideConnected();

    // optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;
    boolean hasGroundAnchorA();

    com.laex.cg2d.protobuf.GameObject.CGVector2 getGroundAnchorA();

    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getGroundAnchorAOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;
    boolean hasGroundAnchorB();

    com.laex.cg2d.protobuf.GameObject.CGVector2 getGroundAnchorB();

    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getGroundAnchorBOrBuilder();

    // optional float ratio = 4;
    boolean hasRatio();

    float getRatio();
  }

  public static final class CGPulleyJointDef extends com.google.protobuf.GeneratedMessage implements
      CGPulleyJointDefOrBuilder {
    // Use CGPulleyJointDef.newBuilder() to construct.
    private CGPulleyJointDef(Builder builder) {
      super(builder);
    }

    private CGPulleyJointDef(boolean noInit) {
    }

    private static final CGPulleyJointDef defaultInstance;

    public static CGPulleyJointDef getDefaultInstance() {
      return defaultInstance;
    }

    public CGPulleyJointDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_fieldAccessorTable;
    }

    private int bitField0_;
    // optional bool collideConnected = 1;
    public static final int COLLIDECONNECTED_FIELD_NUMBER = 1;
    private boolean collideConnected_;

    public boolean hasCollideConnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public boolean getCollideConnected() {
      return collideConnected_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;
    public static final int GROUNDANCHORA_FIELD_NUMBER = 2;
    private com.laex.cg2d.protobuf.GameObject.CGVector2 groundAnchorA_;

    public boolean hasGroundAnchorA() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2 getGroundAnchorA() {
      return groundAnchorA_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getGroundAnchorAOrBuilder() {
      return groundAnchorA_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;
    public static final int GROUNDANCHORB_FIELD_NUMBER = 3;
    private com.laex.cg2d.protobuf.GameObject.CGVector2 groundAnchorB_;

    public boolean hasGroundAnchorB() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2 getGroundAnchorB() {
      return groundAnchorB_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getGroundAnchorBOrBuilder() {
      return groundAnchorB_;
    }

    // optional float ratio = 4;
    public static final int RATIO_FIELD_NUMBER = 4;
    private float ratio_;

    public boolean hasRatio() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    public float getRatio() {
      return ratio_;
    }

    private void initFields() {
      collideConnected_ = false;
      groundAnchorA_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      groundAnchorB_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      ratio_ = 0F;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      if (hasGroundAnchorA()) {
        if (!getGroundAnchorA().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGroundAnchorB()) {
        if (!getGroundAnchorB().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, groundAnchorA_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, groundAnchorB_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, ratio_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, groundAnchorA_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, groundAnchorB_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(4, ratio_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(
        com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGroundAnchorAFieldBuilder();
          getGroundAnchorBFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        collideConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (groundAnchorABuilder_ == null) {
          groundAnchorA_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          groundAnchorABuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (groundAnchorBBuilder_ == null) {
          groundAnchorB_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          groundAnchorBBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        ratio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef build() {
        com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef result = new com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.collideConnected_ = collideConnected_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (groundAnchorABuilder_ == null) {
          result.groundAnchorA_ = groundAnchorA_;
        } else {
          result.groundAnchorA_ = groundAnchorABuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (groundAnchorBBuilder_ == null) {
          result.groundAnchorB_ = groundAnchorB_;
        } else {
          result.groundAnchorB_ = groundAnchorBBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ratio_ = ratio_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance())
          return this;
        if (other.hasCollideConnected()) {
          setCollideConnected(other.getCollideConnected());
        }
        if (other.hasGroundAnchorA()) {
          mergeGroundAnchorA(other.getGroundAnchorA());
        }
        if (other.hasGroundAnchorB()) {
          mergeGroundAnchorB(other.getGroundAnchorB());
        }
        if (other.hasRatio()) {
          setRatio(other.getRatio());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasGroundAnchorA()) {
          if (!getGroundAnchorA().isInitialized()) {

            return false;
          }
        }
        if (hasGroundAnchorB()) {
          if (!getGroundAnchorB().isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            collideConnected_ = input.readBool();
            break;
          }
          case 18: {
            com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGVector2
                .newBuilder();
            if (hasGroundAnchorA()) {
              subBuilder.mergeFrom(getGroundAnchorA());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setGroundAnchorA(subBuilder.buildPartial());
            break;
          }
          case 26: {
            com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGVector2
                .newBuilder();
            if (hasGroundAnchorB()) {
              subBuilder.mergeFrom(getGroundAnchorB());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setGroundAnchorB(subBuilder.buildPartial());
            break;
          }
          case 37: {
            bitField0_ |= 0x00000008;
            ratio_ = input.readFloat();
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional bool collideConnected = 1;
      private boolean collideConnected_;

      public boolean hasCollideConnected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public boolean getCollideConnected() {
        return collideConnected_;
      }

      public Builder setCollideConnected(boolean value) {
        bitField0_ |= 0x00000001;
        collideConnected_ = value;
        onChanged();
        return this;
      }

      public Builder clearCollideConnected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        collideConnected_ = false;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;
      private com.laex.cg2d.protobuf.GameObject.CGVector2 groundAnchorA_ = com.laex.cg2d.protobuf.GameObject.CGVector2
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> groundAnchorABuilder_;

      public boolean hasGroundAnchorA() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2 getGroundAnchorA() {
        if (groundAnchorABuilder_ == null) {
          return groundAnchorA_;
        } else {
          return groundAnchorABuilder_.getMessage();
        }
      }

      public Builder setGroundAnchorA(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (groundAnchorABuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groundAnchorA_ = value;
          onChanged();
        } else {
          groundAnchorABuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder setGroundAnchorA(com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (groundAnchorABuilder_ == null) {
          groundAnchorA_ = builderForValue.build();
          onChanged();
        } else {
          groundAnchorABuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder mergeGroundAnchorA(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (groundAnchorABuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)
              && groundAnchorA_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            groundAnchorA_ = com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(groundAnchorA_).mergeFrom(value)
                .buildPartial();
          } else {
            groundAnchorA_ = value;
          }
          onChanged();
        } else {
          groundAnchorABuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder clearGroundAnchorA() {
        if (groundAnchorABuilder_ == null) {
          groundAnchorA_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          groundAnchorABuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getGroundAnchorABuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getGroundAnchorAFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getGroundAnchorAOrBuilder() {
        if (groundAnchorABuilder_ != null) {
          return groundAnchorABuilder_.getMessageOrBuilder();
        } else {
          return groundAnchorA_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> getGroundAnchorAFieldBuilder() {
        if (groundAnchorABuilder_ == null) {
          groundAnchorABuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
              groundAnchorA_, getParentForChildren(), isClean());
          groundAnchorA_ = null;
        }
        return groundAnchorABuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;
      private com.laex.cg2d.protobuf.GameObject.CGVector2 groundAnchorB_ = com.laex.cg2d.protobuf.GameObject.CGVector2
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> groundAnchorBBuilder_;

      public boolean hasGroundAnchorB() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2 getGroundAnchorB() {
        if (groundAnchorBBuilder_ == null) {
          return groundAnchorB_;
        } else {
          return groundAnchorBBuilder_.getMessage();
        }
      }

      public Builder setGroundAnchorB(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (groundAnchorBBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groundAnchorB_ = value;
          onChanged();
        } else {
          groundAnchorBBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }

      public Builder setGroundAnchorB(com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (groundAnchorBBuilder_ == null) {
          groundAnchorB_ = builderForValue.build();
          onChanged();
        } else {
          groundAnchorBBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }

      public Builder mergeGroundAnchorB(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (groundAnchorBBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)
              && groundAnchorB_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            groundAnchorB_ = com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(groundAnchorB_).mergeFrom(value)
                .buildPartial();
          } else {
            groundAnchorB_ = value;
          }
          onChanged();
        } else {
          groundAnchorBBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }

      public Builder clearGroundAnchorB() {
        if (groundAnchorBBuilder_ == null) {
          groundAnchorB_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          groundAnchorBBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getGroundAnchorBBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getGroundAnchorBFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getGroundAnchorBOrBuilder() {
        if (groundAnchorBBuilder_ != null) {
          return groundAnchorBBuilder_.getMessageOrBuilder();
        } else {
          return groundAnchorB_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> getGroundAnchorBFieldBuilder() {
        if (groundAnchorBBuilder_ == null) {
          groundAnchorBBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
              groundAnchorB_, getParentForChildren(), isClean());
          groundAnchorB_ = null;
        }
        return groundAnchorBBuilder_;
      }

      // optional float ratio = 4;
      private float ratio_;

      public boolean hasRatio() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public float getRatio() {
        return ratio_;
      }

      public Builder setRatio(float value) {
        bitField0_ |= 0x00000008;
        ratio_ = value;
        onChanged();
        return this;
      }

      public Builder clearRatio() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ratio_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGPulleyJointDef)
    }

    static {
      defaultInstance = new CGPulleyJointDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGPulleyJointDef)
  }

  public interface CGFrictionJointDefOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional bool collideConnected = 1;
    boolean hasCollideConnected();

    boolean getCollideConnected();

    // optional float maxForce = 2;
    boolean hasMaxForce();

    float getMaxForce();

    // optional float maxTorque = 3;
    boolean hasMaxTorque();

    float getMaxTorque();
  }

  public static final class CGFrictionJointDef extends com.google.protobuf.GeneratedMessage implements
      CGFrictionJointDefOrBuilder {
    // Use CGFrictionJointDef.newBuilder() to construct.
    private CGFrictionJointDef(Builder builder) {
      super(builder);
    }

    private CGFrictionJointDef(boolean noInit) {
    }

    private static final CGFrictionJointDef defaultInstance;

    public static CGFrictionJointDef getDefaultInstance() {
      return defaultInstance;
    }

    public CGFrictionJointDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_fieldAccessorTable;
    }

    private int bitField0_;
    // optional bool collideConnected = 1;
    public static final int COLLIDECONNECTED_FIELD_NUMBER = 1;
    private boolean collideConnected_;

    public boolean hasCollideConnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public boolean getCollideConnected() {
      return collideConnected_;
    }

    // optional float maxForce = 2;
    public static final int MAXFORCE_FIELD_NUMBER = 2;
    private float maxForce_;

    public boolean hasMaxForce() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public float getMaxForce() {
      return maxForce_;
    }

    // optional float maxTorque = 3;
    public static final int MAXTORQUE_FIELD_NUMBER = 3;
    private float maxTorque_;

    public boolean hasMaxTorque() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public float getMaxTorque() {
      return maxTorque_;
    }

    private void initFields() {
      collideConnected_ = false;
      maxForce_ = 0F;
      maxTorque_ = 0F;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, maxForce_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, maxTorque_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(2, maxForce_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(3, maxTorque_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(
        com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        collideConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxForce_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxTorque_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef build() {
        com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef result = new com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.collideConnected_ = collideConnected_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxForce_ = maxForce_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxTorque_ = maxTorque_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance())
          return this;
        if (other.hasCollideConnected()) {
          setCollideConnected(other.getCollideConnected());
        }
        if (other.hasMaxForce()) {
          setMaxForce(other.getMaxForce());
        }
        if (other.hasMaxTorque()) {
          setMaxTorque(other.getMaxTorque());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            collideConnected_ = input.readBool();
            break;
          }
          case 21: {
            bitField0_ |= 0x00000002;
            maxForce_ = input.readFloat();
            break;
          }
          case 29: {
            bitField0_ |= 0x00000004;
            maxTorque_ = input.readFloat();
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional bool collideConnected = 1;
      private boolean collideConnected_;

      public boolean hasCollideConnected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public boolean getCollideConnected() {
        return collideConnected_;
      }

      public Builder setCollideConnected(boolean value) {
        bitField0_ |= 0x00000001;
        collideConnected_ = value;
        onChanged();
        return this;
      }

      public Builder clearCollideConnected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        collideConnected_ = false;
        onChanged();
        return this;
      }

      // optional float maxForce = 2;
      private float maxForce_;

      public boolean hasMaxForce() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public float getMaxForce() {
        return maxForce_;
      }

      public Builder setMaxForce(float value) {
        bitField0_ |= 0x00000002;
        maxForce_ = value;
        onChanged();
        return this;
      }

      public Builder clearMaxForce() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxForce_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxTorque = 3;
      private float maxTorque_;

      public boolean hasMaxTorque() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public float getMaxTorque() {
        return maxTorque_;
      }

      public Builder setMaxTorque(float value) {
        bitField0_ |= 0x00000004;
        maxTorque_ = value;
        onChanged();
        return this;
      }

      public Builder clearMaxTorque() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxTorque_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGFrictionJointDef)
    }

    static {
      defaultInstance = new CGFrictionJointDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGFrictionJointDef)
  }

  public interface CGWeldJointDefOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional bool collideConnected = 1;
    boolean hasCollideConnected();

    boolean getCollideConnected();
  }

  public static final class CGWeldJointDef extends com.google.protobuf.GeneratedMessage implements
      CGWeldJointDefOrBuilder {
    // Use CGWeldJointDef.newBuilder() to construct.
    private CGWeldJointDef(Builder builder) {
      super(builder);
    }

    private CGWeldJointDef(boolean noInit) {
    }

    private static final CGWeldJointDef defaultInstance;

    public static CGWeldJointDef getDefaultInstance() {
      return defaultInstance;
    }

    public CGWeldJointDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_fieldAccessorTable;
    }

    private int bitField0_;
    // optional bool collideConnected = 1;
    public static final int COLLIDECONNECTED_FIELD_NUMBER = 1;
    private boolean collideConnected_;

    public boolean hasCollideConnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public boolean getCollideConnected() {
      return collideConnected_;
    }

    private void initFields() {
      collideConnected_ = false;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, collideConnected_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, collideConnected_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(
        com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGWeldJointDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        collideConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGWeldJointDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGWeldJointDef build() {
        com.laex.cg2d.protobuf.GameObject.CGWeldJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGWeldJointDef buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGWeldJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGWeldJointDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGWeldJointDef result = new com.laex.cg2d.protobuf.GameObject.CGWeldJointDef(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.collideConnected_ = collideConnected_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGWeldJointDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGWeldJointDef) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGWeldJointDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance())
          return this;
        if (other.hasCollideConnected()) {
          setCollideConnected(other.getCollideConnected());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            collideConnected_ = input.readBool();
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional bool collideConnected = 1;
      private boolean collideConnected_;

      public boolean hasCollideConnected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public boolean getCollideConnected() {
        return collideConnected_;
      }

      public Builder setCollideConnected(boolean value) {
        bitField0_ |= 0x00000001;
        collideConnected_ = value;
        onChanged();
        return this;
      }

      public Builder clearCollideConnected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        collideConnected_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGWeldJointDef)
    }

    static {
      defaultInstance = new CGWeldJointDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGWeldJointDef)
  }

  public interface CGResourceFileOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional string resourceFile = 1;
    boolean hasResourceFile();

    String getResourceFile();

    // optional string resourceFileAbsolute = 2;
    boolean hasResourceFileAbsolute();

    String getResourceFileAbsolute();
  }

  public static final class CGResourceFile extends com.google.protobuf.GeneratedMessage implements
      CGResourceFileOrBuilder {
    // Use CGResourceFile.newBuilder() to construct.
    private CGResourceFile(Builder builder) {
      super(builder);
    }

    private CGResourceFile(boolean noInit) {
    }

    private static final CGResourceFile defaultInstance;

    public static CGResourceFile getDefaultInstance() {
      return defaultInstance;
    }

    public CGResourceFile getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGResourceFile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGResourceFile_fieldAccessorTable;
    }

    private int bitField0_;
    // optional string resourceFile = 1;
    public static final int RESOURCEFILE_FIELD_NUMBER = 1;
    private java.lang.Object resourceFile_;

    public boolean hasResourceFile() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public String getResourceFile() {
      java.lang.Object ref = resourceFile_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          resourceFile_ = s;
        }
        return s;
      }
    }

    private com.google.protobuf.ByteString getResourceFileBytes() {
      java.lang.Object ref = resourceFile_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        resourceFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string resourceFileAbsolute = 2;
    public static final int RESOURCEFILEABSOLUTE_FIELD_NUMBER = 2;
    private java.lang.Object resourceFileAbsolute_;

    public boolean hasResourceFileAbsolute() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public String getResourceFileAbsolute() {
      java.lang.Object ref = resourceFileAbsolute_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          resourceFileAbsolute_ = s;
        }
        return s;
      }
    }

    private com.google.protobuf.ByteString getResourceFileAbsoluteBytes() {
      java.lang.Object ref = resourceFileAbsolute_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        resourceFileAbsolute_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      resourceFile_ = "";
      resourceFileAbsolute_ = "";
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getResourceFileBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getResourceFileAbsoluteBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, getResourceFileBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, getResourceFileAbsoluteBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(
        com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGResourceFile prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGResourceFile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGResourceFile_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGResourceFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        resourceFile_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        resourceFileAbsolute_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFile getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFile build() {
        com.laex.cg2d.protobuf.GameObject.CGResourceFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGResourceFile buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGResourceFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFile buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGResourceFile result = new com.laex.cg2d.protobuf.GameObject.CGResourceFile(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.resourceFile_ = resourceFile_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.resourceFileAbsolute_ = resourceFileAbsolute_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGResourceFile) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGResourceFile) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGResourceFile other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance())
          return this;
        if (other.hasResourceFile()) {
          setResourceFile(other.getResourceFile());
        }
        if (other.hasResourceFileAbsolute()) {
          setResourceFileAbsolute(other.getResourceFileAbsolute());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 10: {
            bitField0_ |= 0x00000001;
            resourceFile_ = input.readBytes();
            break;
          }
          case 18: {
            bitField0_ |= 0x00000002;
            resourceFileAbsolute_ = input.readBytes();
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional string resourceFile = 1;
      private java.lang.Object resourceFile_ = "";

      public boolean hasResourceFile() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public String getResourceFile() {
        java.lang.Object ref = resourceFile_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          resourceFile_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      public Builder setResourceFile(String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        resourceFile_ = value;
        onChanged();
        return this;
      }

      public Builder clearResourceFile() {
        bitField0_ = (bitField0_ & ~0x00000001);
        resourceFile_ = getDefaultInstance().getResourceFile();
        onChanged();
        return this;
      }

      void setResourceFile(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        resourceFile_ = value;
        onChanged();
      }

      // optional string resourceFileAbsolute = 2;
      private java.lang.Object resourceFileAbsolute_ = "";

      public boolean hasResourceFileAbsolute() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public String getResourceFileAbsolute() {
        java.lang.Object ref = resourceFileAbsolute_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          resourceFileAbsolute_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      public Builder setResourceFileAbsolute(String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        resourceFileAbsolute_ = value;
        onChanged();
        return this;
      }

      public Builder clearResourceFileAbsolute() {
        bitField0_ = (bitField0_ & ~0x00000002);
        resourceFileAbsolute_ = getDefaultInstance().getResourceFileAbsolute();
        onChanged();
        return this;
      }

      void setResourceFileAbsolute(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        resourceFileAbsolute_ = value;
        onChanged();
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGResourceFile)
    }

    static {
      defaultInstance = new CGResourceFile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGResourceFile)
  }

  public interface CGEntityAnimationOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional string animationName = 1;
    boolean hasAnimationName();

    String getAnimationName();

    // optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile =
    // 2;
    boolean hasAnimationResourceFile();

    com.laex.cg2d.protobuf.GameObject.CGResourceFile getAnimationResourceFile();

    com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getAnimationResourceFileOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;
    boolean hasFixtureFile();

    com.laex.cg2d.protobuf.GameObject.CGResourceFile getFixtureFile();

    com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getFixtureFileOrBuilder();

    // optional float animationDuration = 4;
    boolean hasAnimationDuration();

    float getAnimationDuration();

    // optional bool defaultAnimation = 5;
    boolean hasDefaultAnimation();

    boolean getDefaultAnimation();

    // optional int32 cols = 6;
    boolean hasCols();

    int getCols();

    // optional int32 rows = 7;
    boolean hasRows();

    int getRows();

    // optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;
    boolean hasCollisionType();

    com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType getCollisionType();

    // optional int32 shpX = 9;
    boolean hasShpX();

    int getShpX();

    // optional int32 shpY = 10;
    boolean hasShpY();

    int getShpY();

    // optional int32 shpWidth = 11;
    boolean hasShpWidth();

    int getShpWidth();

    // optional int32 shpHeight = 12;
    boolean hasShpHeight();

    int getShpHeight();

    // repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;
    java.util.List<com.laex.cg2d.protobuf.GameObject.CGVector2> getVerticesList();

    com.laex.cg2d.protobuf.GameObject.CGVector2 getVertices(int index);

    int getVerticesCount();

    java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> getVerticesOrBuilderList();

    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getVerticesOrBuilder(int index);
  }

  public static final class CGEntityAnimation extends com.google.protobuf.GeneratedMessage implements
      CGEntityAnimationOrBuilder {
    // Use CGEntityAnimation.newBuilder() to construct.
    private CGEntityAnimation(Builder builder) {
      super(builder);
    }

    private CGEntityAnimation(boolean noInit) {
    }

    private static final CGEntityAnimation defaultInstance;

    public static CGEntityAnimation getDefaultInstance() {
      return defaultInstance;
    }

    public CGEntityAnimation getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_fieldAccessorTable;
    }

    private int bitField0_;
    // optional string animationName = 1;
    public static final int ANIMATIONNAME_FIELD_NUMBER = 1;
    private java.lang.Object animationName_;

    public boolean hasAnimationName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public String getAnimationName() {
      java.lang.Object ref = animationName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          animationName_ = s;
        }
        return s;
      }
    }

    private com.google.protobuf.ByteString getAnimationNameBytes() {
      java.lang.Object ref = animationName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        animationName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile =
    // 2;
    public static final int ANIMATIONRESOURCEFILE_FIELD_NUMBER = 2;
    private com.laex.cg2d.protobuf.GameObject.CGResourceFile animationResourceFile_;

    public boolean hasAnimationResourceFile() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public com.laex.cg2d.protobuf.GameObject.CGResourceFile getAnimationResourceFile() {
      return animationResourceFile_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getAnimationResourceFileOrBuilder() {
      return animationResourceFile_;
    }

    // optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;
    public static final int FIXTUREFILE_FIELD_NUMBER = 3;
    private com.laex.cg2d.protobuf.GameObject.CGResourceFile fixtureFile_;

    public boolean hasFixtureFile() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public com.laex.cg2d.protobuf.GameObject.CGResourceFile getFixtureFile() {
      return fixtureFile_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getFixtureFileOrBuilder() {
      return fixtureFile_;
    }

    // optional float animationDuration = 4;
    public static final int ANIMATIONDURATION_FIELD_NUMBER = 4;
    private float animationDuration_;

    public boolean hasAnimationDuration() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    public float getAnimationDuration() {
      return animationDuration_;
    }

    // optional bool defaultAnimation = 5;
    public static final int DEFAULTANIMATION_FIELD_NUMBER = 5;
    private boolean defaultAnimation_;

    public boolean hasDefaultAnimation() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }

    public boolean getDefaultAnimation() {
      return defaultAnimation_;
    }

    // optional int32 cols = 6;
    public static final int COLS_FIELD_NUMBER = 6;
    private int cols_;

    public boolean hasCols() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }

    public int getCols() {
      return cols_;
    }

    // optional int32 rows = 7;
    public static final int ROWS_FIELD_NUMBER = 7;
    private int rows_;

    public boolean hasRows() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }

    public int getRows() {
      return rows_;
    }

    // optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;
    public static final int COLLISIONTYPE_FIELD_NUMBER = 8;
    private com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType collisionType_;

    public boolean hasCollisionType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }

    public com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType getCollisionType() {
      return collisionType_;
    }

    // optional int32 shpX = 9;
    public static final int SHPX_FIELD_NUMBER = 9;
    private int shpX_;

    public boolean hasShpX() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }

    public int getShpX() {
      return shpX_;
    }

    // optional int32 shpY = 10;
    public static final int SHPY_FIELD_NUMBER = 10;
    private int shpY_;

    public boolean hasShpY() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }

    public int getShpY() {
      return shpY_;
    }

    // optional int32 shpWidth = 11;
    public static final int SHPWIDTH_FIELD_NUMBER = 11;
    private int shpWidth_;

    public boolean hasShpWidth() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }

    public int getShpWidth() {
      return shpWidth_;
    }

    // optional int32 shpHeight = 12;
    public static final int SHPHEIGHT_FIELD_NUMBER = 12;
    private int shpHeight_;

    public boolean hasShpHeight() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }

    public int getShpHeight() {
      return shpHeight_;
    }

    // repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;
    public static final int VERTICES_FIELD_NUMBER = 13;
    private java.util.List<com.laex.cg2d.protobuf.GameObject.CGVector2> vertices_;

    public java.util.List<com.laex.cg2d.protobuf.GameObject.CGVector2> getVerticesList() {
      return vertices_;
    }

    public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> getVerticesOrBuilderList() {
      return vertices_;
    }

    public int getVerticesCount() {
      return vertices_.size();
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2 getVertices(int index) {
      return vertices_.get(index);
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getVerticesOrBuilder(int index) {
      return vertices_.get(index);
    }

    private void initFields() {
      animationName_ = "";
      animationResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
      fixtureFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
      animationDuration_ = 0F;
      defaultAnimation_ = false;
      cols_ = 0;
      rows_ = 0;
      collisionType_ = com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType.NONE;
      shpX_ = 0;
      shpY_ = 0;
      shpWidth_ = 0;
      shpHeight_ = 0;
      vertices_ = java.util.Collections.emptyList();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      for (int i = 0; i < getVerticesCount(); i++) {
        if (!getVertices(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getAnimationNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, animationResourceFile_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, fixtureFile_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, animationDuration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, defaultAnimation_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, cols_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, rows_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, collisionType_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, shpX_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, shpY_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, shpWidth_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, shpHeight_);
      }
      for (int i = 0; i < vertices_.size(); i++) {
        output.writeMessage(13, vertices_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, getAnimationNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, animationResourceFile_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, fixtureFile_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(4, animationDuration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(5, defaultAnimation_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(6, cols_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(7, rows_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(8, collisionType_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(9, shpX_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(10, shpY_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(11, shpWidth_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(12, shpHeight_);
      }
      for (int i = 0; i < vertices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(13, vertices_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(
        com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGEntityAnimation prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAnimationResourceFileFieldBuilder();
          getFixtureFileFieldBuilder();
          getVerticesFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        animationName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (animationResourceFileBuilder_ == null) {
          animationResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
        } else {
          animationResourceFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (fixtureFileBuilder_ == null) {
          fixtureFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
        } else {
          fixtureFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        animationDuration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        defaultAnimation_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        cols_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        rows_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        collisionType_ = com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType.NONE;
        bitField0_ = (bitField0_ & ~0x00000080);
        shpX_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        shpY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        shpWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        shpHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (verticesBuilder_ == null) {
          vertices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          verticesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation build() {
        com.laex.cg2d.protobuf.GameObject.CGEntityAnimation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGEntityAnimation buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGEntityAnimation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGEntityAnimation result = new com.laex.cg2d.protobuf.GameObject.CGEntityAnimation(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.animationName_ = animationName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (animationResourceFileBuilder_ == null) {
          result.animationResourceFile_ = animationResourceFile_;
        } else {
          result.animationResourceFile_ = animationResourceFileBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (fixtureFileBuilder_ == null) {
          result.fixtureFile_ = fixtureFile_;
        } else {
          result.fixtureFile_ = fixtureFileBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.animationDuration_ = animationDuration_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.defaultAnimation_ = defaultAnimation_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.cols_ = cols_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rows_ = rows_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.collisionType_ = collisionType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.shpX_ = shpX_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.shpY_ = shpY_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.shpWidth_ = shpWidth_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.shpHeight_ = shpHeight_;
        if (verticesBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            vertices_ = java.util.Collections.unmodifiableList(vertices_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.vertices_ = vertices_;
        } else {
          result.vertices_ = verticesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGEntityAnimation) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGEntityAnimation) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGEntityAnimation other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.getDefaultInstance())
          return this;
        if (other.hasAnimationName()) {
          setAnimationName(other.getAnimationName());
        }
        if (other.hasAnimationResourceFile()) {
          mergeAnimationResourceFile(other.getAnimationResourceFile());
        }
        if (other.hasFixtureFile()) {
          mergeFixtureFile(other.getFixtureFile());
        }
        if (other.hasAnimationDuration()) {
          setAnimationDuration(other.getAnimationDuration());
        }
        if (other.hasDefaultAnimation()) {
          setDefaultAnimation(other.getDefaultAnimation());
        }
        if (other.hasCols()) {
          setCols(other.getCols());
        }
        if (other.hasRows()) {
          setRows(other.getRows());
        }
        if (other.hasCollisionType()) {
          setCollisionType(other.getCollisionType());
        }
        if (other.hasShpX()) {
          setShpX(other.getShpX());
        }
        if (other.hasShpY()) {
          setShpY(other.getShpY());
        }
        if (other.hasShpWidth()) {
          setShpWidth(other.getShpWidth());
        }
        if (other.hasShpHeight()) {
          setShpHeight(other.getShpHeight());
        }
        if (verticesBuilder_ == null) {
          if (!other.vertices_.isEmpty()) {
            if (vertices_.isEmpty()) {
              vertices_ = other.vertices_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureVerticesIsMutable();
              vertices_.addAll(other.vertices_);
            }
            onChanged();
          }
        } else {
          if (!other.vertices_.isEmpty()) {
            if (verticesBuilder_.isEmpty()) {
              verticesBuilder_.dispose();
              verticesBuilder_ = null;
              vertices_ = other.vertices_;
              bitField0_ = (bitField0_ & ~0x00001000);
              verticesBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getVerticesFieldBuilder()
                  : null;
            } else {
              verticesBuilder_.addAllMessages(other.vertices_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getVerticesCount(); i++) {
          if (!getVertices(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 10: {
            bitField0_ |= 0x00000001;
            animationName_ = input.readBytes();
            break;
          }
          case 18: {
            com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGResourceFile
                .newBuilder();
            if (hasAnimationResourceFile()) {
              subBuilder.mergeFrom(getAnimationResourceFile());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setAnimationResourceFile(subBuilder.buildPartial());
            break;
          }
          case 26: {
            com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGResourceFile
                .newBuilder();
            if (hasFixtureFile()) {
              subBuilder.mergeFrom(getFixtureFile());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setFixtureFile(subBuilder.buildPartial());
            break;
          }
          case 37: {
            bitField0_ |= 0x00000008;
            animationDuration_ = input.readFloat();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            defaultAnimation_ = input.readBool();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            cols_ = input.readInt32();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            rows_ = input.readInt32();
            break;
          }
          case 64: {
            int rawValue = input.readEnum();
            com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType value = com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType
                .valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(8, rawValue);
            } else {
              bitField0_ |= 0x00000080;
              collisionType_ = value;
            }
            break;
          }
          case 72: {
            bitField0_ |= 0x00000100;
            shpX_ = input.readInt32();
            break;
          }
          case 80: {
            bitField0_ |= 0x00000200;
            shpY_ = input.readInt32();
            break;
          }
          case 88: {
            bitField0_ |= 0x00000400;
            shpWidth_ = input.readInt32();
            break;
          }
          case 96: {
            bitField0_ |= 0x00000800;
            shpHeight_ = input.readInt32();
            break;
          }
          case 106: {
            com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGVector2
                .newBuilder();
            input.readMessage(subBuilder, extensionRegistry);
            addVertices(subBuilder.buildPartial());
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional string animationName = 1;
      private java.lang.Object animationName_ = "";

      public boolean hasAnimationName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public String getAnimationName() {
        java.lang.Object ref = animationName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          animationName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      public Builder setAnimationName(String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        animationName_ = value;
        onChanged();
        return this;
      }

      public Builder clearAnimationName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        animationName_ = getDefaultInstance().getAnimationName();
        onChanged();
        return this;
      }

      void setAnimationName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        animationName_ = value;
        onChanged();
      }

      // optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile =
      // 2;
      private com.laex.cg2d.protobuf.GameObject.CGResourceFile animationResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> animationResourceFileBuilder_;

      public boolean hasAnimationResourceFile() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFile getAnimationResourceFile() {
        if (animationResourceFileBuilder_ == null) {
          return animationResourceFile_;
        } else {
          return animationResourceFileBuilder_.getMessage();
        }
      }

      public Builder setAnimationResourceFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (animationResourceFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          animationResourceFile_ = value;
          onChanged();
        } else {
          animationResourceFileBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder setAnimationResourceFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder builderForValue) {
        if (animationResourceFileBuilder_ == null) {
          animationResourceFile_ = builderForValue.build();
          onChanged();
        } else {
          animationResourceFileBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder mergeAnimationResourceFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (animationResourceFileBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)
              && animationResourceFile_ != com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance()) {
            animationResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile
                .newBuilder(animationResourceFile_).mergeFrom(value).buildPartial();
          } else {
            animationResourceFile_ = value;
          }
          onChanged();
        } else {
          animationResourceFileBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder clearAnimationResourceFile() {
        if (animationResourceFileBuilder_ == null) {
          animationResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
          onChanged();
        } else {
          animationResourceFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder getAnimationResourceFileBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAnimationResourceFileFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getAnimationResourceFileOrBuilder() {
        if (animationResourceFileBuilder_ != null) {
          return animationResourceFileBuilder_.getMessageOrBuilder();
        } else {
          return animationResourceFile_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> getAnimationResourceFileFieldBuilder() {
        if (animationResourceFileBuilder_ == null) {
          animationResourceFileBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder>(
              animationResourceFile_, getParentForChildren(), isClean());
          animationResourceFile_ = null;
        }
        return animationResourceFileBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;
      private com.laex.cg2d.protobuf.GameObject.CGResourceFile fixtureFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> fixtureFileBuilder_;

      public boolean hasFixtureFile() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFile getFixtureFile() {
        if (fixtureFileBuilder_ == null) {
          return fixtureFile_;
        } else {
          return fixtureFileBuilder_.getMessage();
        }
      }

      public Builder setFixtureFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (fixtureFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fixtureFile_ = value;
          onChanged();
        } else {
          fixtureFileBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }

      public Builder setFixtureFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder builderForValue) {
        if (fixtureFileBuilder_ == null) {
          fixtureFile_ = builderForValue.build();
          onChanged();
        } else {
          fixtureFileBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }

      public Builder mergeFixtureFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (fixtureFileBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)
              && fixtureFile_ != com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance()) {
            fixtureFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.newBuilder(fixtureFile_).mergeFrom(value)
                .buildPartial();
          } else {
            fixtureFile_ = value;
          }
          onChanged();
        } else {
          fixtureFileBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }

      public Builder clearFixtureFile() {
        if (fixtureFileBuilder_ == null) {
          fixtureFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
          onChanged();
        } else {
          fixtureFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder getFixtureFileBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getFixtureFileFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getFixtureFileOrBuilder() {
        if (fixtureFileBuilder_ != null) {
          return fixtureFileBuilder_.getMessageOrBuilder();
        } else {
          return fixtureFile_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> getFixtureFileFieldBuilder() {
        if (fixtureFileBuilder_ == null) {
          fixtureFileBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder>(
              fixtureFile_, getParentForChildren(), isClean());
          fixtureFile_ = null;
        }
        return fixtureFileBuilder_;
      }

      // optional float animationDuration = 4;
      private float animationDuration_;

      public boolean hasAnimationDuration() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public float getAnimationDuration() {
        return animationDuration_;
      }

      public Builder setAnimationDuration(float value) {
        bitField0_ |= 0x00000008;
        animationDuration_ = value;
        onChanged();
        return this;
      }

      public Builder clearAnimationDuration() {
        bitField0_ = (bitField0_ & ~0x00000008);
        animationDuration_ = 0F;
        onChanged();
        return this;
      }

      // optional bool defaultAnimation = 5;
      private boolean defaultAnimation_;

      public boolean hasDefaultAnimation() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }

      public boolean getDefaultAnimation() {
        return defaultAnimation_;
      }

      public Builder setDefaultAnimation(boolean value) {
        bitField0_ |= 0x00000010;
        defaultAnimation_ = value;
        onChanged();
        return this;
      }

      public Builder clearDefaultAnimation() {
        bitField0_ = (bitField0_ & ~0x00000010);
        defaultAnimation_ = false;
        onChanged();
        return this;
      }

      // optional int32 cols = 6;
      private int cols_;

      public boolean hasCols() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }

      public int getCols() {
        return cols_;
      }

      public Builder setCols(int value) {
        bitField0_ |= 0x00000020;
        cols_ = value;
        onChanged();
        return this;
      }

      public Builder clearCols() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cols_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rows = 7;
      private int rows_;

      public boolean hasRows() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }

      public int getRows() {
        return rows_;
      }

      public Builder setRows(int value) {
        bitField0_ |= 0x00000040;
        rows_ = value;
        onChanged();
        return this;
      }

      public Builder clearRows() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rows_ = 0;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType =
      // 8;
      private com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType collisionType_ = com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType.NONE;

      public boolean hasCollisionType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }

      public com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType getCollisionType() {
        return collisionType_;
      }

      public Builder setCollisionType(com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        collisionType_ = value;
        onChanged();
        return this;
      }

      public Builder clearCollisionType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        collisionType_ = com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType.NONE;
        onChanged();
        return this;
      }

      // optional int32 shpX = 9;
      private int shpX_;

      public boolean hasShpX() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }

      public int getShpX() {
        return shpX_;
      }

      public Builder setShpX(int value) {
        bitField0_ |= 0x00000100;
        shpX_ = value;
        onChanged();
        return this;
      }

      public Builder clearShpX() {
        bitField0_ = (bitField0_ & ~0x00000100);
        shpX_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shpY = 10;
      private int shpY_;

      public boolean hasShpY() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }

      public int getShpY() {
        return shpY_;
      }

      public Builder setShpY(int value) {
        bitField0_ |= 0x00000200;
        shpY_ = value;
        onChanged();
        return this;
      }

      public Builder clearShpY() {
        bitField0_ = (bitField0_ & ~0x00000200);
        shpY_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shpWidth = 11;
      private int shpWidth_;

      public boolean hasShpWidth() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }

      public int getShpWidth() {
        return shpWidth_;
      }

      public Builder setShpWidth(int value) {
        bitField0_ |= 0x00000400;
        shpWidth_ = value;
        onChanged();
        return this;
      }

      public Builder clearShpWidth() {
        bitField0_ = (bitField0_ & ~0x00000400);
        shpWidth_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shpHeight = 12;
      private int shpHeight_;

      public boolean hasShpHeight() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }

      public int getShpHeight() {
        return shpHeight_;
      }

      public Builder setShpHeight(int value) {
        bitField0_ |= 0x00000800;
        shpHeight_ = value;
        onChanged();
        return this;
      }

      public Builder clearShpHeight() {
        bitField0_ = (bitField0_ & ~0x00000800);
        shpHeight_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;
      private java.util.List<com.laex.cg2d.protobuf.GameObject.CGVector2> vertices_ = java.util.Collections.emptyList();

      private void ensureVerticesIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          vertices_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGVector2>(vertices_);
          bitField0_ |= 0x00001000;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> verticesBuilder_;

      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGVector2> getVerticesList() {
        if (verticesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vertices_);
        } else {
          return verticesBuilder_.getMessageList();
        }
      }

      public int getVerticesCount() {
        if (verticesBuilder_ == null) {
          return vertices_.size();
        } else {
          return verticesBuilder_.getCount();
        }
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2 getVertices(int index) {
        if (verticesBuilder_ == null) {
          return vertices_.get(index);
        } else {
          return verticesBuilder_.getMessage(index);
        }
      }

      public Builder setVertices(int index, com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (verticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVerticesIsMutable();
          vertices_.set(index, value);
          onChanged();
        } else {
          verticesBuilder_.setMessage(index, value);
        }
        return this;
      }

      public Builder setVertices(int index, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.set(index, builderForValue.build());
          onChanged();
        } else {
          verticesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }

      public Builder addVertices(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (verticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVerticesIsMutable();
          vertices_.add(value);
          onChanged();
        } else {
          verticesBuilder_.addMessage(value);
        }
        return this;
      }

      public Builder addVertices(int index, com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (verticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVerticesIsMutable();
          vertices_.add(index, value);
          onChanged();
        } else {
          verticesBuilder_.addMessage(index, value);
        }
        return this;
      }

      public Builder addVertices(com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.add(builderForValue.build());
          onChanged();
        } else {
          verticesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }

      public Builder addVertices(int index, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.add(index, builderForValue.build());
          onChanged();
        } else {
          verticesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }

      public Builder addAllVertices(java.lang.Iterable<? extends com.laex.cg2d.protobuf.GameObject.CGVector2> values) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          super.addAll(values, vertices_);
          onChanged();
        } else {
          verticesBuilder_.addAllMessages(values);
        }
        return this;
      }

      public Builder clearVertices() {
        if (verticesBuilder_ == null) {
          vertices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          verticesBuilder_.clear();
        }
        return this;
      }

      public Builder removeVertices(int index) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.remove(index);
          onChanged();
        } else {
          verticesBuilder_.remove(index);
        }
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getVerticesBuilder(int index) {
        return getVerticesFieldBuilder().getBuilder(index);
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getVerticesOrBuilder(int index) {
        if (verticesBuilder_ == null) {
          return vertices_.get(index);
        } else {
          return verticesBuilder_.getMessageOrBuilder(index);
        }
      }

      public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> getVerticesOrBuilderList() {
        if (verticesBuilder_ != null) {
          return verticesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vertices_);
        }
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder addVerticesBuilder() {
        return getVerticesFieldBuilder().addBuilder(com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance());
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder addVerticesBuilder(int index) {
        return getVerticesFieldBuilder().addBuilder(index,
            com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance());
      }

      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGVector2.Builder> getVerticesBuilderList() {
        return getVerticesFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> getVerticesFieldBuilder() {
        if (verticesBuilder_ == null) {
          verticesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
              vertices_, ((bitField0_ & 0x00001000) == 0x00001000), getParentForChildren(), isClean());
          vertices_ = null;
        }
        return verticesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGEntityAnimation)
    }

    static {
      defaultInstance = new CGEntityAnimation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGEntityAnimation)
  }

  public interface CGEntityOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional string internalName = 1;
    boolean hasInternalName();

    String getInternalName();

    // repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;
    java.util.List<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation> getAnimationsList();

    com.laex.cg2d.protobuf.GameObject.CGEntityAnimation getAnimations(int index);

    int getAnimationsCount();

    java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder> getAnimationsOrBuilderList();

    com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder getAnimationsOrBuilder(int index);
  }

  public static final class CGEntity extends com.google.protobuf.GeneratedMessage implements CGEntityOrBuilder {
    // Use CGEntity.newBuilder() to construct.
    private CGEntity(Builder builder) {
      super(builder);
    }

    private CGEntity(boolean noInit) {
    }

    private static final CGEntity defaultInstance;

    public static CGEntity getDefaultInstance() {
      return defaultInstance;
    }

    public CGEntity getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntity_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntity_fieldAccessorTable;
    }

    private int bitField0_;
    // optional string internalName = 1;
    public static final int INTERNALNAME_FIELD_NUMBER = 1;
    private java.lang.Object internalName_;

    public boolean hasInternalName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public String getInternalName() {
      java.lang.Object ref = internalName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          internalName_ = s;
        }
        return s;
      }
    }

    private com.google.protobuf.ByteString getInternalNameBytes() {
      java.lang.Object ref = internalName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        internalName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;
    public static final int ANIMATIONS_FIELD_NUMBER = 2;
    private java.util.List<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation> animations_;

    public java.util.List<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation> getAnimationsList() {
      return animations_;
    }

    public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder> getAnimationsOrBuilderList() {
      return animations_;
    }

    public int getAnimationsCount() {
      return animations_.size();
    }

    public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation getAnimations(int index) {
      return animations_.get(index);
    }

    public com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder getAnimationsOrBuilder(int index) {
      return animations_.get(index);
    }

    private void initFields() {
      internalName_ = "";
      animations_ = java.util.Collections.emptyList();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      for (int i = 0; i < getAnimationsCount(); i++) {
        if (!getAnimations(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getInternalNameBytes());
      }
      for (int i = 0; i < animations_.size(); i++) {
        output.writeMessage(2, animations_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, getInternalNameBytes());
      }
      for (int i = 0; i < animations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, animations_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGEntity prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGEntityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntity_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntity_fieldAccessorTable;
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGEntity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAnimationsFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        internalName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (animationsBuilder_ == null) {
          animations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          animationsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGEntity.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGEntity getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGEntity.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGEntity build() {
        com.laex.cg2d.protobuf.GameObject.CGEntity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGEntity buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGEntity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGEntity buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGEntity result = new com.laex.cg2d.protobuf.GameObject.CGEntity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.internalName_ = internalName_;
        if (animationsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            animations_ = java.util.Collections.unmodifiableList(animations_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.animations_ = animations_;
        } else {
          result.animations_ = animationsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGEntity) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGEntity) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGEntity other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGEntity.getDefaultInstance())
          return this;
        if (other.hasInternalName()) {
          setInternalName(other.getInternalName());
        }
        if (animationsBuilder_ == null) {
          if (!other.animations_.isEmpty()) {
            if (animations_.isEmpty()) {
              animations_ = other.animations_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAnimationsIsMutable();
              animations_.addAll(other.animations_);
            }
            onChanged();
          }
        } else {
          if (!other.animations_.isEmpty()) {
            if (animationsBuilder_.isEmpty()) {
              animationsBuilder_.dispose();
              animationsBuilder_ = null;
              animations_ = other.animations_;
              bitField0_ = (bitField0_ & ~0x00000002);
              animationsBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getAnimationsFieldBuilder()
                  : null;
            } else {
              animationsBuilder_.addAllMessages(other.animations_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getAnimationsCount(); i++) {
          if (!getAnimations(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 10: {
            bitField0_ |= 0x00000001;
            internalName_ = input.readBytes();
            break;
          }
          case 18: {
            com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGEntityAnimation
                .newBuilder();
            input.readMessage(subBuilder, extensionRegistry);
            addAnimations(subBuilder.buildPartial());
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional string internalName = 1;
      private java.lang.Object internalName_ = "";

      public boolean hasInternalName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public String getInternalName() {
        java.lang.Object ref = internalName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          internalName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      public Builder setInternalName(String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        internalName_ = value;
        onChanged();
        return this;
      }

      public Builder clearInternalName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalName_ = getDefaultInstance().getInternalName();
        onChanged();
        return this;
      }

      void setInternalName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        internalName_ = value;
        onChanged();
      }

      // repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;
      private java.util.List<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation> animations_ = java.util.Collections
          .emptyList();

      private void ensureAnimationsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          animations_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation>(animations_);
          bitField0_ |= 0x00000002;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder, com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder> animationsBuilder_;

      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation> getAnimationsList() {
        if (animationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(animations_);
        } else {
          return animationsBuilder_.getMessageList();
        }
      }

      public int getAnimationsCount() {
        if (animationsBuilder_ == null) {
          return animations_.size();
        } else {
          return animationsBuilder_.getCount();
        }
      }

      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation getAnimations(int index) {
        if (animationsBuilder_ == null) {
          return animations_.get(index);
        } else {
          return animationsBuilder_.getMessage(index);
        }
      }

      public Builder setAnimations(int index, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation value) {
        if (animationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnimationsIsMutable();
          animations_.set(index, value);
          onChanged();
        } else {
          animationsBuilder_.setMessage(index, value);
        }
        return this;
      }

      public Builder setAnimations(int index,
          com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder builderForValue) {
        if (animationsBuilder_ == null) {
          ensureAnimationsIsMutable();
          animations_.set(index, builderForValue.build());
          onChanged();
        } else {
          animationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }

      public Builder addAnimations(com.laex.cg2d.protobuf.GameObject.CGEntityAnimation value) {
        if (animationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnimationsIsMutable();
          animations_.add(value);
          onChanged();
        } else {
          animationsBuilder_.addMessage(value);
        }
        return this;
      }

      public Builder addAnimations(int index, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation value) {
        if (animationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnimationsIsMutable();
          animations_.add(index, value);
          onChanged();
        } else {
          animationsBuilder_.addMessage(index, value);
        }
        return this;
      }

      public Builder addAnimations(com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder builderForValue) {
        if (animationsBuilder_ == null) {
          ensureAnimationsIsMutable();
          animations_.add(builderForValue.build());
          onChanged();
        } else {
          animationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }

      public Builder addAnimations(int index,
          com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder builderForValue) {
        if (animationsBuilder_ == null) {
          ensureAnimationsIsMutable();
          animations_.add(index, builderForValue.build());
          onChanged();
        } else {
          animationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }

      public Builder addAllAnimations(
          java.lang.Iterable<? extends com.laex.cg2d.protobuf.GameObject.CGEntityAnimation> values) {
        if (animationsBuilder_ == null) {
          ensureAnimationsIsMutable();
          super.addAll(values, animations_);
          onChanged();
        } else {
          animationsBuilder_.addAllMessages(values);
        }
        return this;
      }

      public Builder clearAnimations() {
        if (animationsBuilder_ == null) {
          animations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          animationsBuilder_.clear();
        }
        return this;
      }

      public Builder removeAnimations(int index) {
        if (animationsBuilder_ == null) {
          ensureAnimationsIsMutable();
          animations_.remove(index);
          onChanged();
        } else {
          animationsBuilder_.remove(index);
        }
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder getAnimationsBuilder(int index) {
        return getAnimationsFieldBuilder().getBuilder(index);
      }

      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder getAnimationsOrBuilder(int index) {
        if (animationsBuilder_ == null) {
          return animations_.get(index);
        } else {
          return animationsBuilder_.getMessageOrBuilder(index);
        }
      }

      public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder> getAnimationsOrBuilderList() {
        if (animationsBuilder_ != null) {
          return animationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(animations_);
        }
      }

      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder addAnimationsBuilder() {
        return getAnimationsFieldBuilder().addBuilder(
            com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.getDefaultInstance());
      }

      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder addAnimationsBuilder(int index) {
        return getAnimationsFieldBuilder().addBuilder(index,
            com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.getDefaultInstance());
      }

      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder> getAnimationsBuilderList() {
        return getAnimationsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder, com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder> getAnimationsFieldBuilder() {
        if (animationsBuilder_ == null) {
          animationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder, com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder>(
              animations_, ((bitField0_ & 0x00000002) == 0x00000002), getParentForChildren(), isClean());
          animations_ = null;
        }
        return animationsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGEntity)
    }

    static {
      defaultInstance = new CGEntity(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGEntity)
  }

  public interface CGBoundsOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional float x = 1;
    boolean hasX();

    float getX();

    // optional float y = 2;
    boolean hasY();

    float getY();

    // optional float width = 3;
    boolean hasWidth();

    float getWidth();

    // optional float height = 4;
    boolean hasHeight();

    float getHeight();
  }

  public static final class CGBounds extends com.google.protobuf.GeneratedMessage implements CGBoundsOrBuilder {
    // Use CGBounds.newBuilder() to construct.
    private CGBounds(Builder builder) {
      super(builder);
    }

    private CGBounds(boolean noInit) {
    }

    private static final CGBounds defaultInstance;

    public static CGBounds getDefaultInstance() {
      return defaultInstance;
    }

    public CGBounds getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBounds_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBounds_fieldAccessorTable;
    }

    private int bitField0_;
    // optional float x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;

    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public float getX() {
      return x_;
    }

    // optional float y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private float y_;

    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public float getY() {
      return y_;
    }

    // optional float width = 3;
    public static final int WIDTH_FIELD_NUMBER = 3;
    private float width_;

    public boolean hasWidth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public float getWidth() {
      return width_;
    }

    // optional float height = 4;
    public static final int HEIGHT_FIELD_NUMBER = 4;
    private float height_;

    public boolean hasHeight() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    public float getHeight() {
      return height_;
    }

    private void initFields() {
      x_ = 0F;
      y_ = 0F;
      width_ = 0F;
      height_ = 0F;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, width_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, height_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(3, width_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(4, height_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGBounds prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBounds_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBounds_fieldAccessorTable;
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGBounds.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGBounds.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGBounds getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGBounds build() {
        com.laex.cg2d.protobuf.GameObject.CGBounds result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGBounds buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGBounds result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGBounds buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGBounds result = new com.laex.cg2d.protobuf.GameObject.CGBounds(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.height_ = height_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGBounds) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGBounds) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGBounds other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance())
          return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 13: {
            bitField0_ |= 0x00000001;
            x_ = input.readFloat();
            break;
          }
          case 21: {
            bitField0_ |= 0x00000002;
            y_ = input.readFloat();
            break;
          }
          case 29: {
            bitField0_ |= 0x00000004;
            width_ = input.readFloat();
            break;
          }
          case 37: {
            bitField0_ |= 0x00000008;
            height_ = input.readFloat();
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional float x = 1;
      private float x_;

      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public float getX() {
        return x_;
      }

      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }

      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      // optional float y = 2;
      private float y_;

      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public float getY() {
        return y_;
      }

      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }

      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      // optional float width = 3;
      private float width_;

      public boolean hasWidth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public float getWidth() {
        return width_;
      }

      public Builder setWidth(float value) {
        bitField0_ |= 0x00000004;
        width_ = value;
        onChanged();
        return this;
      }

      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        width_ = 0F;
        onChanged();
        return this;
      }

      // optional float height = 4;
      private float height_;

      public boolean hasHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public float getHeight() {
        return height_;
      }

      public Builder setHeight(float value) {
        bitField0_ |= 0x00000008;
        height_ = value;
        onChanged();
        return this;
      }

      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        height_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGBounds)
    }

    static {
      defaultInstance = new CGBounds(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGBounds)
  }

  public interface CGVector2OrBuilder extends com.google.protobuf.MessageOrBuilder {

    // required float x = 1;
    boolean hasX();

    float getX();

    // required float y = 2;
    boolean hasY();

    float getY();
  }

  public static final class CGVector2 extends com.google.protobuf.GeneratedMessage implements CGVector2OrBuilder {
    // Use CGVector2.newBuilder() to construct.
    private CGVector2(Builder builder) {
      super(builder);
    }

    private CGVector2(boolean noInit) {
    }

    private static final CGVector2 defaultInstance;

    public static CGVector2 getDefaultInstance() {
      return defaultInstance;
    }

    public CGVector2 getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGVector2_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGVector2_fieldAccessorTable;
    }

    private int bitField0_;
    // required float x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;

    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public float getX() {
      return x_;
    }

    // required float y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private float y_;

    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public float getY() {
      return y_;
    }

    private void initFields() {
      x_ = 0F;
      y_ = 0F;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(2, y_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGVector2 prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGVector2_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGVector2_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGVector2.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2 getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2 build() {
        com.laex.cg2d.protobuf.GameObject.CGVector2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGVector2 buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGVector2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2 buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGVector2 result = new com.laex.cg2d.protobuf.GameObject.CGVector2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGVector2) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGVector2) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGVector2 other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance())
          return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {

          return false;
        }
        if (!hasY()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 13: {
            bitField0_ |= 0x00000001;
            x_ = input.readFloat();
            break;
          }
          case 21: {
            bitField0_ |= 0x00000002;
            y_ = input.readFloat();
            break;
          }
          }
        }
      }

      private int bitField0_;

      // required float x = 1;
      private float x_;

      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public float getX() {
        return x_;
      }

      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }

      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      // required float y = 2;
      private float y_;

      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public float getY() {
        return y_;
      }

      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }

      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGVector2)
    }

    static {
      defaultInstance = new CGVector2(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGVector2)
  }

  public interface CGBodyDefOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional bool active = 1;
    boolean hasActive();

    boolean getActive();

    // optional bool allowSleep = 2;
    boolean hasAllowSleep();

    boolean getAllowSleep();

    // optional float angle = 3;
    boolean hasAngle();

    float getAngle();

    // optional float angularDamping = 4;
    boolean hasAngularDamping();

    float getAngularDamping();

    // optional float angularVelocity = 5;
    boolean hasAngularVelocity();

    float getAngularVelocity();

    // optional bool awake = 6;
    boolean hasAwake();

    boolean getAwake();

    // optional bool bullet = 7;
    boolean hasBullet();

    boolean getBullet();

    // optional bool fixedRotation = 8;
    boolean hasFixedRotation();

    boolean getFixedRotation();

    // optional float intertialScale = 9;
    boolean hasIntertialScale();

    float getIntertialScale();

    // optional float linearDampitng = 10;
    boolean hasLinearDampitng();

    float getLinearDampitng();

    // optional float gravityScale = 11;
    boolean hasGravityScale();

    float getGravityScale();

    // optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;
    boolean hasLinearVelocity();

    com.laex.cg2d.protobuf.GameObject.CGVector2 getLinearVelocity();

    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getLinearVelocityOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGBodyType type = 13;
    boolean hasType();

    com.laex.cg2d.protobuf.GameObject.CGBodyType getType();

    // optional .com.laex.cg2d.protobuf.CGVector2 position = 14;
    boolean hasPosition();

    com.laex.cg2d.protobuf.GameObject.CGVector2 getPosition();

    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getPositionOrBuilder();
  }

  public static final class CGBodyDef extends com.google.protobuf.GeneratedMessage implements CGBodyDefOrBuilder {
    // Use CGBodyDef.newBuilder() to construct.
    private CGBodyDef(Builder builder) {
      super(builder);
    }

    private CGBodyDef(boolean noInit) {
    }

    private static final CGBodyDef defaultInstance;

    public static CGBodyDef getDefaultInstance() {
      return defaultInstance;
    }

    public CGBodyDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBodyDef_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBodyDef_fieldAccessorTable;
    }

    private int bitField0_;
    // optional bool active = 1;
    public static final int ACTIVE_FIELD_NUMBER = 1;
    private boolean active_;

    public boolean hasActive() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public boolean getActive() {
      return active_;
    }

    // optional bool allowSleep = 2;
    public static final int ALLOWSLEEP_FIELD_NUMBER = 2;
    private boolean allowSleep_;

    public boolean hasAllowSleep() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public boolean getAllowSleep() {
      return allowSleep_;
    }

    // optional float angle = 3;
    public static final int ANGLE_FIELD_NUMBER = 3;
    private float angle_;

    public boolean hasAngle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public float getAngle() {
      return angle_;
    }

    // optional float angularDamping = 4;
    public static final int ANGULARDAMPING_FIELD_NUMBER = 4;
    private float angularDamping_;

    public boolean hasAngularDamping() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    public float getAngularDamping() {
      return angularDamping_;
    }

    // optional float angularVelocity = 5;
    public static final int ANGULARVELOCITY_FIELD_NUMBER = 5;
    private float angularVelocity_;

    public boolean hasAngularVelocity() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }

    public float getAngularVelocity() {
      return angularVelocity_;
    }

    // optional bool awake = 6;
    public static final int AWAKE_FIELD_NUMBER = 6;
    private boolean awake_;

    public boolean hasAwake() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }

    public boolean getAwake() {
      return awake_;
    }

    // optional bool bullet = 7;
    public static final int BULLET_FIELD_NUMBER = 7;
    private boolean bullet_;

    public boolean hasBullet() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }

    public boolean getBullet() {
      return bullet_;
    }

    // optional bool fixedRotation = 8;
    public static final int FIXEDROTATION_FIELD_NUMBER = 8;
    private boolean fixedRotation_;

    public boolean hasFixedRotation() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }

    public boolean getFixedRotation() {
      return fixedRotation_;
    }

    // optional float intertialScale = 9;
    public static final int INTERTIALSCALE_FIELD_NUMBER = 9;
    private float intertialScale_;

    public boolean hasIntertialScale() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }

    public float getIntertialScale() {
      return intertialScale_;
    }

    // optional float linearDampitng = 10;
    public static final int LINEARDAMPITNG_FIELD_NUMBER = 10;
    private float linearDampitng_;

    public boolean hasLinearDampitng() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }

    public float getLinearDampitng() {
      return linearDampitng_;
    }

    // optional float gravityScale = 11;
    public static final int GRAVITYSCALE_FIELD_NUMBER = 11;
    private float gravityScale_;

    public boolean hasGravityScale() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }

    public float getGravityScale() {
      return gravityScale_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;
    public static final int LINEARVELOCITY_FIELD_NUMBER = 12;
    private com.laex.cg2d.protobuf.GameObject.CGVector2 linearVelocity_;

    public boolean hasLinearVelocity() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2 getLinearVelocity() {
      return linearVelocity_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getLinearVelocityOrBuilder() {
      return linearVelocity_;
    }

    // optional .com.laex.cg2d.protobuf.CGBodyType type = 13;
    public static final int TYPE_FIELD_NUMBER = 13;
    private com.laex.cg2d.protobuf.GameObject.CGBodyType type_;

    public boolean hasType() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }

    public com.laex.cg2d.protobuf.GameObject.CGBodyType getType() {
      return type_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 position = 14;
    public static final int POSITION_FIELD_NUMBER = 14;
    private com.laex.cg2d.protobuf.GameObject.CGVector2 position_;

    public boolean hasPosition() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2 getPosition() {
      return position_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getPositionOrBuilder() {
      return position_;
    }

    private void initFields() {
      active_ = false;
      allowSleep_ = false;
      angle_ = 0F;
      angularDamping_ = 0F;
      angularVelocity_ = 0F;
      awake_ = false;
      bullet_ = false;
      fixedRotation_ = false;
      intertialScale_ = 0F;
      linearDampitng_ = 0F;
      gravityScale_ = 0F;
      linearVelocity_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      type_ = com.laex.cg2d.protobuf.GameObject.CGBodyType.STATIC;
      position_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      if (hasLinearVelocity()) {
        if (!getLinearVelocity().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPosition()) {
        if (!getPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, active_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, allowSleep_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, angle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, angularDamping_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, angularVelocity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, awake_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, bullet_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, fixedRotation_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, intertialScale_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, linearDampitng_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, gravityScale_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(12, linearVelocity_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeEnum(13, type_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(14, position_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, active_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, allowSleep_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(3, angle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(4, angularDamping_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(5, angularVelocity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(6, awake_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(7, bullet_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(8, fixedRotation_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(9, intertialScale_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(10, linearDampitng_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(11, gravityScale_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(12, linearVelocity_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(13, type_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(14, position_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGBodyDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBodyDef_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBodyDef_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGBodyDef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLinearVelocityFieldBuilder();
          getPositionFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        active_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        allowSleep_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        angle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        angularDamping_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        angularVelocity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        awake_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        bullet_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        fixedRotation_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        intertialScale_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        linearDampitng_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        gravityScale_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (linearVelocityBuilder_ == null) {
          linearVelocity_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          linearVelocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        type_ = com.laex.cg2d.protobuf.GameObject.CGBodyType.STATIC;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (positionBuilder_ == null) {
          position_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGBodyDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGBodyDef build() {
        com.laex.cg2d.protobuf.GameObject.CGBodyDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGBodyDef buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGBodyDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGBodyDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGBodyDef result = new com.laex.cg2d.protobuf.GameObject.CGBodyDef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.active_ = active_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.allowSleep_ = allowSleep_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.angle_ = angle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.angularDamping_ = angularDamping_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.angularVelocity_ = angularVelocity_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.awake_ = awake_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bullet_ = bullet_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.fixedRotation_ = fixedRotation_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.intertialScale_ = intertialScale_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.linearDampitng_ = linearDampitng_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.gravityScale_ = gravityScale_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (linearVelocityBuilder_ == null) {
          result.linearVelocity_ = linearVelocity_;
        } else {
          result.linearVelocity_ = linearVelocityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGBodyDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGBodyDef) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGBodyDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance())
          return this;
        if (other.hasActive()) {
          setActive(other.getActive());
        }
        if (other.hasAllowSleep()) {
          setAllowSleep(other.getAllowSleep());
        }
        if (other.hasAngle()) {
          setAngle(other.getAngle());
        }
        if (other.hasAngularDamping()) {
          setAngularDamping(other.getAngularDamping());
        }
        if (other.hasAngularVelocity()) {
          setAngularVelocity(other.getAngularVelocity());
        }
        if (other.hasAwake()) {
          setAwake(other.getAwake());
        }
        if (other.hasBullet()) {
          setBullet(other.getBullet());
        }
        if (other.hasFixedRotation()) {
          setFixedRotation(other.getFixedRotation());
        }
        if (other.hasIntertialScale()) {
          setIntertialScale(other.getIntertialScale());
        }
        if (other.hasLinearDampitng()) {
          setLinearDampitng(other.getLinearDampitng());
        }
        if (other.hasGravityScale()) {
          setGravityScale(other.getGravityScale());
        }
        if (other.hasLinearVelocity()) {
          mergeLinearVelocity(other.getLinearVelocity());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasLinearVelocity()) {
          if (!getLinearVelocity().isInitialized()) {

            return false;
          }
        }
        if (hasPosition()) {
          if (!getPosition().isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            active_ = input.readBool();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            allowSleep_ = input.readBool();
            break;
          }
          case 29: {
            bitField0_ |= 0x00000004;
            angle_ = input.readFloat();
            break;
          }
          case 37: {
            bitField0_ |= 0x00000008;
            angularDamping_ = input.readFloat();
            break;
          }
          case 45: {
            bitField0_ |= 0x00000010;
            angularVelocity_ = input.readFloat();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            awake_ = input.readBool();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            bullet_ = input.readBool();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            fixedRotation_ = input.readBool();
            break;
          }
          case 77: {
            bitField0_ |= 0x00000100;
            intertialScale_ = input.readFloat();
            break;
          }
          case 85: {
            bitField0_ |= 0x00000200;
            linearDampitng_ = input.readFloat();
            break;
          }
          case 93: {
            bitField0_ |= 0x00000400;
            gravityScale_ = input.readFloat();
            break;
          }
          case 98: {
            com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGVector2
                .newBuilder();
            if (hasLinearVelocity()) {
              subBuilder.mergeFrom(getLinearVelocity());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setLinearVelocity(subBuilder.buildPartial());
            break;
          }
          case 104: {
            int rawValue = input.readEnum();
            com.laex.cg2d.protobuf.GameObject.CGBodyType value = com.laex.cg2d.protobuf.GameObject.CGBodyType
                .valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(13, rawValue);
            } else {
              bitField0_ |= 0x00001000;
              type_ = value;
            }
            break;
          }
          case 114: {
            com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGVector2
                .newBuilder();
            if (hasPosition()) {
              subBuilder.mergeFrom(getPosition());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setPosition(subBuilder.buildPartial());
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional bool active = 1;
      private boolean active_;

      public boolean hasActive() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public boolean getActive() {
        return active_;
      }

      public Builder setActive(boolean value) {
        bitField0_ |= 0x00000001;
        active_ = value;
        onChanged();
        return this;
      }

      public Builder clearActive() {
        bitField0_ = (bitField0_ & ~0x00000001);
        active_ = false;
        onChanged();
        return this;
      }

      // optional bool allowSleep = 2;
      private boolean allowSleep_;

      public boolean hasAllowSleep() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public boolean getAllowSleep() {
        return allowSleep_;
      }

      public Builder setAllowSleep(boolean value) {
        bitField0_ |= 0x00000002;
        allowSleep_ = value;
        onChanged();
        return this;
      }

      public Builder clearAllowSleep() {
        bitField0_ = (bitField0_ & ~0x00000002);
        allowSleep_ = false;
        onChanged();
        return this;
      }

      // optional float angle = 3;
      private float angle_;

      public boolean hasAngle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public float getAngle() {
        return angle_;
      }

      public Builder setAngle(float value) {
        bitField0_ |= 0x00000004;
        angle_ = value;
        onChanged();
        return this;
      }

      public Builder clearAngle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        angle_ = 0F;
        onChanged();
        return this;
      }

      // optional float angularDamping = 4;
      private float angularDamping_;

      public boolean hasAngularDamping() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public float getAngularDamping() {
        return angularDamping_;
      }

      public Builder setAngularDamping(float value) {
        bitField0_ |= 0x00000008;
        angularDamping_ = value;
        onChanged();
        return this;
      }

      public Builder clearAngularDamping() {
        bitField0_ = (bitField0_ & ~0x00000008);
        angularDamping_ = 0F;
        onChanged();
        return this;
      }

      // optional float angularVelocity = 5;
      private float angularVelocity_;

      public boolean hasAngularVelocity() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }

      public float getAngularVelocity() {
        return angularVelocity_;
      }

      public Builder setAngularVelocity(float value) {
        bitField0_ |= 0x00000010;
        angularVelocity_ = value;
        onChanged();
        return this;
      }

      public Builder clearAngularVelocity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        angularVelocity_ = 0F;
        onChanged();
        return this;
      }

      // optional bool awake = 6;
      private boolean awake_;

      public boolean hasAwake() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }

      public boolean getAwake() {
        return awake_;
      }

      public Builder setAwake(boolean value) {
        bitField0_ |= 0x00000020;
        awake_ = value;
        onChanged();
        return this;
      }

      public Builder clearAwake() {
        bitField0_ = (bitField0_ & ~0x00000020);
        awake_ = false;
        onChanged();
        return this;
      }

      // optional bool bullet = 7;
      private boolean bullet_;

      public boolean hasBullet() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }

      public boolean getBullet() {
        return bullet_;
      }

      public Builder setBullet(boolean value) {
        bitField0_ |= 0x00000040;
        bullet_ = value;
        onChanged();
        return this;
      }

      public Builder clearBullet() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bullet_ = false;
        onChanged();
        return this;
      }

      // optional bool fixedRotation = 8;
      private boolean fixedRotation_;

      public boolean hasFixedRotation() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }

      public boolean getFixedRotation() {
        return fixedRotation_;
      }

      public Builder setFixedRotation(boolean value) {
        bitField0_ |= 0x00000080;
        fixedRotation_ = value;
        onChanged();
        return this;
      }

      public Builder clearFixedRotation() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fixedRotation_ = false;
        onChanged();
        return this;
      }

      // optional float intertialScale = 9;
      private float intertialScale_;

      public boolean hasIntertialScale() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }

      public float getIntertialScale() {
        return intertialScale_;
      }

      public Builder setIntertialScale(float value) {
        bitField0_ |= 0x00000100;
        intertialScale_ = value;
        onChanged();
        return this;
      }

      public Builder clearIntertialScale() {
        bitField0_ = (bitField0_ & ~0x00000100);
        intertialScale_ = 0F;
        onChanged();
        return this;
      }

      // optional float linearDampitng = 10;
      private float linearDampitng_;

      public boolean hasLinearDampitng() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }

      public float getLinearDampitng() {
        return linearDampitng_;
      }

      public Builder setLinearDampitng(float value) {
        bitField0_ |= 0x00000200;
        linearDampitng_ = value;
        onChanged();
        return this;
      }

      public Builder clearLinearDampitng() {
        bitField0_ = (bitField0_ & ~0x00000200);
        linearDampitng_ = 0F;
        onChanged();
        return this;
      }

      // optional float gravityScale = 11;
      private float gravityScale_;

      public boolean hasGravityScale() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }

      public float getGravityScale() {
        return gravityScale_;
      }

      public Builder setGravityScale(float value) {
        bitField0_ |= 0x00000400;
        gravityScale_ = value;
        onChanged();
        return this;
      }

      public Builder clearGravityScale() {
        bitField0_ = (bitField0_ & ~0x00000400);
        gravityScale_ = 0F;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;
      private com.laex.cg2d.protobuf.GameObject.CGVector2 linearVelocity_ = com.laex.cg2d.protobuf.GameObject.CGVector2
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> linearVelocityBuilder_;

      public boolean hasLinearVelocity() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2 getLinearVelocity() {
        if (linearVelocityBuilder_ == null) {
          return linearVelocity_;
        } else {
          return linearVelocityBuilder_.getMessage();
        }
      }

      public Builder setLinearVelocity(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (linearVelocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          linearVelocity_ = value;
          onChanged();
        } else {
          linearVelocityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }

      public Builder setLinearVelocity(com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (linearVelocityBuilder_ == null) {
          linearVelocity_ = builderForValue.build();
          onChanged();
        } else {
          linearVelocityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }

      public Builder mergeLinearVelocity(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (linearVelocityBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)
              && linearVelocity_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            linearVelocity_ = com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(linearVelocity_).mergeFrom(value)
                .buildPartial();
          } else {
            linearVelocity_ = value;
          }
          onChanged();
        } else {
          linearVelocityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }

      public Builder clearLinearVelocity() {
        if (linearVelocityBuilder_ == null) {
          linearVelocity_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          linearVelocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getLinearVelocityBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getLinearVelocityFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getLinearVelocityOrBuilder() {
        if (linearVelocityBuilder_ != null) {
          return linearVelocityBuilder_.getMessageOrBuilder();
        } else {
          return linearVelocity_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> getLinearVelocityFieldBuilder() {
        if (linearVelocityBuilder_ == null) {
          linearVelocityBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
              linearVelocity_, getParentForChildren(), isClean());
          linearVelocity_ = null;
        }
        return linearVelocityBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGBodyType type = 13;
      private com.laex.cg2d.protobuf.GameObject.CGBodyType type_ = com.laex.cg2d.protobuf.GameObject.CGBodyType.STATIC;

      public boolean hasType() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }

      public com.laex.cg2d.protobuf.GameObject.CGBodyType getType() {
        return type_;
      }

      public Builder setType(com.laex.cg2d.protobuf.GameObject.CGBodyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        type_ = value;
        onChanged();
        return this;
      }

      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00001000);
        type_ = com.laex.cg2d.protobuf.GameObject.CGBodyType.STATIC;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 position = 14;
      private com.laex.cg2d.protobuf.GameObject.CGVector2 position_ = com.laex.cg2d.protobuf.GameObject.CGVector2
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> positionBuilder_;

      public boolean hasPosition() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2 getPosition() {
        if (positionBuilder_ == null) {
          return position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }

      public Builder setPosition(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }

      public Builder setPosition(com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }

      public Builder mergePosition(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (positionBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)
              && position_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            position_ = com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(position_).mergeFrom(value)
                .buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }

      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getPositionBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
              position_, getParentForChildren(), isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGBodyDef)
    }

    static {
      defaultInstance = new CGBodyDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGBodyDef)
  }

  public interface CGFilterOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional int32 categoryBits = 1;
    boolean hasCategoryBits();

    int getCategoryBits();

    // optional int32 maskBits = 2;
    boolean hasMaskBits();

    int getMaskBits();

    // optional int32 groupIndex = 3;
    boolean hasGroupIndex();

    int getGroupIndex();
  }

  public static final class CGFilter extends com.google.protobuf.GeneratedMessage implements CGFilterOrBuilder {
    // Use CGFilter.newBuilder() to construct.
    private CGFilter(Builder builder) {
      super(builder);
    }

    private CGFilter(boolean noInit) {
    }

    private static final CGFilter defaultInstance;

    public static CGFilter getDefaultInstance() {
      return defaultInstance;
    }

    public CGFilter getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFilter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFilter_fieldAccessorTable;
    }

    private int bitField0_;
    // optional int32 categoryBits = 1;
    public static final int CATEGORYBITS_FIELD_NUMBER = 1;
    private int categoryBits_;

    public boolean hasCategoryBits() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public int getCategoryBits() {
      return categoryBits_;
    }

    // optional int32 maskBits = 2;
    public static final int MASKBITS_FIELD_NUMBER = 2;
    private int maskBits_;

    public boolean hasMaskBits() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public int getMaskBits() {
      return maskBits_;
    }

    // optional int32 groupIndex = 3;
    public static final int GROUPINDEX_FIELD_NUMBER = 3;
    private int groupIndex_;

    public boolean hasGroupIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public int getGroupIndex() {
      return groupIndex_;
    }

    private void initFields() {
      categoryBits_ = 0;
      maskBits_ = 0;
      groupIndex_ = 0;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, categoryBits_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, maskBits_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, groupIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, categoryBits_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, maskBits_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, groupIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGFilter prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFilter_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFilter_fieldAccessorTable;
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGFilter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        categoryBits_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maskBits_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        groupIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGFilter.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGFilter getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGFilter build() {
        com.laex.cg2d.protobuf.GameObject.CGFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGFilter buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGFilter buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGFilter result = new com.laex.cg2d.protobuf.GameObject.CGFilter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.categoryBits_ = categoryBits_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maskBits_ = maskBits_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.groupIndex_ = groupIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGFilter) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGFilter) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGFilter other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance())
          return this;
        if (other.hasCategoryBits()) {
          setCategoryBits(other.getCategoryBits());
        }
        if (other.hasMaskBits()) {
          setMaskBits(other.getMaskBits());
        }
        if (other.hasGroupIndex()) {
          setGroupIndex(other.getGroupIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            categoryBits_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            maskBits_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            groupIndex_ = input.readInt32();
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional int32 categoryBits = 1;
      private int categoryBits_;

      public boolean hasCategoryBits() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public int getCategoryBits() {
        return categoryBits_;
      }

      public Builder setCategoryBits(int value) {
        bitField0_ |= 0x00000001;
        categoryBits_ = value;
        onChanged();
        return this;
      }

      public Builder clearCategoryBits() {
        bitField0_ = (bitField0_ & ~0x00000001);
        categoryBits_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maskBits = 2;
      private int maskBits_;

      public boolean hasMaskBits() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public int getMaskBits() {
        return maskBits_;
      }

      public Builder setMaskBits(int value) {
        bitField0_ |= 0x00000002;
        maskBits_ = value;
        onChanged();
        return this;
      }

      public Builder clearMaskBits() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maskBits_ = 0;
        onChanged();
        return this;
      }

      // optional int32 groupIndex = 3;
      private int groupIndex_;

      public boolean hasGroupIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public int getGroupIndex() {
        return groupIndex_;
      }

      public Builder setGroupIndex(int value) {
        bitField0_ |= 0x00000004;
        groupIndex_ = value;
        onChanged();
        return this;
      }

      public Builder clearGroupIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        groupIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGFilter)
    }

    static {
      defaultInstance = new CGFilter(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGFilter)
  }

  public interface CGFixtureDefOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional float density = 1;
    boolean hasDensity();

    float getDensity();

    // optional float friction = 2;
    boolean hasFriction();

    float getFriction();

    // optional float restitution = 3;
    boolean hasRestitution();

    float getRestitution();

    // optional bool sensor = 4;
    boolean hasSensor();

    boolean getSensor();

    // optional .com.laex.cg2d.protobuf.CGFilter filter = 5;
    boolean hasFilter();

    com.laex.cg2d.protobuf.GameObject.CGFilter getFilter();

    com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder getFilterOrBuilder();
  }

  public static final class CGFixtureDef extends com.google.protobuf.GeneratedMessage implements CGFixtureDefOrBuilder {
    // Use CGFixtureDef.newBuilder() to construct.
    private CGFixtureDef(Builder builder) {
      super(builder);
    }

    private CGFixtureDef(boolean noInit) {
    }

    private static final CGFixtureDef defaultInstance;

    public static CGFixtureDef getDefaultInstance() {
      return defaultInstance;
    }

    public CGFixtureDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFixtureDef_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFixtureDef_fieldAccessorTable;
    }

    private int bitField0_;
    // optional float density = 1;
    public static final int DENSITY_FIELD_NUMBER = 1;
    private float density_;

    public boolean hasDensity() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public float getDensity() {
      return density_;
    }

    // optional float friction = 2;
    public static final int FRICTION_FIELD_NUMBER = 2;
    private float friction_;

    public boolean hasFriction() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public float getFriction() {
      return friction_;
    }

    // optional float restitution = 3;
    public static final int RESTITUTION_FIELD_NUMBER = 3;
    private float restitution_;

    public boolean hasRestitution() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public float getRestitution() {
      return restitution_;
    }

    // optional bool sensor = 4;
    public static final int SENSOR_FIELD_NUMBER = 4;
    private boolean sensor_;

    public boolean hasSensor() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    public boolean getSensor() {
      return sensor_;
    }

    // optional .com.laex.cg2d.protobuf.CGFilter filter = 5;
    public static final int FILTER_FIELD_NUMBER = 5;
    private com.laex.cg2d.protobuf.GameObject.CGFilter filter_;

    public boolean hasFilter() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }

    public com.laex.cg2d.protobuf.GameObject.CGFilter getFilter() {
      return filter_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder getFilterOrBuilder() {
      return filter_;
    }

    private void initFields() {
      density_ = 0F;
      friction_ = 0F;
      restitution_ = 0F;
      sensor_ = false;
      filter_ = com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, density_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, friction_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, restitution_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, sensor_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, filter_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(1, density_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(2, friction_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(3, restitution_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, sensor_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, filter_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGFixtureDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFixtureDef_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFixtureDef_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGFixtureDef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFilterFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        density_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        friction_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        restitution_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        sensor_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (filterBuilder_ == null) {
          filter_ = com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance();
        } else {
          filterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGFixtureDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGFixtureDef build() {
        com.laex.cg2d.protobuf.GameObject.CGFixtureDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGFixtureDef buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGFixtureDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGFixtureDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGFixtureDef result = new com.laex.cg2d.protobuf.GameObject.CGFixtureDef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.density_ = density_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.friction_ = friction_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.restitution_ = restitution_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sensor_ = sensor_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (filterBuilder_ == null) {
          result.filter_ = filter_;
        } else {
          result.filter_ = filterBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGFixtureDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGFixtureDef) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGFixtureDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance())
          return this;
        if (other.hasDensity()) {
          setDensity(other.getDensity());
        }
        if (other.hasFriction()) {
          setFriction(other.getFriction());
        }
        if (other.hasRestitution()) {
          setRestitution(other.getRestitution());
        }
        if (other.hasSensor()) {
          setSensor(other.getSensor());
        }
        if (other.hasFilter()) {
          mergeFilter(other.getFilter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 13: {
            bitField0_ |= 0x00000001;
            density_ = input.readFloat();
            break;
          }
          case 21: {
            bitField0_ |= 0x00000002;
            friction_ = input.readFloat();
            break;
          }
          case 29: {
            bitField0_ |= 0x00000004;
            restitution_ = input.readFloat();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            sensor_ = input.readBool();
            break;
          }
          case 42: {
            com.laex.cg2d.protobuf.GameObject.CGFilter.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGFilter
                .newBuilder();
            if (hasFilter()) {
              subBuilder.mergeFrom(getFilter());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setFilter(subBuilder.buildPartial());
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional float density = 1;
      private float density_;

      public boolean hasDensity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public float getDensity() {
        return density_;
      }

      public Builder setDensity(float value) {
        bitField0_ |= 0x00000001;
        density_ = value;
        onChanged();
        return this;
      }

      public Builder clearDensity() {
        bitField0_ = (bitField0_ & ~0x00000001);
        density_ = 0F;
        onChanged();
        return this;
      }

      // optional float friction = 2;
      private float friction_;

      public boolean hasFriction() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public float getFriction() {
        return friction_;
      }

      public Builder setFriction(float value) {
        bitField0_ |= 0x00000002;
        friction_ = value;
        onChanged();
        return this;
      }

      public Builder clearFriction() {
        bitField0_ = (bitField0_ & ~0x00000002);
        friction_ = 0F;
        onChanged();
        return this;
      }

      // optional float restitution = 3;
      private float restitution_;

      public boolean hasRestitution() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public float getRestitution() {
        return restitution_;
      }

      public Builder setRestitution(float value) {
        bitField0_ |= 0x00000004;
        restitution_ = value;
        onChanged();
        return this;
      }

      public Builder clearRestitution() {
        bitField0_ = (bitField0_ & ~0x00000004);
        restitution_ = 0F;
        onChanged();
        return this;
      }

      // optional bool sensor = 4;
      private boolean sensor_;

      public boolean hasSensor() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public boolean getSensor() {
        return sensor_;
      }

      public Builder setSensor(boolean value) {
        bitField0_ |= 0x00000008;
        sensor_ = value;
        onChanged();
        return this;
      }

      public Builder clearSensor() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sensor_ = false;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGFilter filter = 5;
      private com.laex.cg2d.protobuf.GameObject.CGFilter filter_ = com.laex.cg2d.protobuf.GameObject.CGFilter
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGFilter, com.laex.cg2d.protobuf.GameObject.CGFilter.Builder, com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder> filterBuilder_;

      public boolean hasFilter() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }

      public com.laex.cg2d.protobuf.GameObject.CGFilter getFilter() {
        if (filterBuilder_ == null) {
          return filter_;
        } else {
          return filterBuilder_.getMessage();
        }
      }

      public Builder setFilter(com.laex.cg2d.protobuf.GameObject.CGFilter value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filter_ = value;
          onChanged();
        } else {
          filterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }

      public Builder setFilter(com.laex.cg2d.protobuf.GameObject.CGFilter.Builder builderForValue) {
        if (filterBuilder_ == null) {
          filter_ = builderForValue.build();
          onChanged();
        } else {
          filterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }

      public Builder mergeFilter(com.laex.cg2d.protobuf.GameObject.CGFilter value) {
        if (filterBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)
              && filter_ != com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance()) {
            filter_ = com.laex.cg2d.protobuf.GameObject.CGFilter.newBuilder(filter_).mergeFrom(value).buildPartial();
          } else {
            filter_ = value;
          }
          onChanged();
        } else {
          filterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }

      public Builder clearFilter() {
        if (filterBuilder_ == null) {
          filter_ = com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance();
          onChanged();
        } else {
          filterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGFilter.Builder getFilterBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getFilterFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder getFilterOrBuilder() {
        if (filterBuilder_ != null) {
          return filterBuilder_.getMessageOrBuilder();
        } else {
          return filter_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGFilter, com.laex.cg2d.protobuf.GameObject.CGFilter.Builder, com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder> getFilterFieldBuilder() {
        if (filterBuilder_ == null) {
          filterBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGFilter, com.laex.cg2d.protobuf.GameObject.CGFilter.Builder, com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder>(
              filter_, getParentForChildren(), isClean());
          filter_ = null;
        }
        return filterBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGFixtureDef)
    }

    static {
      defaultInstance = new CGFixtureDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGFixtureDef)
  }

  public interface CGShapeOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional string id = 1;
    boolean hasId();

    String getId();

    // optional bool visible = 2;
    boolean hasVisible();

    boolean getVisible();

    // optional bool locked = 3;
    boolean hasLocked();

    boolean getLocked();

    // optional bool background = 4;
    boolean hasBackground();

    boolean getBackground();

    // optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile =
    // 5;
    boolean hasBackgroundResourceFile();

    com.laex.cg2d.protobuf.GameObject.CGResourceFile getBackgroundResourceFile();

    com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getBackgroundResourceFileOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;
    boolean hasEditorShapeType();

    com.laex.cg2d.protobuf.GameObject.CGEditorShapeType getEditorShapeType();

    // optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;
    boolean hasBounds();

    com.laex.cg2d.protobuf.GameObject.CGBounds getBounds();

    com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder getBoundsOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;
    boolean hasBodyDef();

    com.laex.cg2d.protobuf.GameObject.CGBodyDef getBodyDef();

    com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder getBodyDefOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;
    boolean hasFixtureDef();

    com.laex.cg2d.protobuf.GameObject.CGFixtureDef getFixtureDef();

    com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder getFixtureDefOrBuilder();

    // repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;
    java.util.List<com.laex.cg2d.protobuf.GameObject.CGJoint> getJointsList();

    com.laex.cg2d.protobuf.GameObject.CGJoint getJoints(int index);

    int getJointsCount();

    java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder> getJointsOrBuilderList();

    com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder getJointsOrBuilder(int index);

    // optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;
    boolean hasEntityRefFile();

    com.laex.cg2d.protobuf.GameObject.CGResourceFile getEntityRefFile();

    com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getEntityRefFileOrBuilder();
  }

  public static final class CGShape extends com.google.protobuf.GeneratedMessage implements CGShapeOrBuilder {
    // Use CGShape.newBuilder() to construct.
    private CGShape(Builder builder) {
      super(builder);
    }

    private CGShape(boolean noInit) {
    }

    private static final CGShape defaultInstance;

    public static CGShape getDefaultInstance() {
      return defaultInstance;
    }

    public CGShape getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGShape_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGShape_fieldAccessorTable;
    }

    private int bitField0_;
    // optional string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;

    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          id_ = s;
        }
        return s;
      }
    }

    private com.google.protobuf.ByteString getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool visible = 2;
    public static final int VISIBLE_FIELD_NUMBER = 2;
    private boolean visible_;

    public boolean hasVisible() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public boolean getVisible() {
      return visible_;
    }

    // optional bool locked = 3;
    public static final int LOCKED_FIELD_NUMBER = 3;
    private boolean locked_;

    public boolean hasLocked() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public boolean getLocked() {
      return locked_;
    }

    // optional bool background = 4;
    public static final int BACKGROUND_FIELD_NUMBER = 4;
    private boolean background_;

    public boolean hasBackground() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    public boolean getBackground() {
      return background_;
    }

    // optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile =
    // 5;
    public static final int BACKGROUNDRESOURCEFILE_FIELD_NUMBER = 5;
    private com.laex.cg2d.protobuf.GameObject.CGResourceFile backgroundResourceFile_;

    public boolean hasBackgroundResourceFile() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }

    public com.laex.cg2d.protobuf.GameObject.CGResourceFile getBackgroundResourceFile() {
      return backgroundResourceFile_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getBackgroundResourceFileOrBuilder() {
      return backgroundResourceFile_;
    }

    // optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;
    public static final int EDITORSHAPETYPE_FIELD_NUMBER = 6;
    private com.laex.cg2d.protobuf.GameObject.CGEditorShapeType editorShapeType_;

    public boolean hasEditorShapeType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }

    public com.laex.cg2d.protobuf.GameObject.CGEditorShapeType getEditorShapeType() {
      return editorShapeType_;
    }

    // optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;
    public static final int BOUNDS_FIELD_NUMBER = 7;
    private com.laex.cg2d.protobuf.GameObject.CGBounds bounds_;

    public boolean hasBounds() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }

    public com.laex.cg2d.protobuf.GameObject.CGBounds getBounds() {
      return bounds_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder getBoundsOrBuilder() {
      return bounds_;
    }

    // optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;
    public static final int BODYDEF_FIELD_NUMBER = 8;
    private com.laex.cg2d.protobuf.GameObject.CGBodyDef bodyDef_;

    public boolean hasBodyDef() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }

    public com.laex.cg2d.protobuf.GameObject.CGBodyDef getBodyDef() {
      return bodyDef_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder getBodyDefOrBuilder() {
      return bodyDef_;
    }

    // optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;
    public static final int FIXTUREDEF_FIELD_NUMBER = 9;
    private com.laex.cg2d.protobuf.GameObject.CGFixtureDef fixtureDef_;

    public boolean hasFixtureDef() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }

    public com.laex.cg2d.protobuf.GameObject.CGFixtureDef getFixtureDef() {
      return fixtureDef_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder getFixtureDefOrBuilder() {
      return fixtureDef_;
    }

    // repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;
    public static final int JOINTS_FIELD_NUMBER = 10;
    private java.util.List<com.laex.cg2d.protobuf.GameObject.CGJoint> joints_;

    public java.util.List<com.laex.cg2d.protobuf.GameObject.CGJoint> getJointsList() {
      return joints_;
    }

    public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder> getJointsOrBuilderList() {
      return joints_;
    }

    public int getJointsCount() {
      return joints_.size();
    }

    public com.laex.cg2d.protobuf.GameObject.CGJoint getJoints(int index) {
      return joints_.get(index);
    }

    public com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder getJointsOrBuilder(int index) {
      return joints_.get(index);
    }

    // optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;
    public static final int ENTITYREFFILE_FIELD_NUMBER = 11;
    private com.laex.cg2d.protobuf.GameObject.CGResourceFile entityRefFile_;

    public boolean hasEntityRefFile() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }

    public com.laex.cg2d.protobuf.GameObject.CGResourceFile getEntityRefFile() {
      return entityRefFile_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getEntityRefFileOrBuilder() {
      return entityRefFile_;
    }

    private void initFields() {
      id_ = "";
      visible_ = false;
      locked_ = false;
      background_ = false;
      backgroundResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
      editorShapeType_ = com.laex.cg2d.protobuf.GameObject.CGEditorShapeType.SIMPLE_SHAPE_CIRCLE;
      bounds_ = com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance();
      bodyDef_ = com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance();
      fixtureDef_ = com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance();
      joints_ = java.util.Collections.emptyList();
      entityRefFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      if (hasBodyDef()) {
        if (!getBodyDef().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getJointsCount(); i++) {
        if (!getJoints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, visible_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, locked_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, background_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, backgroundResourceFile_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, editorShapeType_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, bounds_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, bodyDef_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, fixtureDef_);
      }
      for (int i = 0; i < joints_.size(); i++) {
        output.writeMessage(10, joints_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(11, entityRefFile_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, visible_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(3, locked_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, background_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, backgroundResourceFile_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(6, editorShapeType_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, bounds_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, bodyDef_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, fixtureDef_);
      }
      for (int i = 0; i < joints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(10, joints_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(11, entityRefFile_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGShape parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGShape parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGShape prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGShape_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGShape_fieldAccessorTable;
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGShape.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBackgroundResourceFileFieldBuilder();
          getBoundsFieldBuilder();
          getBodyDefFieldBuilder();
          getFixtureDefFieldBuilder();
          getJointsFieldBuilder();
          getEntityRefFileFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        visible_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        locked_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        background_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (backgroundResourceFileBuilder_ == null) {
          backgroundResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
        } else {
          backgroundResourceFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        editorShapeType_ = com.laex.cg2d.protobuf.GameObject.CGEditorShapeType.SIMPLE_SHAPE_CIRCLE;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (boundsBuilder_ == null) {
          bounds_ = com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance();
        } else {
          boundsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (bodyDefBuilder_ == null) {
          bodyDef_ = com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance();
        } else {
          bodyDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (fixtureDefBuilder_ == null) {
          fixtureDef_ = com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance();
        } else {
          fixtureDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (jointsBuilder_ == null) {
          joints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          jointsBuilder_.clear();
        }
        if (entityRefFileBuilder_ == null) {
          entityRefFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
        } else {
          entityRefFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGShape.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGShape getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGShape.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGShape build() {
        com.laex.cg2d.protobuf.GameObject.CGShape result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGShape buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGShape result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGShape buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGShape result = new com.laex.cg2d.protobuf.GameObject.CGShape(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.visible_ = visible_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.locked_ = locked_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.background_ = background_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (backgroundResourceFileBuilder_ == null) {
          result.backgroundResourceFile_ = backgroundResourceFile_;
        } else {
          result.backgroundResourceFile_ = backgroundResourceFileBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.editorShapeType_ = editorShapeType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (boundsBuilder_ == null) {
          result.bounds_ = bounds_;
        } else {
          result.bounds_ = boundsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (bodyDefBuilder_ == null) {
          result.bodyDef_ = bodyDef_;
        } else {
          result.bodyDef_ = bodyDefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (fixtureDefBuilder_ == null) {
          result.fixtureDef_ = fixtureDef_;
        } else {
          result.fixtureDef_ = fixtureDefBuilder_.build();
        }
        if (jointsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            joints_ = java.util.Collections.unmodifiableList(joints_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.joints_ = joints_;
        } else {
          result.joints_ = jointsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        if (entityRefFileBuilder_ == null) {
          result.entityRefFile_ = entityRefFile_;
        } else {
          result.entityRefFile_ = entityRefFileBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGShape) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGShape) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGShape other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGShape.getDefaultInstance())
          return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasVisible()) {
          setVisible(other.getVisible());
        }
        if (other.hasLocked()) {
          setLocked(other.getLocked());
        }
        if (other.hasBackground()) {
          setBackground(other.getBackground());
        }
        if (other.hasBackgroundResourceFile()) {
          mergeBackgroundResourceFile(other.getBackgroundResourceFile());
        }
        if (other.hasEditorShapeType()) {
          setEditorShapeType(other.getEditorShapeType());
        }
        if (other.hasBounds()) {
          mergeBounds(other.getBounds());
        }
        if (other.hasBodyDef()) {
          mergeBodyDef(other.getBodyDef());
        }
        if (other.hasFixtureDef()) {
          mergeFixtureDef(other.getFixtureDef());
        }
        if (jointsBuilder_ == null) {
          if (!other.joints_.isEmpty()) {
            if (joints_.isEmpty()) {
              joints_ = other.joints_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureJointsIsMutable();
              joints_.addAll(other.joints_);
            }
            onChanged();
          }
        } else {
          if (!other.joints_.isEmpty()) {
            if (jointsBuilder_.isEmpty()) {
              jointsBuilder_.dispose();
              jointsBuilder_ = null;
              joints_ = other.joints_;
              bitField0_ = (bitField0_ & ~0x00000200);
              jointsBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getJointsFieldBuilder()
                  : null;
            } else {
              jointsBuilder_.addAllMessages(other.joints_);
            }
          }
        }
        if (other.hasEntityRefFile()) {
          mergeEntityRefFile(other.getEntityRefFile());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasBodyDef()) {
          if (!getBodyDef().isInitialized()) {

            return false;
          }
        }
        for (int i = 0; i < getJointsCount(); i++) {
          if (!getJoints(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 10: {
            bitField0_ |= 0x00000001;
            id_ = input.readBytes();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            visible_ = input.readBool();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            locked_ = input.readBool();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            background_ = input.readBool();
            break;
          }
          case 42: {
            com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGResourceFile
                .newBuilder();
            if (hasBackgroundResourceFile()) {
              subBuilder.mergeFrom(getBackgroundResourceFile());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setBackgroundResourceFile(subBuilder.buildPartial());
            break;
          }
          case 48: {
            int rawValue = input.readEnum();
            com.laex.cg2d.protobuf.GameObject.CGEditorShapeType value = com.laex.cg2d.protobuf.GameObject.CGEditorShapeType
                .valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(6, rawValue);
            } else {
              bitField0_ |= 0x00000020;
              editorShapeType_ = value;
            }
            break;
          }
          case 58: {
            com.laex.cg2d.protobuf.GameObject.CGBounds.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGBounds
                .newBuilder();
            if (hasBounds()) {
              subBuilder.mergeFrom(getBounds());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setBounds(subBuilder.buildPartial());
            break;
          }
          case 66: {
            com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGBodyDef
                .newBuilder();
            if (hasBodyDef()) {
              subBuilder.mergeFrom(getBodyDef());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setBodyDef(subBuilder.buildPartial());
            break;
          }
          case 74: {
            com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGFixtureDef
                .newBuilder();
            if (hasFixtureDef()) {
              subBuilder.mergeFrom(getFixtureDef());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setFixtureDef(subBuilder.buildPartial());
            break;
          }
          case 82: {
            com.laex.cg2d.protobuf.GameObject.CGJoint.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGJoint
                .newBuilder();
            input.readMessage(subBuilder, extensionRegistry);
            addJoints(subBuilder.buildPartial());
            break;
          }
          case 90: {
            com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGResourceFile
                .newBuilder();
            if (hasEntityRefFile()) {
              subBuilder.mergeFrom(getEntityRefFile());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setEntityRefFile(subBuilder.buildPartial());
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional string id = 1;
      private java.lang.Object id_ = "";

      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      public Builder setId(String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }

      void setId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
      }

      // optional bool visible = 2;
      private boolean visible_;

      public boolean hasVisible() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public boolean getVisible() {
        return visible_;
      }

      public Builder setVisible(boolean value) {
        bitField0_ |= 0x00000002;
        visible_ = value;
        onChanged();
        return this;
      }

      public Builder clearVisible() {
        bitField0_ = (bitField0_ & ~0x00000002);
        visible_ = false;
        onChanged();
        return this;
      }

      // optional bool locked = 3;
      private boolean locked_;

      public boolean hasLocked() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public boolean getLocked() {
        return locked_;
      }

      public Builder setLocked(boolean value) {
        bitField0_ |= 0x00000004;
        locked_ = value;
        onChanged();
        return this;
      }

      public Builder clearLocked() {
        bitField0_ = (bitField0_ & ~0x00000004);
        locked_ = false;
        onChanged();
        return this;
      }

      // optional bool background = 4;
      private boolean background_;

      public boolean hasBackground() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public boolean getBackground() {
        return background_;
      }

      public Builder setBackground(boolean value) {
        bitField0_ |= 0x00000008;
        background_ = value;
        onChanged();
        return this;
      }

      public Builder clearBackground() {
        bitField0_ = (bitField0_ & ~0x00000008);
        background_ = false;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile
      // = 5;
      private com.laex.cg2d.protobuf.GameObject.CGResourceFile backgroundResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> backgroundResourceFileBuilder_;

      public boolean hasBackgroundResourceFile() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFile getBackgroundResourceFile() {
        if (backgroundResourceFileBuilder_ == null) {
          return backgroundResourceFile_;
        } else {
          return backgroundResourceFileBuilder_.getMessage();
        }
      }

      public Builder setBackgroundResourceFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (backgroundResourceFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backgroundResourceFile_ = value;
          onChanged();
        } else {
          backgroundResourceFileBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }

      public Builder setBackgroundResourceFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder builderForValue) {
        if (backgroundResourceFileBuilder_ == null) {
          backgroundResourceFile_ = builderForValue.build();
          onChanged();
        } else {
          backgroundResourceFileBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }

      public Builder mergeBackgroundResourceFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (backgroundResourceFileBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)
              && backgroundResourceFile_ != com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance()) {
            backgroundResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile
                .newBuilder(backgroundResourceFile_).mergeFrom(value).buildPartial();
          } else {
            backgroundResourceFile_ = value;
          }
          onChanged();
        } else {
          backgroundResourceFileBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }

      public Builder clearBackgroundResourceFile() {
        if (backgroundResourceFileBuilder_ == null) {
          backgroundResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
          onChanged();
        } else {
          backgroundResourceFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder getBackgroundResourceFileBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getBackgroundResourceFileFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getBackgroundResourceFileOrBuilder() {
        if (backgroundResourceFileBuilder_ != null) {
          return backgroundResourceFileBuilder_.getMessageOrBuilder();
        } else {
          return backgroundResourceFile_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> getBackgroundResourceFileFieldBuilder() {
        if (backgroundResourceFileBuilder_ == null) {
          backgroundResourceFileBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder>(
              backgroundResourceFile_, getParentForChildren(), isClean());
          backgroundResourceFile_ = null;
        }
        return backgroundResourceFileBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;
      private com.laex.cg2d.protobuf.GameObject.CGEditorShapeType editorShapeType_ = com.laex.cg2d.protobuf.GameObject.CGEditorShapeType.SIMPLE_SHAPE_CIRCLE;

      public boolean hasEditorShapeType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }

      public com.laex.cg2d.protobuf.GameObject.CGEditorShapeType getEditorShapeType() {
        return editorShapeType_;
      }

      public Builder setEditorShapeType(com.laex.cg2d.protobuf.GameObject.CGEditorShapeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        editorShapeType_ = value;
        onChanged();
        return this;
      }

      public Builder clearEditorShapeType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        editorShapeType_ = com.laex.cg2d.protobuf.GameObject.CGEditorShapeType.SIMPLE_SHAPE_CIRCLE;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;
      private com.laex.cg2d.protobuf.GameObject.CGBounds bounds_ = com.laex.cg2d.protobuf.GameObject.CGBounds
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGBounds, com.laex.cg2d.protobuf.GameObject.CGBounds.Builder, com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder> boundsBuilder_;

      public boolean hasBounds() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }

      public com.laex.cg2d.protobuf.GameObject.CGBounds getBounds() {
        if (boundsBuilder_ == null) {
          return bounds_;
        } else {
          return boundsBuilder_.getMessage();
        }
      }

      public Builder setBounds(com.laex.cg2d.protobuf.GameObject.CGBounds value) {
        if (boundsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bounds_ = value;
          onChanged();
        } else {
          boundsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }

      public Builder setBounds(com.laex.cg2d.protobuf.GameObject.CGBounds.Builder builderForValue) {
        if (boundsBuilder_ == null) {
          bounds_ = builderForValue.build();
          onChanged();
        } else {
          boundsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }

      public Builder mergeBounds(com.laex.cg2d.protobuf.GameObject.CGBounds value) {
        if (boundsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)
              && bounds_ != com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance()) {
            bounds_ = com.laex.cg2d.protobuf.GameObject.CGBounds.newBuilder(bounds_).mergeFrom(value).buildPartial();
          } else {
            bounds_ = value;
          }
          onChanged();
        } else {
          boundsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }

      public Builder clearBounds() {
        if (boundsBuilder_ == null) {
          bounds_ = com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance();
          onChanged();
        } else {
          boundsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGBounds.Builder getBoundsBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getBoundsFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder getBoundsOrBuilder() {
        if (boundsBuilder_ != null) {
          return boundsBuilder_.getMessageOrBuilder();
        } else {
          return bounds_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGBounds, com.laex.cg2d.protobuf.GameObject.CGBounds.Builder, com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder> getBoundsFieldBuilder() {
        if (boundsBuilder_ == null) {
          boundsBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGBounds, com.laex.cg2d.protobuf.GameObject.CGBounds.Builder, com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder>(
              bounds_, getParentForChildren(), isClean());
          bounds_ = null;
        }
        return boundsBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;
      private com.laex.cg2d.protobuf.GameObject.CGBodyDef bodyDef_ = com.laex.cg2d.protobuf.GameObject.CGBodyDef
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGBodyDef, com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder, com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder> bodyDefBuilder_;

      public boolean hasBodyDef() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }

      public com.laex.cg2d.protobuf.GameObject.CGBodyDef getBodyDef() {
        if (bodyDefBuilder_ == null) {
          return bodyDef_;
        } else {
          return bodyDefBuilder_.getMessage();
        }
      }

      public Builder setBodyDef(com.laex.cg2d.protobuf.GameObject.CGBodyDef value) {
        if (bodyDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bodyDef_ = value;
          onChanged();
        } else {
          bodyDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }

      public Builder setBodyDef(com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder builderForValue) {
        if (bodyDefBuilder_ == null) {
          bodyDef_ = builderForValue.build();
          onChanged();
        } else {
          bodyDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }

      public Builder mergeBodyDef(com.laex.cg2d.protobuf.GameObject.CGBodyDef value) {
        if (bodyDefBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)
              && bodyDef_ != com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance()) {
            bodyDef_ = com.laex.cg2d.protobuf.GameObject.CGBodyDef.newBuilder(bodyDef_).mergeFrom(value).buildPartial();
          } else {
            bodyDef_ = value;
          }
          onChanged();
        } else {
          bodyDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }

      public Builder clearBodyDef() {
        if (bodyDefBuilder_ == null) {
          bodyDef_ = com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance();
          onChanged();
        } else {
          bodyDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder getBodyDefBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getBodyDefFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder getBodyDefOrBuilder() {
        if (bodyDefBuilder_ != null) {
          return bodyDefBuilder_.getMessageOrBuilder();
        } else {
          return bodyDef_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGBodyDef, com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder, com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder> getBodyDefFieldBuilder() {
        if (bodyDefBuilder_ == null) {
          bodyDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGBodyDef, com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder, com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder>(
              bodyDef_, getParentForChildren(), isClean());
          bodyDef_ = null;
        }
        return bodyDefBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;
      private com.laex.cg2d.protobuf.GameObject.CGFixtureDef fixtureDef_ = com.laex.cg2d.protobuf.GameObject.CGFixtureDef
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGFixtureDef, com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder, com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder> fixtureDefBuilder_;

      public boolean hasFixtureDef() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }

      public com.laex.cg2d.protobuf.GameObject.CGFixtureDef getFixtureDef() {
        if (fixtureDefBuilder_ == null) {
          return fixtureDef_;
        } else {
          return fixtureDefBuilder_.getMessage();
        }
      }

      public Builder setFixtureDef(com.laex.cg2d.protobuf.GameObject.CGFixtureDef value) {
        if (fixtureDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fixtureDef_ = value;
          onChanged();
        } else {
          fixtureDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }

      public Builder setFixtureDef(com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder builderForValue) {
        if (fixtureDefBuilder_ == null) {
          fixtureDef_ = builderForValue.build();
          onChanged();
        } else {
          fixtureDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }

      public Builder mergeFixtureDef(com.laex.cg2d.protobuf.GameObject.CGFixtureDef value) {
        if (fixtureDefBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)
              && fixtureDef_ != com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance()) {
            fixtureDef_ = com.laex.cg2d.protobuf.GameObject.CGFixtureDef.newBuilder(fixtureDef_).mergeFrom(value)
                .buildPartial();
          } else {
            fixtureDef_ = value;
          }
          onChanged();
        } else {
          fixtureDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }

      public Builder clearFixtureDef() {
        if (fixtureDefBuilder_ == null) {
          fixtureDef_ = com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance();
          onChanged();
        } else {
          fixtureDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder getFixtureDefBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getFixtureDefFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder getFixtureDefOrBuilder() {
        if (fixtureDefBuilder_ != null) {
          return fixtureDefBuilder_.getMessageOrBuilder();
        } else {
          return fixtureDef_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGFixtureDef, com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder, com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder> getFixtureDefFieldBuilder() {
        if (fixtureDefBuilder_ == null) {
          fixtureDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGFixtureDef, com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder, com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder>(
              fixtureDef_, getParentForChildren(), isClean());
          fixtureDef_ = null;
        }
        return fixtureDefBuilder_;
      }

      // repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;
      private java.util.List<com.laex.cg2d.protobuf.GameObject.CGJoint> joints_ = java.util.Collections.emptyList();

      private void ensureJointsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          joints_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGJoint>(joints_);
          bitField0_ |= 0x00000200;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGJoint, com.laex.cg2d.protobuf.GameObject.CGJoint.Builder, com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder> jointsBuilder_;

      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGJoint> getJointsList() {
        if (jointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(joints_);
        } else {
          return jointsBuilder_.getMessageList();
        }
      }

      public int getJointsCount() {
        if (jointsBuilder_ == null) {
          return joints_.size();
        } else {
          return jointsBuilder_.getCount();
        }
      }

      public com.laex.cg2d.protobuf.GameObject.CGJoint getJoints(int index) {
        if (jointsBuilder_ == null) {
          return joints_.get(index);
        } else {
          return jointsBuilder_.getMessage(index);
        }
      }

      public Builder setJoints(int index, com.laex.cg2d.protobuf.GameObject.CGJoint value) {
        if (jointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJointsIsMutable();
          joints_.set(index, value);
          onChanged();
        } else {
          jointsBuilder_.setMessage(index, value);
        }
        return this;
      }

      public Builder setJoints(int index, com.laex.cg2d.protobuf.GameObject.CGJoint.Builder builderForValue) {
        if (jointsBuilder_ == null) {
          ensureJointsIsMutable();
          joints_.set(index, builderForValue.build());
          onChanged();
        } else {
          jointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }

      public Builder addJoints(com.laex.cg2d.protobuf.GameObject.CGJoint value) {
        if (jointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJointsIsMutable();
          joints_.add(value);
          onChanged();
        } else {
          jointsBuilder_.addMessage(value);
        }
        return this;
      }

      public Builder addJoints(int index, com.laex.cg2d.protobuf.GameObject.CGJoint value) {
        if (jointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJointsIsMutable();
          joints_.add(index, value);
          onChanged();
        } else {
          jointsBuilder_.addMessage(index, value);
        }
        return this;
      }

      public Builder addJoints(com.laex.cg2d.protobuf.GameObject.CGJoint.Builder builderForValue) {
        if (jointsBuilder_ == null) {
          ensureJointsIsMutable();
          joints_.add(builderForValue.build());
          onChanged();
        } else {
          jointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }

      public Builder addJoints(int index, com.laex.cg2d.protobuf.GameObject.CGJoint.Builder builderForValue) {
        if (jointsBuilder_ == null) {
          ensureJointsIsMutable();
          joints_.add(index, builderForValue.build());
          onChanged();
        } else {
          jointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }

      public Builder addAllJoints(java.lang.Iterable<? extends com.laex.cg2d.protobuf.GameObject.CGJoint> values) {
        if (jointsBuilder_ == null) {
          ensureJointsIsMutable();
          super.addAll(values, joints_);
          onChanged();
        } else {
          jointsBuilder_.addAllMessages(values);
        }
        return this;
      }

      public Builder clearJoints() {
        if (jointsBuilder_ == null) {
          joints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          jointsBuilder_.clear();
        }
        return this;
      }

      public Builder removeJoints(int index) {
        if (jointsBuilder_ == null) {
          ensureJointsIsMutable();
          joints_.remove(index);
          onChanged();
        } else {
          jointsBuilder_.remove(index);
        }
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGJoint.Builder getJointsBuilder(int index) {
        return getJointsFieldBuilder().getBuilder(index);
      }

      public com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder getJointsOrBuilder(int index) {
        if (jointsBuilder_ == null) {
          return joints_.get(index);
        } else {
          return jointsBuilder_.getMessageOrBuilder(index);
        }
      }

      public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder> getJointsOrBuilderList() {
        if (jointsBuilder_ != null) {
          return jointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(joints_);
        }
      }

      public com.laex.cg2d.protobuf.GameObject.CGJoint.Builder addJointsBuilder() {
        return getJointsFieldBuilder().addBuilder(com.laex.cg2d.protobuf.GameObject.CGJoint.getDefaultInstance());
      }

      public com.laex.cg2d.protobuf.GameObject.CGJoint.Builder addJointsBuilder(int index) {
        return getJointsFieldBuilder()
            .addBuilder(index, com.laex.cg2d.protobuf.GameObject.CGJoint.getDefaultInstance());
      }

      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGJoint.Builder> getJointsBuilderList() {
        return getJointsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGJoint, com.laex.cg2d.protobuf.GameObject.CGJoint.Builder, com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder> getJointsFieldBuilder() {
        if (jointsBuilder_ == null) {
          jointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGJoint, com.laex.cg2d.protobuf.GameObject.CGJoint.Builder, com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder>(
              joints_, ((bitField0_ & 0x00000200) == 0x00000200), getParentForChildren(), isClean());
          joints_ = null;
        }
        return jointsBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;
      private com.laex.cg2d.protobuf.GameObject.CGResourceFile entityRefFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> entityRefFileBuilder_;

      public boolean hasEntityRefFile() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFile getEntityRefFile() {
        if (entityRefFileBuilder_ == null) {
          return entityRefFile_;
        } else {
          return entityRefFileBuilder_.getMessage();
        }
      }

      public Builder setEntityRefFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (entityRefFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          entityRefFile_ = value;
          onChanged();
        } else {
          entityRefFileBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }

      public Builder setEntityRefFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder builderForValue) {
        if (entityRefFileBuilder_ == null) {
          entityRefFile_ = builderForValue.build();
          onChanged();
        } else {
          entityRefFileBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }

      public Builder mergeEntityRefFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (entityRefFileBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)
              && entityRefFile_ != com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance()) {
            entityRefFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.newBuilder(entityRefFile_)
                .mergeFrom(value).buildPartial();
          } else {
            entityRefFile_ = value;
          }
          onChanged();
        } else {
          entityRefFileBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }

      public Builder clearEntityRefFile() {
        if (entityRefFileBuilder_ == null) {
          entityRefFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
          onChanged();
        } else {
          entityRefFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder getEntityRefFileBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getEntityRefFileFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getEntityRefFileOrBuilder() {
        if (entityRefFileBuilder_ != null) {
          return entityRefFileBuilder_.getMessageOrBuilder();
        } else {
          return entityRefFile_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> getEntityRefFileFieldBuilder() {
        if (entityRefFileBuilder_ == null) {
          entityRefFileBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder>(
              entityRefFile_, getParentForChildren(), isClean());
          entityRefFile_ = null;
        }
        return entityRefFileBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGShape)
    }

    static {
      defaultInstance = new CGShape(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGShape)
  }

  public interface CGLayerOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    boolean hasId();

    int getId();

    // optional string name = 2;
    boolean hasName();

    String getName();

    // optional bool visible = 3;
    boolean hasVisible();

    boolean getVisible();

    // optional bool locked = 4;
    boolean hasLocked();

    boolean getLocked();

    // repeated .com.laex.cg2d.protobuf.CGShape shape = 5;
    java.util.List<com.laex.cg2d.protobuf.GameObject.CGShape> getShapeList();

    com.laex.cg2d.protobuf.GameObject.CGShape getShape(int index);

    int getShapeCount();

    java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder> getShapeOrBuilderList();

    com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder getShapeOrBuilder(int index);
  }

  public static final class CGLayer extends com.google.protobuf.GeneratedMessage implements CGLayerOrBuilder {
    // Use CGLayer.newBuilder() to construct.
    private CGLayer(Builder builder) {
      super(builder);
    }

    private CGLayer(boolean noInit) {
    }

    private static final CGLayer defaultInstance;

    public static CGLayer getDefaultInstance() {
      return defaultInstance;
    }

    public CGLayer getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGLayer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGLayer_fieldAccessorTable;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;

    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public int getId() {
      return id_;
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;

    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }

    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool visible = 3;
    public static final int VISIBLE_FIELD_NUMBER = 3;
    private boolean visible_;

    public boolean hasVisible() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public boolean getVisible() {
      return visible_;
    }

    // optional bool locked = 4;
    public static final int LOCKED_FIELD_NUMBER = 4;
    private boolean locked_;

    public boolean hasLocked() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    public boolean getLocked() {
      return locked_;
    }

    // repeated .com.laex.cg2d.protobuf.CGShape shape = 5;
    public static final int SHAPE_FIELD_NUMBER = 5;
    private java.util.List<com.laex.cg2d.protobuf.GameObject.CGShape> shape_;

    public java.util.List<com.laex.cg2d.protobuf.GameObject.CGShape> getShapeList() {
      return shape_;
    }

    public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder> getShapeOrBuilderList() {
      return shape_;
    }

    public int getShapeCount() {
      return shape_.size();
    }

    public com.laex.cg2d.protobuf.GameObject.CGShape getShape(int index) {
      return shape_.get(index);
    }

    public com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder getShapeOrBuilder(int index) {
      return shape_.get(index);
    }

    private void initFields() {
      id_ = 0;
      name_ = "";
      visible_ = false;
      locked_ = false;
      shape_ = java.util.Collections.emptyList();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      for (int i = 0; i < getShapeCount(); i++) {
        if (!getShape(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, visible_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, locked_);
      }
      for (int i = 0; i < shape_.size(); i++) {
        output.writeMessage(5, shape_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(3, visible_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, locked_);
      }
      for (int i = 0; i < shape_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, shape_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGLayer prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGLayer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGLayer_fieldAccessorTable;
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGLayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getShapeFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        visible_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        locked_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (shapeBuilder_ == null) {
          shape_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          shapeBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGLayer.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGLayer getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGLayer.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGLayer build() {
        com.laex.cg2d.protobuf.GameObject.CGLayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGLayer buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGLayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGLayer buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGLayer result = new com.laex.cg2d.protobuf.GameObject.CGLayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.visible_ = visible_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.locked_ = locked_;
        if (shapeBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            shape_ = java.util.Collections.unmodifiableList(shape_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.shape_ = shape_;
        } else {
          result.shape_ = shapeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGLayer) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGLayer) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGLayer other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGLayer.getDefaultInstance())
          return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasVisible()) {
          setVisible(other.getVisible());
        }
        if (other.hasLocked()) {
          setLocked(other.getLocked());
        }
        if (shapeBuilder_ == null) {
          if (!other.shape_.isEmpty()) {
            if (shape_.isEmpty()) {
              shape_ = other.shape_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureShapeIsMutable();
              shape_.addAll(other.shape_);
            }
            onChanged();
          }
        } else {
          if (!other.shape_.isEmpty()) {
            if (shapeBuilder_.isEmpty()) {
              shapeBuilder_.dispose();
              shapeBuilder_ = null;
              shape_ = other.shape_;
              bitField0_ = (bitField0_ & ~0x00000010);
              shapeBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getShapeFieldBuilder()
                  : null;
            } else {
              shapeBuilder_.addAllMessages(other.shape_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getShapeCount(); i++) {
          if (!getShape(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            id_ = input.readInt32();
            break;
          }
          case 18: {
            bitField0_ |= 0x00000002;
            name_ = input.readBytes();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            visible_ = input.readBool();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            locked_ = input.readBool();
            break;
          }
          case 42: {
            com.laex.cg2d.protobuf.GameObject.CGShape.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGShape
                .newBuilder();
            input.readMessage(subBuilder, extensionRegistry);
            addShape(subBuilder.buildPartial());
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional int32 id = 1;
      private int id_;

      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public int getId() {
        return id_;
      }

      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";

      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      public Builder setName(String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }

      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
      }

      // optional bool visible = 3;
      private boolean visible_;

      public boolean hasVisible() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public boolean getVisible() {
        return visible_;
      }

      public Builder setVisible(boolean value) {
        bitField0_ |= 0x00000004;
        visible_ = value;
        onChanged();
        return this;
      }

      public Builder clearVisible() {
        bitField0_ = (bitField0_ & ~0x00000004);
        visible_ = false;
        onChanged();
        return this;
      }

      // optional bool locked = 4;
      private boolean locked_;

      public boolean hasLocked() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public boolean getLocked() {
        return locked_;
      }

      public Builder setLocked(boolean value) {
        bitField0_ |= 0x00000008;
        locked_ = value;
        onChanged();
        return this;
      }

      public Builder clearLocked() {
        bitField0_ = (bitField0_ & ~0x00000008);
        locked_ = false;
        onChanged();
        return this;
      }

      // repeated .com.laex.cg2d.protobuf.CGShape shape = 5;
      private java.util.List<com.laex.cg2d.protobuf.GameObject.CGShape> shape_ = java.util.Collections.emptyList();

      private void ensureShapeIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          shape_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGShape>(shape_);
          bitField0_ |= 0x00000010;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGShape, com.laex.cg2d.protobuf.GameObject.CGShape.Builder, com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder> shapeBuilder_;

      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGShape> getShapeList() {
        if (shapeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shape_);
        } else {
          return shapeBuilder_.getMessageList();
        }
      }

      public int getShapeCount() {
        if (shapeBuilder_ == null) {
          return shape_.size();
        } else {
          return shapeBuilder_.getCount();
        }
      }

      public com.laex.cg2d.protobuf.GameObject.CGShape getShape(int index) {
        if (shapeBuilder_ == null) {
          return shape_.get(index);
        } else {
          return shapeBuilder_.getMessage(index);
        }
      }

      public Builder setShape(int index, com.laex.cg2d.protobuf.GameObject.CGShape value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapeIsMutable();
          shape_.set(index, value);
          onChanged();
        } else {
          shapeBuilder_.setMessage(index, value);
        }
        return this;
      }

      public Builder setShape(int index, com.laex.cg2d.protobuf.GameObject.CGShape.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          ensureShapeIsMutable();
          shape_.set(index, builderForValue.build());
          onChanged();
        } else {
          shapeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }

      public Builder addShape(com.laex.cg2d.protobuf.GameObject.CGShape value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapeIsMutable();
          shape_.add(value);
          onChanged();
        } else {
          shapeBuilder_.addMessage(value);
        }
        return this;
      }

      public Builder addShape(int index, com.laex.cg2d.protobuf.GameObject.CGShape value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapeIsMutable();
          shape_.add(index, value);
          onChanged();
        } else {
          shapeBuilder_.addMessage(index, value);
        }
        return this;
      }

      public Builder addShape(com.laex.cg2d.protobuf.GameObject.CGShape.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          ensureShapeIsMutable();
          shape_.add(builderForValue.build());
          onChanged();
        } else {
          shapeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }

      public Builder addShape(int index, com.laex.cg2d.protobuf.GameObject.CGShape.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          ensureShapeIsMutable();
          shape_.add(index, builderForValue.build());
          onChanged();
        } else {
          shapeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }

      public Builder addAllShape(java.lang.Iterable<? extends com.laex.cg2d.protobuf.GameObject.CGShape> values) {
        if (shapeBuilder_ == null) {
          ensureShapeIsMutable();
          super.addAll(values, shape_);
          onChanged();
        } else {
          shapeBuilder_.addAllMessages(values);
        }
        return this;
      }

      public Builder clearShape() {
        if (shapeBuilder_ == null) {
          shape_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          shapeBuilder_.clear();
        }
        return this;
      }

      public Builder removeShape(int index) {
        if (shapeBuilder_ == null) {
          ensureShapeIsMutable();
          shape_.remove(index);
          onChanged();
        } else {
          shapeBuilder_.remove(index);
        }
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGShape.Builder getShapeBuilder(int index) {
        return getShapeFieldBuilder().getBuilder(index);
      }

      public com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder getShapeOrBuilder(int index) {
        if (shapeBuilder_ == null) {
          return shape_.get(index);
        } else {
          return shapeBuilder_.getMessageOrBuilder(index);
        }
      }

      public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder> getShapeOrBuilderList() {
        if (shapeBuilder_ != null) {
          return shapeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shape_);
        }
      }

      public com.laex.cg2d.protobuf.GameObject.CGShape.Builder addShapeBuilder() {
        return getShapeFieldBuilder().addBuilder(com.laex.cg2d.protobuf.GameObject.CGShape.getDefaultInstance());
      }

      public com.laex.cg2d.protobuf.GameObject.CGShape.Builder addShapeBuilder(int index) {
        return getShapeFieldBuilder().addBuilder(index, com.laex.cg2d.protobuf.GameObject.CGShape.getDefaultInstance());
      }

      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGShape.Builder> getShapeBuilderList() {
        return getShapeFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGShape, com.laex.cg2d.protobuf.GameObject.CGShape.Builder, com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder> getShapeFieldBuilder() {
        if (shapeBuilder_ == null) {
          shapeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGShape, com.laex.cg2d.protobuf.GameObject.CGShape.Builder, com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder>(
              shape_, ((bitField0_ & 0x00000010) == 0x00000010), getParentForChildren(), isClean());
          shape_ = null;
        }
        return shapeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGLayer)
    }

    static {
      defaultInstance = new CGLayer(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGLayer)
  }

  public interface CGScreenPreferencesOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences
    // debugDrawPrefs = 1;
    boolean hasDebugDrawPrefs();

    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences getDebugDrawPrefs();

    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder getDebugDrawPrefsOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences
    // worldPrefs = 2;
    boolean hasWorldPrefs();

    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences getWorldPrefs();

    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder getWorldPrefsOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences
    // cardPrefs = 3;
    boolean hasCardPrefs();

    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences getCardPrefs();

    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder getCardPrefsOrBuilder();
  }

  public static final class CGScreenPreferences extends com.google.protobuf.GeneratedMessage implements
      CGScreenPreferencesOrBuilder {
    // Use CGScreenPreferences.newBuilder() to construct.
    private CGScreenPreferences(Builder builder) {
      super(builder);
    }

    private CGScreenPreferences(boolean noInit) {
    }

    private static final CGScreenPreferences defaultInstance;

    public static CGScreenPreferences getDefaultInstance() {
      return defaultInstance;
    }

    public CGScreenPreferences getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_fieldAccessorTable;
    }

    public interface DebugDrawPreferencesOrBuilder extends com.google.protobuf.MessageOrBuilder {

      // optional bool drawBodies = 1;
      boolean hasDrawBodies();

      boolean getDrawBodies();

      // optional bool drawJoints = 2;
      boolean hasDrawJoints();

      boolean getDrawJoints();

      // optional bool drawAABB = 3;
      boolean hasDrawAABB();

      boolean getDrawAABB();

      // optional bool drawInactiveBodies = 4;
      boolean hasDrawInactiveBodies();

      boolean getDrawInactiveBodies();

      // optional bool installMouseJoint = 5;
      boolean hasInstallMouseJoint();

      boolean getInstallMouseJoint();

      // optional bool drawDebugData = 6;
      boolean hasDrawDebugData();

      boolean getDrawDebugData();

      // optional bool drawEntities = 7;
      boolean hasDrawEntities();

      boolean getDrawEntities();
    }

    public static final class DebugDrawPreferences extends com.google.protobuf.GeneratedMessage implements
        DebugDrawPreferencesOrBuilder {
      // Use DebugDrawPreferences.newBuilder() to construct.
      private DebugDrawPreferences(Builder builder) {
        super(builder);
      }

      private DebugDrawPreferences(boolean noInit) {
      }

      private static final DebugDrawPreferences defaultInstance;

      public static DebugDrawPreferences getDefaultInstance() {
        return defaultInstance;
      }

      public DebugDrawPreferences getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_fieldAccessorTable;
      }

      private int bitField0_;
      // optional bool drawBodies = 1;
      public static final int DRAWBODIES_FIELD_NUMBER = 1;
      private boolean drawBodies_;

      public boolean hasDrawBodies() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public boolean getDrawBodies() {
        return drawBodies_;
      }

      // optional bool drawJoints = 2;
      public static final int DRAWJOINTS_FIELD_NUMBER = 2;
      private boolean drawJoints_;

      public boolean hasDrawJoints() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public boolean getDrawJoints() {
        return drawJoints_;
      }

      // optional bool drawAABB = 3;
      public static final int DRAWAABB_FIELD_NUMBER = 3;
      private boolean drawAABB_;

      public boolean hasDrawAABB() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public boolean getDrawAABB() {
        return drawAABB_;
      }

      // optional bool drawInactiveBodies = 4;
      public static final int DRAWINACTIVEBODIES_FIELD_NUMBER = 4;
      private boolean drawInactiveBodies_;

      public boolean hasDrawInactiveBodies() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public boolean getDrawInactiveBodies() {
        return drawInactiveBodies_;
      }

      // optional bool installMouseJoint = 5;
      public static final int INSTALLMOUSEJOINT_FIELD_NUMBER = 5;
      private boolean installMouseJoint_;

      public boolean hasInstallMouseJoint() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }

      public boolean getInstallMouseJoint() {
        return installMouseJoint_;
      }

      // optional bool drawDebugData = 6;
      public static final int DRAWDEBUGDATA_FIELD_NUMBER = 6;
      private boolean drawDebugData_;

      public boolean hasDrawDebugData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }

      public boolean getDrawDebugData() {
        return drawDebugData_;
      }

      // optional bool drawEntities = 7;
      public static final int DRAWENTITIES_FIELD_NUMBER = 7;
      private boolean drawEntities_;

      public boolean hasDrawEntities() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }

      public boolean getDrawEntities() {
        return drawEntities_;
      }

      private void initFields() {
        drawBodies_ = false;
        drawJoints_ = false;
        drawAABB_ = false;
        drawInactiveBodies_ = false;
        installMouseJoint_ = false;
        drawDebugData_ = false;
        drawEntities_ = false;
      }

      private byte memoizedIsInitialized = -1;

      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1)
          return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, drawBodies_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, drawJoints_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, drawAABB_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(4, drawInactiveBodies_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, installMouseJoint_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(6, drawDebugData_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBool(7, drawEntities_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1)
          return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, drawBodies_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, drawJoints_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream.computeBoolSize(3, drawAABB_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, drawInactiveBodies_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream.computeBoolSize(5, installMouseJoint_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream.computeBoolSize(6, drawDebugData_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream.computeBoolSize(7, drawEntities_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;

      @java.lang.Override
      protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(
          com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(
          com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(
          java.io.InputStream input) throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseDelimitedFrom(
          java.io.InputStream input) throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(
          com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(
          com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
      }

      public static Builder newBuilder() {
        return Builder.create();
      }

      public Builder newBuilderForType() {
        return newBuilder();
      }

      public static Builder newBuilder(
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences prototype) {
        return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
        return newBuilder(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }

      public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_fieldAccessorTable;
        }

        // Construct using
        // com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }

        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          drawBodies_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          drawJoints_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          drawAABB_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          drawInactiveBodies_ = false;
          bitField0_ = (bitField0_ & ~0x00000008);
          installMouseJoint_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          drawDebugData_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          drawEntities_ = false;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
          return com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.getDescriptor();
        }

        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences getDefaultInstanceForType() {
          return com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.getDefaultInstance();
        }

        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences build() {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
          }
          return result;
        }

        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences buildPartial() {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences result = new com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences(
              this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.drawBodies_ = drawBodies_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.drawJoints_ = drawJoints_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.drawAABB_ = drawAABB_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.drawInactiveBodies_ = drawInactiveBodies_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.installMouseJoint_ = installMouseJoint_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.drawDebugData_ = drawDebugData_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.drawEntities_ = drawEntities_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences) {
            return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences) other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences other) {
          if (other == com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.getDefaultInstance())
            return this;
          if (other.hasDrawBodies()) {
            setDrawBodies(other.getDrawBodies());
          }
          if (other.hasDrawJoints()) {
            setDrawJoints(other.getDrawJoints());
          }
          if (other.hasDrawAABB()) {
            setDrawAABB(other.getDrawAABB());
          }
          if (other.hasDrawInactiveBodies()) {
            setDrawInactiveBodies(other.getDrawInactiveBodies());
          }
          if (other.hasInstallMouseJoint()) {
            setInstallMouseJoint(other.getInstallMouseJoint());
          }
          if (other.hasDrawDebugData()) {
            setDrawDebugData(other.getDrawDebugData());
          }
          if (other.hasDrawEntities()) {
            setDrawEntities(other.getDrawEntities());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
              .newBuilder(this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              drawBodies_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              drawJoints_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              drawAABB_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              drawInactiveBodies_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              installMouseJoint_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              drawDebugData_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              drawEntities_ = input.readBool();
              break;
            }
            }
          }
        }

        private int bitField0_;

        // optional bool drawBodies = 1;
        private boolean drawBodies_;

        public boolean hasDrawBodies() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public boolean getDrawBodies() {
          return drawBodies_;
        }

        public Builder setDrawBodies(boolean value) {
          bitField0_ |= 0x00000001;
          drawBodies_ = value;
          onChanged();
          return this;
        }

        public Builder clearDrawBodies() {
          bitField0_ = (bitField0_ & ~0x00000001);
          drawBodies_ = false;
          onChanged();
          return this;
        }

        // optional bool drawJoints = 2;
        private boolean drawJoints_;

        public boolean hasDrawJoints() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public boolean getDrawJoints() {
          return drawJoints_;
        }

        public Builder setDrawJoints(boolean value) {
          bitField0_ |= 0x00000002;
          drawJoints_ = value;
          onChanged();
          return this;
        }

        public Builder clearDrawJoints() {
          bitField0_ = (bitField0_ & ~0x00000002);
          drawJoints_ = false;
          onChanged();
          return this;
        }

        // optional bool drawAABB = 3;
        private boolean drawAABB_;

        public boolean hasDrawAABB() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        public boolean getDrawAABB() {
          return drawAABB_;
        }

        public Builder setDrawAABB(boolean value) {
          bitField0_ |= 0x00000004;
          drawAABB_ = value;
          onChanged();
          return this;
        }

        public Builder clearDrawAABB() {
          bitField0_ = (bitField0_ & ~0x00000004);
          drawAABB_ = false;
          onChanged();
          return this;
        }

        // optional bool drawInactiveBodies = 4;
        private boolean drawInactiveBodies_;

        public boolean hasDrawInactiveBodies() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        public boolean getDrawInactiveBodies() {
          return drawInactiveBodies_;
        }

        public Builder setDrawInactiveBodies(boolean value) {
          bitField0_ |= 0x00000008;
          drawInactiveBodies_ = value;
          onChanged();
          return this;
        }

        public Builder clearDrawInactiveBodies() {
          bitField0_ = (bitField0_ & ~0x00000008);
          drawInactiveBodies_ = false;
          onChanged();
          return this;
        }

        // optional bool installMouseJoint = 5;
        private boolean installMouseJoint_;

        public boolean hasInstallMouseJoint() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        public boolean getInstallMouseJoint() {
          return installMouseJoint_;
        }

        public Builder setInstallMouseJoint(boolean value) {
          bitField0_ |= 0x00000010;
          installMouseJoint_ = value;
          onChanged();
          return this;
        }

        public Builder clearInstallMouseJoint() {
          bitField0_ = (bitField0_ & ~0x00000010);
          installMouseJoint_ = false;
          onChanged();
          return this;
        }

        // optional bool drawDebugData = 6;
        private boolean drawDebugData_;

        public boolean hasDrawDebugData() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        public boolean getDrawDebugData() {
          return drawDebugData_;
        }

        public Builder setDrawDebugData(boolean value) {
          bitField0_ |= 0x00000020;
          drawDebugData_ = value;
          onChanged();
          return this;
        }

        public Builder clearDrawDebugData() {
          bitField0_ = (bitField0_ & ~0x00000020);
          drawDebugData_ = false;
          onChanged();
          return this;
        }

        // optional bool drawEntities = 7;
        private boolean drawEntities_;

        public boolean hasDrawEntities() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        public boolean getDrawEntities() {
          return drawEntities_;
        }

        public Builder setDrawEntities(boolean value) {
          bitField0_ |= 0x00000040;
          drawEntities_ = value;
          onChanged();
          return this;
        }

        public Builder clearDrawEntities() {
          bitField0_ = (bitField0_ & ~0x00000040);
          drawEntities_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences)
      }

      static {
        defaultInstance = new DebugDrawPreferences(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences)
    }

    public interface WorldPreferencesOrBuilder extends com.google.protobuf.MessageOrBuilder {

      // optional int32 ptmRatio = 1;
      boolean hasPtmRatio();

      int getPtmRatio();

      // optional int32 velocityIterations = 2;
      boolean hasVelocityIterations();

      int getVelocityIterations();

      // optional int32 positionIterations = 3;
      boolean hasPositionIterations();

      int getPositionIterations();

      // optional float timeStep = 4;
      boolean hasTimeStep();

      float getTimeStep();

      // optional float gravityX = 5;
      boolean hasGravityX();

      float getGravityX();

      // optional float gravityY = 6;
      boolean hasGravityY();

      float getGravityY();
    }

    public static final class WorldPreferences extends com.google.protobuf.GeneratedMessage implements
        WorldPreferencesOrBuilder {
      // Use WorldPreferences.newBuilder() to construct.
      private WorldPreferences(Builder builder) {
        super(builder);
      }

      private WorldPreferences(boolean noInit) {
      }

      private static final WorldPreferences defaultInstance;

      public static WorldPreferences getDefaultInstance() {
        return defaultInstance;
      }

      public WorldPreferences getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_fieldAccessorTable;
      }

      private int bitField0_;
      // optional int32 ptmRatio = 1;
      public static final int PTMRATIO_FIELD_NUMBER = 1;
      private int ptmRatio_;

      public boolean hasPtmRatio() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public int getPtmRatio() {
        return ptmRatio_;
      }

      // optional int32 velocityIterations = 2;
      public static final int VELOCITYITERATIONS_FIELD_NUMBER = 2;
      private int velocityIterations_;

      public boolean hasVelocityIterations() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public int getVelocityIterations() {
        return velocityIterations_;
      }

      // optional int32 positionIterations = 3;
      public static final int POSITIONITERATIONS_FIELD_NUMBER = 3;
      private int positionIterations_;

      public boolean hasPositionIterations() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public int getPositionIterations() {
        return positionIterations_;
      }

      // optional float timeStep = 4;
      public static final int TIMESTEP_FIELD_NUMBER = 4;
      private float timeStep_;

      public boolean hasTimeStep() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public float getTimeStep() {
        return timeStep_;
      }

      // optional float gravityX = 5;
      public static final int GRAVITYX_FIELD_NUMBER = 5;
      private float gravityX_;

      public boolean hasGravityX() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }

      public float getGravityX() {
        return gravityX_;
      }

      // optional float gravityY = 6;
      public static final int GRAVITYY_FIELD_NUMBER = 6;
      private float gravityY_;

      public boolean hasGravityY() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }

      public float getGravityY() {
        return gravityY_;
      }

      private void initFields() {
        ptmRatio_ = 0;
        velocityIterations_ = 0;
        positionIterations_ = 0;
        timeStep_ = 0F;
        gravityX_ = 0F;
        gravityY_ = 0F;
      }

      private byte memoizedIsInitialized = -1;

      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1)
          return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, ptmRatio_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, velocityIterations_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, positionIterations_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, timeStep_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(5, gravityX_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeFloat(6, gravityY_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1)
          return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, ptmRatio_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, velocityIterations_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, positionIterations_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream.computeFloatSize(4, timeStep_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream.computeFloatSize(5, gravityX_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream.computeFloatSize(6, gravityY_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;

      @java.lang.Override
      protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(
          com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(
          com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(
          java.io.InputStream input) throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseDelimitedFrom(
          java.io.InputStream input) throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(
          com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(
          com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
      }

      public static Builder newBuilder() {
        return Builder.create();
      }

      public Builder newBuilderForType() {
        return newBuilder();
      }

      public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences prototype) {
        return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
        return newBuilder(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }

      public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_fieldAccessorTable;
        }

        // Construct using
        // com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }

        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          ptmRatio_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          velocityIterations_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          positionIterations_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          timeStep_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          gravityX_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          gravityY_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
          return com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDescriptor();
        }

        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences getDefaultInstanceForType() {
          return com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDefaultInstance();
        }

        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences build() {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
          }
          return result;
        }

        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences buildPartial() {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences result = new com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences(
              this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.ptmRatio_ = ptmRatio_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.velocityIterations_ = velocityIterations_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.positionIterations_ = positionIterations_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.timeStep_ = timeStep_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.gravityX_ = gravityX_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.gravityY_ = gravityY_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences) {
            return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences) other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences other) {
          if (other == com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDefaultInstance())
            return this;
          if (other.hasPtmRatio()) {
            setPtmRatio(other.getPtmRatio());
          }
          if (other.hasVelocityIterations()) {
            setVelocityIterations(other.getVelocityIterations());
          }
          if (other.hasPositionIterations()) {
            setPositionIterations(other.getPositionIterations());
          }
          if (other.hasTimeStep()) {
            setTimeStep(other.getTimeStep());
          }
          if (other.hasGravityX()) {
            setGravityX(other.getGravityX());
          }
          if (other.hasGravityY()) {
            setGravityY(other.getGravityY());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
              .newBuilder(this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ptmRatio_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              velocityIterations_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              positionIterations_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              timeStep_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              gravityX_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              gravityY_ = input.readFloat();
              break;
            }
            }
          }
        }

        private int bitField0_;

        // optional int32 ptmRatio = 1;
        private int ptmRatio_;

        public boolean hasPtmRatio() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public int getPtmRatio() {
          return ptmRatio_;
        }

        public Builder setPtmRatio(int value) {
          bitField0_ |= 0x00000001;
          ptmRatio_ = value;
          onChanged();
          return this;
        }

        public Builder clearPtmRatio() {
          bitField0_ = (bitField0_ & ~0x00000001);
          ptmRatio_ = 0;
          onChanged();
          return this;
        }

        // optional int32 velocityIterations = 2;
        private int velocityIterations_;

        public boolean hasVelocityIterations() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public int getVelocityIterations() {
          return velocityIterations_;
        }

        public Builder setVelocityIterations(int value) {
          bitField0_ |= 0x00000002;
          velocityIterations_ = value;
          onChanged();
          return this;
        }

        public Builder clearVelocityIterations() {
          bitField0_ = (bitField0_ & ~0x00000002);
          velocityIterations_ = 0;
          onChanged();
          return this;
        }

        // optional int32 positionIterations = 3;
        private int positionIterations_;

        public boolean hasPositionIterations() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        public int getPositionIterations() {
          return positionIterations_;
        }

        public Builder setPositionIterations(int value) {
          bitField0_ |= 0x00000004;
          positionIterations_ = value;
          onChanged();
          return this;
        }

        public Builder clearPositionIterations() {
          bitField0_ = (bitField0_ & ~0x00000004);
          positionIterations_ = 0;
          onChanged();
          return this;
        }

        // optional float timeStep = 4;
        private float timeStep_;

        public boolean hasTimeStep() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        public float getTimeStep() {
          return timeStep_;
        }

        public Builder setTimeStep(float value) {
          bitField0_ |= 0x00000008;
          timeStep_ = value;
          onChanged();
          return this;
        }

        public Builder clearTimeStep() {
          bitField0_ = (bitField0_ & ~0x00000008);
          timeStep_ = 0F;
          onChanged();
          return this;
        }

        // optional float gravityX = 5;
        private float gravityX_;

        public boolean hasGravityX() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        public float getGravityX() {
          return gravityX_;
        }

        public Builder setGravityX(float value) {
          bitField0_ |= 0x00000010;
          gravityX_ = value;
          onChanged();
          return this;
        }

        public Builder clearGravityX() {
          bitField0_ = (bitField0_ & ~0x00000010);
          gravityX_ = 0F;
          onChanged();
          return this;
        }

        // optional float gravityY = 6;
        private float gravityY_;

        public boolean hasGravityY() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        public float getGravityY() {
          return gravityY_;
        }

        public Builder setGravityY(float value) {
          bitField0_ |= 0x00000020;
          gravityY_ = value;
          onChanged();
          return this;
        }

        public Builder clearGravityY() {
          bitField0_ = (bitField0_ & ~0x00000020);
          gravityY_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences)
      }

      static {
        defaultInstance = new WorldPreferences(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences)
    }

    public interface CardPreferencesOrBuilder extends com.google.protobuf.MessageOrBuilder {

      // optional int32 cardNoX = 1;
      boolean hasCardNoX();

      int getCardNoX();

      // optional int32 cardNoY = 2;
      boolean hasCardNoY();

      int getCardNoY();

      // optional int32 cardWidth = 3;
      boolean hasCardWidth();

      int getCardWidth();

      // optional int32 cardHeight = 4;
      boolean hasCardHeight();

      int getCardHeight();
    }

    public static final class CardPreferences extends com.google.protobuf.GeneratedMessage implements
        CardPreferencesOrBuilder {
      // Use CardPreferences.newBuilder() to construct.
      private CardPreferences(Builder builder) {
        super(builder);
      }

      private CardPreferences(boolean noInit) {
      }

      private static final CardPreferences defaultInstance;

      public static CardPreferences getDefaultInstance() {
        return defaultInstance;
      }

      public CardPreferences getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_fieldAccessorTable;
      }

      private int bitField0_;
      // optional int32 cardNoX = 1;
      public static final int CARDNOX_FIELD_NUMBER = 1;
      private int cardNoX_;

      public boolean hasCardNoX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public int getCardNoX() {
        return cardNoX_;
      }

      // optional int32 cardNoY = 2;
      public static final int CARDNOY_FIELD_NUMBER = 2;
      private int cardNoY_;

      public boolean hasCardNoY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public int getCardNoY() {
        return cardNoY_;
      }

      // optional int32 cardWidth = 3;
      public static final int CARDWIDTH_FIELD_NUMBER = 3;
      private int cardWidth_;

      public boolean hasCardWidth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public int getCardWidth() {
        return cardWidth_;
      }

      // optional int32 cardHeight = 4;
      public static final int CARDHEIGHT_FIELD_NUMBER = 4;
      private int cardHeight_;

      public boolean hasCardHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      public int getCardHeight() {
        return cardHeight_;
      }

      private void initFields() {
        cardNoX_ = 0;
        cardNoY_ = 0;
        cardWidth_ = 0;
        cardHeight_ = 0;
      }

      private byte memoizedIsInitialized = -1;

      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1)
          return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, cardNoX_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, cardNoY_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, cardWidth_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, cardHeight_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1)
          return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, cardNoX_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, cardNoY_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, cardWidth_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream.computeInt32Size(4, cardHeight_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;

      @java.lang.Override
      protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(
          com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(
          com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(
          java.io.InputStream input) throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseDelimitedFrom(
          java.io.InputStream input) throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(
          com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }

      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(
          com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
      }

      public static Builder newBuilder() {
        return Builder.create();
      }

      public Builder newBuilderForType() {
        return newBuilder();
      }

      public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences prototype) {
        return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
        return newBuilder(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }

      public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_fieldAccessorTable;
        }

        // Construct using
        // com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }

        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          cardNoX_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          cardNoY_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          cardWidth_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          cardHeight_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
          return com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDescriptor();
        }

        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences getDefaultInstanceForType() {
          return com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDefaultInstance();
        }

        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences build() {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
          }
          return result;
        }

        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences buildPartial() {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences result = new com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences(
              this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.cardNoX_ = cardNoX_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.cardNoY_ = cardNoY_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.cardWidth_ = cardWidth_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.cardHeight_ = cardHeight_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences) {
            return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences) other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences other) {
          if (other == com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDefaultInstance())
            return this;
          if (other.hasCardNoX()) {
            setCardNoX(other.getCardNoX());
          }
          if (other.hasCardNoY()) {
            setCardNoY(other.getCardNoY());
          }
          if (other.hasCardWidth()) {
            setCardWidth(other.getCardWidth());
          }
          if (other.hasCardHeight()) {
            setCardHeight(other.getCardHeight());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
              .newBuilder(this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cardNoX_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cardNoY_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              cardWidth_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              cardHeight_ = input.readInt32();
              break;
            }
            }
          }
        }

        private int bitField0_;

        // optional int32 cardNoX = 1;
        private int cardNoX_;

        public boolean hasCardNoX() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public int getCardNoX() {
          return cardNoX_;
        }

        public Builder setCardNoX(int value) {
          bitField0_ |= 0x00000001;
          cardNoX_ = value;
          onChanged();
          return this;
        }

        public Builder clearCardNoX() {
          bitField0_ = (bitField0_ & ~0x00000001);
          cardNoX_ = 0;
          onChanged();
          return this;
        }

        // optional int32 cardNoY = 2;
        private int cardNoY_;

        public boolean hasCardNoY() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public int getCardNoY() {
          return cardNoY_;
        }

        public Builder setCardNoY(int value) {
          bitField0_ |= 0x00000002;
          cardNoY_ = value;
          onChanged();
          return this;
        }

        public Builder clearCardNoY() {
          bitField0_ = (bitField0_ & ~0x00000002);
          cardNoY_ = 0;
          onChanged();
          return this;
        }

        // optional int32 cardWidth = 3;
        private int cardWidth_;

        public boolean hasCardWidth() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        public int getCardWidth() {
          return cardWidth_;
        }

        public Builder setCardWidth(int value) {
          bitField0_ |= 0x00000004;
          cardWidth_ = value;
          onChanged();
          return this;
        }

        public Builder clearCardWidth() {
          bitField0_ = (bitField0_ & ~0x00000004);
          cardWidth_ = 0;
          onChanged();
          return this;
        }

        // optional int32 cardHeight = 4;
        private int cardHeight_;

        public boolean hasCardHeight() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        public int getCardHeight() {
          return cardHeight_;
        }

        public Builder setCardHeight(int value) {
          bitField0_ |= 0x00000008;
          cardHeight_ = value;
          onChanged();
          return this;
        }

        public Builder clearCardHeight() {
          bitField0_ = (bitField0_ & ~0x00000008);
          cardHeight_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences)
      }

      static {
        defaultInstance = new CardPreferences(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences)
    }

    private int bitField0_;
    // optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences
    // debugDrawPrefs = 1;
    public static final int DEBUGDRAWPREFS_FIELD_NUMBER = 1;
    private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs_;

    public boolean hasDebugDrawPrefs() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences getDebugDrawPrefs() {
      return debugDrawPrefs_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder getDebugDrawPrefsOrBuilder() {
      return debugDrawPrefs_;
    }

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences
    // worldPrefs = 2;
    public static final int WORLDPREFS_FIELD_NUMBER = 2;
    private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences worldPrefs_;

    public boolean hasWorldPrefs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences getWorldPrefs() {
      return worldPrefs_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder getWorldPrefsOrBuilder() {
      return worldPrefs_;
    }

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences
    // cardPrefs = 3;
    public static final int CARDPREFS_FIELD_NUMBER = 3;
    private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences cardPrefs_;

    public boolean hasCardPrefs() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences getCardPrefs() {
      return cardPrefs_;
    }

    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder getCardPrefsOrBuilder() {
      return cardPrefs_;
    }

    private void initFields() {
      debugDrawPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.getDefaultInstance();
      worldPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDefaultInstance();
      cardPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, debugDrawPrefs_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, worldPrefs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, cardPrefs_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, debugDrawPrefs_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, worldPrefs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, cardPrefs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(
        com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_fieldAccessorTable;
      }

      // Construct using
      // com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDebugDrawPrefsFieldBuilder();
          getWorldPrefsFieldBuilder();
          getCardPrefsFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (debugDrawPrefsBuilder_ == null) {
          debugDrawPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences
              .getDefaultInstance();
        } else {
          debugDrawPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (worldPrefsBuilder_ == null) {
          worldPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDefaultInstance();
        } else {
          worldPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (cardPrefsBuilder_ == null) {
          cardPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDefaultInstance();
        } else {
          cardPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDescriptor();
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance();
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences build() {
        com.laex.cg2d.protobuf.GameObject.CGScreenPreferences result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.laex.cg2d.protobuf.GameObject.CGScreenPreferences result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGScreenPreferences result = new com.laex.cg2d.protobuf.GameObject.CGScreenPreferences(
            this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (debugDrawPrefsBuilder_ == null) {
          result.debugDrawPrefs_ = debugDrawPrefs_;
        } else {
          result.debugDrawPrefs_ = debugDrawPrefsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (worldPrefsBuilder_ == null) {
          result.worldPrefs_ = worldPrefs_;
        } else {
          result.worldPrefs_ = worldPrefsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (cardPrefsBuilder_ == null) {
          result.cardPrefs_ = cardPrefs_;
        } else {
          result.cardPrefs_ = cardPrefsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGScreenPreferences) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGScreenPreferences) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance())
          return this;
        if (other.hasDebugDrawPrefs()) {
          mergeDebugDrawPrefs(other.getDebugDrawPrefs());
        }
        if (other.hasWorldPrefs()) {
          mergeWorldPrefs(other.getWorldPrefs());
        }
        if (other.hasCardPrefs()) {
          mergeCardPrefs(other.getCardPrefs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(this
            .getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            onChanged();
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            }
            break;
          }
          case 10: {
            com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences
                .newBuilder();
            if (hasDebugDrawPrefs()) {
              subBuilder.mergeFrom(getDebugDrawPrefs());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setDebugDrawPrefs(subBuilder.buildPartial());
            break;
          }
          case 18: {
            com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences
                .newBuilder();
            if (hasWorldPrefs()) {
              subBuilder.mergeFrom(getWorldPrefs());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setWorldPrefs(subBuilder.buildPartial());
            break;
          }
          case 26: {
            com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder subBuilder = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences
                .newBuilder();
            if (hasCardPrefs()) {
              subBuilder.mergeFrom(getCardPrefs());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setCardPrefs(subBuilder.buildPartial());
            break;
          }
          }
        }
      }

      private int bitField0_;

      // optional
      // .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences
      // debugDrawPrefs = 1;
      private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder> debugDrawPrefsBuilder_;

      public boolean hasDebugDrawPrefs() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences getDebugDrawPrefs() {
        if (debugDrawPrefsBuilder_ == null) {
          return debugDrawPrefs_;
        } else {
          return debugDrawPrefsBuilder_.getMessage();
        }
      }

      public Builder setDebugDrawPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences value) {
        if (debugDrawPrefsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          debugDrawPrefs_ = value;
          onChanged();
        } else {
          debugDrawPrefsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      public Builder setDebugDrawPrefs(
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder builderForValue) {
        if (debugDrawPrefsBuilder_ == null) {
          debugDrawPrefs_ = builderForValue.build();
          onChanged();
        } else {
          debugDrawPrefsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      public Builder mergeDebugDrawPrefs(
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences value) {
        if (debugDrawPrefsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)
              && debugDrawPrefs_ != com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences
                  .getDefaultInstance()) {
            debugDrawPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences
                .newBuilder(debugDrawPrefs_).mergeFrom(value).buildPartial();
          } else {
            debugDrawPrefs_ = value;
          }
          onChanged();
        } else {
          debugDrawPrefsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }

      public Builder clearDebugDrawPrefs() {
        if (debugDrawPrefsBuilder_ == null) {
          debugDrawPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences
              .getDefaultInstance();
          onChanged();
        } else {
          debugDrawPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder getDebugDrawPrefsBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getDebugDrawPrefsFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder getDebugDrawPrefsOrBuilder() {
        if (debugDrawPrefsBuilder_ != null) {
          return debugDrawPrefsBuilder_.getMessageOrBuilder();
        } else {
          return debugDrawPrefs_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder> getDebugDrawPrefsFieldBuilder() {
        if (debugDrawPrefsBuilder_ == null) {
          debugDrawPrefsBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder>(
              debugDrawPrefs_, getParentForChildren(), isClean());
          debugDrawPrefs_ = null;
        }
        return debugDrawPrefsBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences
      // worldPrefs = 2;
      private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences worldPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder> worldPrefsBuilder_;

      public boolean hasWorldPrefs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences getWorldPrefs() {
        if (worldPrefsBuilder_ == null) {
          return worldPrefs_;
        } else {
          return worldPrefsBuilder_.getMessage();
        }
      }

      public Builder setWorldPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences value) {
        if (worldPrefsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          worldPrefs_ = value;
          onChanged();
        } else {
          worldPrefsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder setWorldPrefs(
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder builderForValue) {
        if (worldPrefsBuilder_ == null) {
          worldPrefs_ = builderForValue.build();
          onChanged();
        } else {
          worldPrefsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder mergeWorldPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences value) {
        if (worldPrefsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)
              && worldPrefs_ != com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences
                  .getDefaultInstance()) {
            worldPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences
                .newBuilder(worldPrefs_).mergeFrom(value).buildPartial();
          } else {
            worldPrefs_ = value;
          }
          onChanged();
        } else {
          worldPrefsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }

      public Builder clearWorldPrefs() {
        if (worldPrefsBuilder_ == null) {
          worldPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDefaultInstance();
          onChanged();
        } else {
          worldPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder getWorldPrefsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getWorldPrefsFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder getWorldPrefsOrBuilder() {
        if (worldPrefsBuilder_ != null) {
          return worldPrefsBuilder_.getMessageOrBuilder();
        } else {
          return worldPrefs_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder> getWorldPrefsFieldBuilder() {
        if (worldPrefsBuilder_ == null) {
          worldPrefsBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder>(
              worldPrefs_, getParentForChildren(), isClean());
          worldPrefs_ = null;
        }
        return worldPrefsBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences
      // cardPrefs = 3;
      private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences cardPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences
          .getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder> cardPrefsBuilder_;

      public boolean hasCardPrefs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences getCardPrefs() {
        if (cardPrefsBuilder_ == null) {
          return cardPrefs_;
        } else {
          return cardPrefsBuilder_.getMessage();
        }
      }

      public Builder setCardPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences value) {
        if (cardPrefsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cardPrefs_ = value;
          onChanged();
        } else {
          cardPrefsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }

      public Builder setCardPrefs(
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder builderForValue) {
        if (cardPrefsBuilder_ == null) {
          cardPrefs_ = builderForValue.build();
          onChanged();
        } else {
          cardPrefsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }

      public Builder mergeCardPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences value) {
        if (cardPrefsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)
              && cardPrefs_ != com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences
                  .getDefaultInstance()) {
            cardPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.newBuilder(cardPrefs_)
                .mergeFrom(value).buildPartial();
          } else {
            cardPrefs_ = value;
          }
          onChanged();
        } else {
          cardPrefsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }

      public Builder clearCardPrefs() {
        if (cardPrefsBuilder_ == null) {
          cardPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDefaultInstance();
          onChanged();
        } else {
          cardPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder getCardPrefsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCardPrefsFieldBuilder().getBuilder();
      }

      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder getCardPrefsOrBuilder() {
        if (cardPrefsBuilder_ != null) {
          return cardPrefsBuilder_.getMessageOrBuilder();
        } else {
          return cardPrefs_;
        }
      }

      private com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder> getCardPrefsFieldBuilder() {
        if (cardPrefsBuilder_ == null) {
          cardPrefsBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder>(
              cardPrefs_, getParentForChildren(), isClean());
          cardPrefs_ = null;
        }
        return cardPrefsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGScreenPreferences)
    }

    static {
      defaultInstance = new CGScreenPreferences(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGScreenPreferences)
  }

  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGGameModel_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGGameModel_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGJoint_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGJoint_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGResourceFile_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGResourceFile_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGEntity_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGEntity_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGBounds_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGBounds_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGVector2_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGVector2_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGBodyDef_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGBodyDef_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGFilter_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGFilter_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGFixtureDef_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGFixtureDef_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGShape_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGShape_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGLayer_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGLayer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
  static {
    java.lang.String[] descriptorData =
      {
          "\n\'com/laex/cg2d/protobuf/GameObject.prot" + "o\022\026com.laex.cg2d.protobuf\"\200\001\n\013CGGameMode"
              + "l\022/\n\006layers\030\001 \003(\0132\037.com.laex.cg2d.protob"
              + "uf.CGLayer\022@\n\013screenPrefs\030\002 \001(\0132+.com.la"
              + "ex.cg2d.protobuf.CGScreenPreferences\"\204\004\n"
              + "\007CGJoint\022\025\n\rsourceShapeId\030\001 \001(\t\022\025\n\rtarge"
              + "tShapeId\030\002 \001(\t\0221\n\004type\030\003 \001(\0162#.com.laex."
              + "cg2d.protobuf.CGJointType\022D\n\020distanceJoi"
              + "ntDef\030\005 \001(\0132*.com.laex.cg2d.protobuf.CGD"
              + "istanceJointDef\022D\n\020revoluteJointDef\030\006 \001(",
          "\0132*.com.laex.cg2d.protobuf.CGRevoluteJoi" + "ntDef\022F\n\021prismaticJointDef\030\007 \001(\0132+.com.l"
              + "aex.cg2d.protobuf.CGPrismaticJointDef\022@\n"
              + "\016pulleyJointDef\030\010 \001(\0132(.com.laex.cg2d.pr"
              + "otobuf.CGPulleyJointDef\022D\n\020frictionJoint"
              + "Def\030\t \001(\0132*.com.laex.cg2d.protobuf.CGFri"
              + "ctionJointDef\022<\n\014weldJointDef\030\n \001(\0132&.co"
              + "m.laex.cg2d.protobuf.CGWeldJointDef\"X\n\022C"
              + "GDistanceJointDef\022\030\n\020collideConnected\030\001 "
              + "\001(\010\022\022\n\nfreqencyHz\030\002 \001(\002\022\024\n\014dampingRatio\030",
          "\003 \001(\002\"\304\001\n\022CGRevoluteJointDef\022\030\n\020collideC"
              + "onnected\030\001 \001(\010\022\026\n\016referenceAngle\030\002 \001(\002\022\023"
              + "\n\013enableLimit\030\003 \001(\010\022\022\n\nlowerAngle\030\004 \001(\002\022"
              + "\022\n\nupperAngle\030\005 \001(\002\022\023\n\013enableMotor\030\006 \001(\010"
              + "\022\022\n\nmotorSpeed\030\007 \001(\002\022\026\n\016maxMotorTorque\030\010"
              + " \001(\002\"\264\002\n\023CGPrismaticJointDef\022\030\n\020collideC"
              + "onnected\030\001 \001(\010\0221\n\006anchor\030\002 \001(\0132!.com.lae"
              + "x.cg2d.protobuf.CGVector2\022/\n\004axis\030\003 \001(\0132"
              + "!.com.laex.cg2d.protobuf.CGVector2\022\026\n\016re"
              + "ferenceAngle\030\005 \001(\002\022\023\n\013enableLimit\030\006 \001(\010\022",
          "\030\n\020lowerTranslation\030\007 \001(\002\022\030\n\020upperTransl"
              + "ation\030\010 \001(\002\022\023\n\013enableMotor\030\t \001(\010\022\025\n\rmaxM"
              + "otorForce\030\n \001(\002\022\022\n\nmotorSpeed\030\013 \001(\002\"\257\001\n\020"
              + "CGPulleyJointDef\022\030\n\020collideConnected\030\001 \001"
              + "(\010\0228\n\rgroundAnchorA\030\002 \001(\0132!.com.laex.cg2"
              + "d.protobuf.CGVector2\0228\n\rgroundAnchorB\030\003 "
              + "\001(\0132!.com.laex.cg2d.protobuf.CGVector2\022\r"
              + "\n\005ratio\030\004 \001(\002\"S\n\022CGFrictionJointDef\022\030\n\020c"
              + "ollideConnected\030\001 \001(\010\022\020\n\010maxForce\030\002 \001(\002\022"
              + "\021\n\tmaxTorque\030\003 \001(\002\"*\n\016CGWeldJointDef\022\030\n\020",
          "collideConnected\030\001 \001(\010\"D\n\016CGResourceFile"
              + "\022\024\n\014resourceFile\030\001 \001(\t\022\034\n\024resourceFileAb"
              + "solute\030\002 \001(\t\"\273\003\n\021CGEntityAnimation\022\025\n\ran"
              + "imationName\030\001 \001(\t\022E\n\025animationResourceFi"
              + "le\030\002 \001(\0132&.com.laex.cg2d.protobuf.CGReso"
              + "urceFile\022;\n\013fixtureFile\030\003 \001(\0132&.com.laex"
              + ".cg2d.protobuf.CGResourceFile\022\031\n\021animati"
              + "onDuration\030\004 \001(\002\022\030\n\020defaultAnimation\030\005 \001"
              + "(\010\022\014\n\004cols\030\006 \001(\005\022\014\n\004rows\030\007 \001(\005\022D\n\rcollis"
              + "ionType\030\010 \001(\0162-.com.laex.cg2d.protobuf.C",
          "GEntityCollisionType\022\014\n\004shpX\030\t \001(\005\022\014\n\004sh"
              + "pY\030\n \001(\005\022\020\n\010shpWidth\030\013 \001(\005\022\021\n\tshpHeight\030"
              + "\014 \001(\005\0223\n\010vertices\030\r \003(\0132!.com.laex.cg2d."
              + "protobuf.CGVector2\"_\n\010CGEntity\022\024\n\014intern"
              + "alName\030\001 \001(\t\022=\n\nanimations\030\002 \003(\0132).com.l"
              + "aex.cg2d.protobuf.CGEntityAnimation\"?\n\010C"
              + "GBounds\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\r\n\005width\030\003"
              + " \001(\002\022\016\n\006height\030\004 \001(\002\"!\n\tCGVector2\022\t\n\001x\030\001"
              + " \002(\002\022\t\n\001y\030\002 \002(\002\"\215\003\n\tCGBodyDef\022\016\n\006active\030"
              + "\001 \001(\010\022\022\n\nallowSleep\030\002 \001(\010\022\r\n\005angle\030\003 \001(\002",
          "\022\026\n\016angularDamping\030\004 \001(\002\022\027\n\017angularVeloc"
              + "ity\030\005 \001(\002\022\r\n\005awake\030\006 \001(\010\022\016\n\006bullet\030\007 \001(\010"
              + "\022\025\n\rfixedRotation\030\010 \001(\010\022\026\n\016intertialScal"
              + "e\030\t \001(\002\022\026\n\016linearDampitng\030\n \001(\002\022\024\n\014gravi"
              + "tyScale\030\013 \001(\002\0229\n\016linearVelocity\030\014 \001(\0132!."
              + "com.laex.cg2d.protobuf.CGVector2\0220\n\004type"
              + "\030\r \001(\0162\".com.laex.cg2d.protobuf.CGBodyTy"
              + "pe\0223\n\010position\030\016 \001(\0132!.com.laex.cg2d.pro"
              + "tobuf.CGVector2\"F\n\010CGFilter\022\024\n\014categoryB"
              + "its\030\001 \001(\005\022\020\n\010maskBits\030\002 \001(\005\022\022\n\ngroupInde",
          "x\030\003 \001(\005\"\210\001\n\014CGFixtureDef\022\017\n\007density\030\001 \001("
              + "\002\022\020\n\010friction\030\002 \001(\002\022\023\n\013restitution\030\003 \001(\002"
              + "\022\016\n\006sensor\030\004 \001(\010\0220\n\006filter\030\005 \001(\0132 .com.l"
              + "aex.cg2d.protobuf.CGFilter\"\346\003\n\007CGShape\022\n"
              + "\n\002id\030\001 \001(\t\022\017\n\007visible\030\002 \001(\010\022\016\n\006locked\030\003 "
              + "\001(\010\022\022\n\nbackground\030\004 \001(\010\022F\n\026backgroundRes"
              + "ourceFile\030\005 \001(\0132&.com.laex.cg2d.protobuf"
              + ".CGResourceFile\022B\n\017editorShapeType\030\006 \001(\016"
              + "2).com.laex.cg2d.protobuf.CGEditorShapeT"
              + "ype\0220\n\006bounds\030\007 \001(\0132 .com.laex.cg2d.prot",
          "obuf.CGBounds\0222\n\007bodyDef\030\010 \001(\0132!.com.lae"
              + "x.cg2d.protobuf.CGBodyDef\0228\n\nfixtureDef\030" + "\t \001(\0132$.com.laex.cg2d.protobuf.CGFixture"
              + "Def\022/\n\006joints\030\n \003(\0132\037.com.laex.cg2d.prot"
              + "obuf.CGJoint\022=\n\rentityRefFile\030\013 \001(\0132&.co"
              + "m.laex.cg2d.protobuf.CGResourceFile\"t\n\007C"
              + "GLayer\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\017\n\007visi"
              + "ble\030\003 \001(\010\022\016\n\006locked\030\004 \001(\010\022.\n\005shape\030\005 \003(\013"
              + "2\037.com.laex.cg2d.protobuf.CGShape\"\271\005\n\023CG"
              + "ScreenPreferences\022X\n\016debugDrawPrefs\030\001 \001(",
          "\0132@.com.laex.cg2d.protobuf.CGScreenPrefe" + "rences.DebugDrawPreferences\022P\n\nworldPref"
              + "s\030\002 \001(\0132<.com.laex.cg2d.protobuf.CGScree"
              + "nPreferences.WorldPreferences\022N\n\tcardPre"
              + "fs\030\003 \001(\0132;.com.laex.cg2d.protobuf.CGScre"
              + "enPreferences.CardPreferences\032\264\001\n\024DebugD"
              + "rawPreferences\022\022\n\ndrawBodies\030\001 \001(\010\022\022\n\ndr"
              + "awJoints\030\002 \001(\010\022\020\n\010drawAABB\030\003 \001(\010\022\032\n\022draw"
              + "InactiveBodies\030\004 \001(\010\022\031\n\021installMouseJoin"
              + "t\030\005 \001(\010\022\025\n\rdrawDebugData\030\006 \001(\010\022\024\n\014drawEn",
          "tities\030\007 \001(\010\032\222\001\n\020WorldPreferences\022\020\n\010ptm"
              + "Ratio\030\001 \001(\005\022\032\n\022velocityIterations\030\002 \001(\005\022"
              + "\032\n\022positionIterations\030\003 \001(\005\022\020\n\010timeStep\030"
              + "\004 \001(\002\022\020\n\010gravityX\030\005 \001(\002\022\020\n\010gravityY\030\006 \001("
              + "\002\032Z\n\017CardPreferences\022\017\n\007cardNoX\030\001 \001(\005\022\017\n"
              + "\007cardNoY\030\002 \001(\005\022\021\n\tcardWidth\030\003 \001(\005\022\022\n\ncar"
              + "dHeight\030\004 \001(\005*\223\001\n\013CGJointType\022\013\n\007UNKNOWN"
              + "\020\001\022\014\n\010REVOLUTE\020\002\022\r\n\tPRISMATIC\020\003\022\014\n\010DISTA"
              + "NCE\020\004\022\n\n\006PULLEY\020\005\022\t\n\005MOUSE\020\006\022\010\n\004GEAR\020\007\022\t"
              + "\n\005WHEEL\020\010\022\010\n\004WELD\020\t\022\014\n\010FRICTION\020\n\022\010\n\004ROP",
          "E\020\013*B\n\025CGEntityCollisionType\022\010\n\004NONE\020\000\022\007"
              + "\n\003BOX\020\001\022\n\n\006CIRCLE\020\002\022\n\n\006CUSTOM\020\003*4\n\nCGBod"
              + "yType\022\n\n\006STATIC\020\001\022\r\n\tKINEMATIC\020\002\022\013\n\007DYNA"
              + "MIC\020\003*\232\001\n\021CGEditorShapeType\022\027\n\023SIMPLE_SH"
              + "APE_CIRCLE\020\001\022\024\n\020SIMPLE_SHAPE_BOX\020\002\022\026\n\022SI"
              + "MPLE_SHAPE_HEDGE\020\003\022\026\n\022SIMPLE_SHAPE_VEDGE"
              + "\020\004\022\024\n\020BACKGROUND_SHAPE\020\005\022\020\n\014ENTITY_SHAPE" + "\020\006" };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
      public com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors.FileDescriptor root) {
        descriptor = root;
        internal_static_com_laex_cg2d_protobuf_CGGameModel_descriptor = getDescriptor().getMessageTypes().get(0);
        internal_static_com_laex_cg2d_protobuf_CGGameModel_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGGameModel_descriptor, new java.lang.String[]
              { "Layers", "ScreenPrefs", }, com.laex.cg2d.protobuf.GameObject.CGGameModel.class,
            com.laex.cg2d.protobuf.GameObject.CGGameModel.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGJoint_descriptor = getDescriptor().getMessageTypes().get(1);
        internal_static_com_laex_cg2d_protobuf_CGJoint_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGJoint_descriptor, new java.lang.String[]
              {
                  "SourceShapeId",
                  "TargetShapeId",
                  "Type",
                  "DistanceJointDef",
                  "RevoluteJointDef",
                  "PrismaticJointDef",
                  "PulleyJointDef",
                  "FrictionJointDef",
                  "WeldJointDef", }, com.laex.cg2d.protobuf.GameObject.CGJoint.class,
            com.laex.cg2d.protobuf.GameObject.CGJoint.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_descriptor = getDescriptor().getMessageTypes().get(2);
        internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_descriptor, new java.lang.String[]
              { "CollideConnected", "FreqencyHz", "DampingRatio", },
            com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.class,
            com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_descriptor = getDescriptor().getMessageTypes().get(3);
        internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_descriptor, new java.lang.String[]
              {
                  "CollideConnected",
                  "ReferenceAngle",
                  "EnableLimit",
                  "LowerAngle",
                  "UpperAngle",
                  "EnableMotor",
                  "MotorSpeed",
                  "MaxMotorTorque", }, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.class,
            com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_descriptor = getDescriptor().getMessageTypes()
            .get(4);
        internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_descriptor, new java.lang.String[]
              {
                  "CollideConnected",
                  "Anchor",
                  "Axis",
                  "ReferenceAngle",
                  "EnableLimit",
                  "LowerTranslation",
                  "UpperTranslation",
                  "EnableMotor",
                  "MaxMotorForce",
                  "MotorSpeed", }, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.class,
            com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_descriptor = getDescriptor().getMessageTypes().get(5);
        internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_descriptor, new java.lang.String[]
              { "CollideConnected", "GroundAnchorA", "GroundAnchorB", "Ratio", },
            com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.class,
            com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_descriptor = getDescriptor().getMessageTypes().get(6);
        internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_descriptor, new java.lang.String[]
              { "CollideConnected", "MaxForce", "MaxTorque", },
            com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.class,
            com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_descriptor = getDescriptor().getMessageTypes().get(7);
        internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_descriptor, new java.lang.String[]
              { "CollideConnected", }, com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.class,
            com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGResourceFile_descriptor = getDescriptor().getMessageTypes().get(8);
        internal_static_com_laex_cg2d_protobuf_CGResourceFile_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGResourceFile_descriptor, new java.lang.String[]
              { "ResourceFile", "ResourceFileAbsolute", }, com.laex.cg2d.protobuf.GameObject.CGResourceFile.class,
            com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_descriptor = getDescriptor().getMessageTypes().get(9);
        internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_descriptor, new java.lang.String[]
              {
                  "AnimationName",
                  "AnimationResourceFile",
                  "FixtureFile",
                  "AnimationDuration",
                  "DefaultAnimation",
                  "Cols",
                  "Rows",
                  "CollisionType",
                  "ShpX",
                  "ShpY",
                  "ShpWidth",
                  "ShpHeight",
                  "Vertices", }, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.class,
            com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGEntity_descriptor = getDescriptor().getMessageTypes().get(10);
        internal_static_com_laex_cg2d_protobuf_CGEntity_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGEntity_descriptor, new java.lang.String[]
              { "InternalName", "Animations", }, com.laex.cg2d.protobuf.GameObject.CGEntity.class,
            com.laex.cg2d.protobuf.GameObject.CGEntity.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGBounds_descriptor = getDescriptor().getMessageTypes().get(11);
        internal_static_com_laex_cg2d_protobuf_CGBounds_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGBounds_descriptor, new java.lang.String[]
              { "X", "Y", "Width", "Height", }, com.laex.cg2d.protobuf.GameObject.CGBounds.class,
            com.laex.cg2d.protobuf.GameObject.CGBounds.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGVector2_descriptor = getDescriptor().getMessageTypes().get(12);
        internal_static_com_laex_cg2d_protobuf_CGVector2_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGVector2_descriptor, new java.lang.String[]
              { "X", "Y", }, com.laex.cg2d.protobuf.GameObject.CGVector2.class,
            com.laex.cg2d.protobuf.GameObject.CGVector2.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGBodyDef_descriptor = getDescriptor().getMessageTypes().get(13);
        internal_static_com_laex_cg2d_protobuf_CGBodyDef_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGBodyDef_descriptor, new java.lang.String[]
              {
                  "Active",
                  "AllowSleep",
                  "Angle",
                  "AngularDamping",
                  "AngularVelocity",
                  "Awake",
                  "Bullet",
                  "FixedRotation",
                  "IntertialScale",
                  "LinearDampitng",
                  "GravityScale",
                  "LinearVelocity",
                  "Type",
                  "Position", }, com.laex.cg2d.protobuf.GameObject.CGBodyDef.class,
            com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGFilter_descriptor = getDescriptor().getMessageTypes().get(14);
        internal_static_com_laex_cg2d_protobuf_CGFilter_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGFilter_descriptor, new java.lang.String[]
              { "CategoryBits", "MaskBits", "GroupIndex", }, com.laex.cg2d.protobuf.GameObject.CGFilter.class,
            com.laex.cg2d.protobuf.GameObject.CGFilter.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGFixtureDef_descriptor = getDescriptor().getMessageTypes().get(15);
        internal_static_com_laex_cg2d_protobuf_CGFixtureDef_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGFixtureDef_descriptor, new java.lang.String[]
              { "Density", "Friction", "Restitution", "Sensor", "Filter", },
            com.laex.cg2d.protobuf.GameObject.CGFixtureDef.class,
            com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGShape_descriptor = getDescriptor().getMessageTypes().get(16);
        internal_static_com_laex_cg2d_protobuf_CGShape_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGShape_descriptor, new java.lang.String[]
              {
                  "Id",
                  "Visible",
                  "Locked",
                  "Background",
                  "BackgroundResourceFile",
                  "EditorShapeType",
                  "Bounds",
                  "BodyDef",
                  "FixtureDef",
                  "Joints",
                  "EntityRefFile", }, com.laex.cg2d.protobuf.GameObject.CGShape.class,
            com.laex.cg2d.protobuf.GameObject.CGShape.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGLayer_descriptor = getDescriptor().getMessageTypes().get(17);
        internal_static_com_laex_cg2d_protobuf_CGLayer_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGLayer_descriptor, new java.lang.String[]
              { "Id", "Name", "Visible", "Locked", "Shape", }, com.laex.cg2d.protobuf.GameObject.CGLayer.class,
            com.laex.cg2d.protobuf.GameObject.CGLayer.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor = getDescriptor().getMessageTypes().get(
            18);
        internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor, new java.lang.String[]
              { "DebugDrawPrefs", "WorldPrefs", "CardPrefs", },
            com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.class,
            com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_descriptor = internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor
            .getNestedTypes().get(0);
        internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_descriptor,
            new java.lang.String[]
              {
                  "DrawBodies",
                  "DrawJoints",
                  "DrawAABB",
                  "DrawInactiveBodies",
                  "InstallMouseJoint",
                  "DrawDebugData",
                  "DrawEntities", }, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.class,
            com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_descriptor = internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor
            .getNestedTypes().get(1);
        internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_descriptor,
            new java.lang.String[]
              { "PtmRatio", "VelocityIterations", "PositionIterations", "TimeStep", "GravityX", "GravityY", },
            com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.class,
            com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder.class);
        internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_descriptor = internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor
            .getNestedTypes().get(2);
        internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_descriptor,
            new java.lang.String[]
              { "CardNoX", "CardNoY", "CardWidth", "CardHeight", },
            com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.class,
            com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder.class);
        return null;
      }
    };
    com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {}, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
