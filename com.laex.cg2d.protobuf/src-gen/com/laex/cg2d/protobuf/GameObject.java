/*
 * Copyright (c) 2012, 2013 Hemanta Sapkota.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * Hemanta Sapkota (laex.pearl@gmail.com)
 */

package com.laex.cg2d.protobuf;

/**
 * The Class GameObject.
 */
public final class GameObject {
  
  /**
   * Instantiates a new game object.
   */
  private GameObject() {}
  
  /**
   * Register all extensions.
   *
   * @param registry the registry
   */
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code com.laex.cg2d.protobuf.CGJointType}
   */
  public enum CGJointType
      implements com.google.protobuf.ProtocolMessageEnum {
    
    /** <code>UNKNOWN = 1;</code>. */
    UNKNOWN(0, 1),
    
    /** <code>REVOLUTE = 2;</code>. */
    REVOLUTE(1, 2),
    
    /** <code>PRISMATIC = 3;</code>. */
    PRISMATIC(2, 3),
    
    /** <code>DISTANCE = 4;</code>. */
    DISTANCE(3, 4),
    
    /** <code>PULLEY = 5;</code>. */
    PULLEY(4, 5),
    
    /** <code>MOUSE = 6;</code>. */
    MOUSE(5, 6),
    
    /** <code>GEAR = 7;</code>. */
    GEAR(6, 7),
    
    /** <code>WHEEL = 8;</code>. */
    WHEEL(7, 8),
    
    /** <code>WELD = 9;</code>. */
    WELD(8, 9),
    
    /** <code>FRICTION = 10;</code>. */
    FRICTION(9, 10),
    
    /** <code>ROPE = 11;</code>. */
    ROPE(10, 11),
    ;

    /** <code>UNKNOWN = 1;</code>. */
    public static final int UNKNOWN_VALUE = 1;
    
    /** <code>REVOLUTE = 2;</code>. */
    public static final int REVOLUTE_VALUE = 2;
    
    /** <code>PRISMATIC = 3;</code>. */
    public static final int PRISMATIC_VALUE = 3;
    
    /** <code>DISTANCE = 4;</code>. */
    public static final int DISTANCE_VALUE = 4;
    
    /** <code>PULLEY = 5;</code>. */
    public static final int PULLEY_VALUE = 5;
    
    /** <code>MOUSE = 6;</code>. */
    public static final int MOUSE_VALUE = 6;
    
    /** <code>GEAR = 7;</code>. */
    public static final int GEAR_VALUE = 7;
    
    /** <code>WHEEL = 8;</code>. */
    public static final int WHEEL_VALUE = 8;
    
    /** <code>WELD = 9;</code>. */
    public static final int WELD_VALUE = 9;
    
    /** <code>FRICTION = 10;</code>. */
    public static final int FRICTION_VALUE = 10;
    
    /** <code>ROPE = 11;</code>. */
    public static final int ROPE_VALUE = 11;


    /* (non-Javadoc)
     * @see com.google.protobuf.ProtocolMessageEnum#getNumber()
     */
    public final int getNumber() { return value; }

    /**
     * Value of.
     *
     * @param value the value
     * @return the cG joint type
     */
    public static CGJointType valueOf(int value) {
      switch (value) {
        case 1: return UNKNOWN;
        case 2: return REVOLUTE;
        case 3: return PRISMATIC;
        case 4: return DISTANCE;
        case 5: return PULLEY;
        case 6: return MOUSE;
        case 7: return GEAR;
        case 8: return WHEEL;
        case 9: return WELD;
        case 10: return FRICTION;
        case 11: return ROPE;
        default: return null;
      }
    }

    /**
     * Internal get value map.
     *
     * @return the com.google.protobuf. internal. enum lite map
     */
    public static com.google.protobuf.Internal.EnumLiteMap<CGJointType>
        internalGetValueMap() {
      return internalValueMap;
    }
    
    /** The internal value map. */
    private static com.google.protobuf.Internal.EnumLiteMap<CGJointType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CGJointType>() {
            public CGJointType findValueByNumber(int number) {
              return CGJointType.valueOf(number);
            }
          };

    /* (non-Javadoc)
     * @see com.google.protobuf.ProtocolMessageEnum#getValueDescriptor()
     */
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.ProtocolMessageEnum#getDescriptorForType()
     */
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.getDescriptor().getEnumTypes().get(0);
    }

    /** The Constant VALUES. */
    private static final CGJointType[] VALUES = values();

    /**
     * Value of.
     *
     * @param desc the desc
     * @return the cG joint type
     */
    public static CGJointType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    /** The index. */
    private final int index;
    
    /** The value. */
    private final int value;

    /**
     * Instantiates a new cG joint type.
     *
     * @param index the index
     * @param value the value
     */
    private CGJointType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.laex.cg2d.protobuf.CGJointType)
  }

  /**
   * Protobuf enum {@code com.laex.cg2d.protobuf.CGEntityCollisionType}
   */
  public enum CGEntityCollisionType
      implements com.google.protobuf.ProtocolMessageEnum {
    
    /** <code>NONE = 0;</code>. */
    NONE(0, 0),
    
    /** <code>BOX = 1;</code>. */
    BOX(1, 1),
    
    /** <code>CIRCLE = 2;</code>. */
    CIRCLE(2, 2),
    
    /** <code>CUSTOM = 3;</code>. */
    CUSTOM(3, 3),
    ;

    /** <code>NONE = 0;</code>. */
    public static final int NONE_VALUE = 0;
    
    /** <code>BOX = 1;</code>. */
    public static final int BOX_VALUE = 1;
    
    /** <code>CIRCLE = 2;</code>. */
    public static final int CIRCLE_VALUE = 2;
    
    /** <code>CUSTOM = 3;</code>. */
    public static final int CUSTOM_VALUE = 3;


    /* (non-Javadoc)
     * @see com.google.protobuf.ProtocolMessageEnum#getNumber()
     */
    public final int getNumber() { return value; }

    /**
     * Value of.
     *
     * @param value the value
     * @return the cG entity collision type
     */
    public static CGEntityCollisionType valueOf(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return BOX;
        case 2: return CIRCLE;
        case 3: return CUSTOM;
        default: return null;
      }
    }

    /**
     * Internal get value map.
     *
     * @return the com.google.protobuf. internal. enum lite map
     */
    public static com.google.protobuf.Internal.EnumLiteMap<CGEntityCollisionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    
    /** The internal value map. */
    private static com.google.protobuf.Internal.EnumLiteMap<CGEntityCollisionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CGEntityCollisionType>() {
            public CGEntityCollisionType findValueByNumber(int number) {
              return CGEntityCollisionType.valueOf(number);
            }
          };

    /* (non-Javadoc)
     * @see com.google.protobuf.ProtocolMessageEnum#getValueDescriptor()
     */
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.ProtocolMessageEnum#getDescriptorForType()
     */
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.getDescriptor().getEnumTypes().get(1);
    }

    /** The Constant VALUES. */
    private static final CGEntityCollisionType[] VALUES = values();

    /**
     * Value of.
     *
     * @param desc the desc
     * @return the cG entity collision type
     */
    public static CGEntityCollisionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    /** The index. */
    private final int index;
    
    /** The value. */
    private final int value;

    /**
     * Instantiates a new cG entity collision type.
     *
     * @param index the index
     * @param value the value
     */
    private CGEntityCollisionType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.laex.cg2d.protobuf.CGEntityCollisionType)
  }

  /**
   * Protobuf enum {@code com.laex.cg2d.protobuf.CGBodyType}
   */
  public enum CGBodyType
      implements com.google.protobuf.ProtocolMessageEnum {
    
    /** <code>STATIC = 1;</code>. */
    STATIC(0, 1),
    
    /** <code>KINEMATIC = 2;</code>. */
    KINEMATIC(1, 2),
    
    /** <code>DYNAMIC = 3;</code>. */
    DYNAMIC(2, 3),
    ;

    /** <code>STATIC = 1;</code>. */
    public static final int STATIC_VALUE = 1;
    
    /** <code>KINEMATIC = 2;</code>. */
    public static final int KINEMATIC_VALUE = 2;
    
    /** <code>DYNAMIC = 3;</code>. */
    public static final int DYNAMIC_VALUE = 3;


    /* (non-Javadoc)
     * @see com.google.protobuf.ProtocolMessageEnum#getNumber()
     */
    public final int getNumber() { return value; }

    /**
     * Value of.
     *
     * @param value the value
     * @return the cG body type
     */
    public static CGBodyType valueOf(int value) {
      switch (value) {
        case 1: return STATIC;
        case 2: return KINEMATIC;
        case 3: return DYNAMIC;
        default: return null;
      }
    }

    /**
     * Internal get value map.
     *
     * @return the com.google.protobuf. internal. enum lite map
     */
    public static com.google.protobuf.Internal.EnumLiteMap<CGBodyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    
    /** The internal value map. */
    private static com.google.protobuf.Internal.EnumLiteMap<CGBodyType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CGBodyType>() {
            public CGBodyType findValueByNumber(int number) {
              return CGBodyType.valueOf(number);
            }
          };

    /* (non-Javadoc)
     * @see com.google.protobuf.ProtocolMessageEnum#getValueDescriptor()
     */
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.ProtocolMessageEnum#getDescriptorForType()
     */
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.getDescriptor().getEnumTypes().get(2);
    }

    /** The Constant VALUES. */
    private static final CGBodyType[] VALUES = values();

    /**
     * Value of.
     *
     * @param desc the desc
     * @return the cG body type
     */
    public static CGBodyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    /** The index. */
    private final int index;
    
    /** The value. */
    private final int value;

    /**
     * Instantiates a new cG body type.
     *
     * @param index the index
     * @param value the value
     */
    private CGBodyType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.laex.cg2d.protobuf.CGBodyType)
  }

  /**
   * Protobuf enum {@code com.laex.cg2d.protobuf.CGEditorShapeType}
   */
  public enum CGEditorShapeType
      implements com.google.protobuf.ProtocolMessageEnum {
    
    /** <code>SIMPLE_SHAPE_CIRCLE = 1;</code>. */
    SIMPLE_SHAPE_CIRCLE(0, 1),
    
    /** <code>SIMPLE_SHAPE_BOX = 2;</code>. */
    SIMPLE_SHAPE_BOX(1, 2),
    
    /** <code>SIMPLE_SHAPE_HEDGE = 3;</code>. */
    SIMPLE_SHAPE_HEDGE(2, 3),
    
    /** <code>SIMPLE_SHAPE_VEDGE = 4;</code>. */
    SIMPLE_SHAPE_VEDGE(3, 4),
    
    /** <code>BACKGROUND_SHAPE = 5;</code>. */
    BACKGROUND_SHAPE(4, 5),
    
    /** <code>ENTITY_SHAPE = 6;</code>. */
    ENTITY_SHAPE(5, 6),
    ;

    /** <code>SIMPLE_SHAPE_CIRCLE = 1;</code>. */
    public static final int SIMPLE_SHAPE_CIRCLE_VALUE = 1;
    
    /** <code>SIMPLE_SHAPE_BOX = 2;</code>. */
    public static final int SIMPLE_SHAPE_BOX_VALUE = 2;
    
    /** <code>SIMPLE_SHAPE_HEDGE = 3;</code>. */
    public static final int SIMPLE_SHAPE_HEDGE_VALUE = 3;
    
    /** <code>SIMPLE_SHAPE_VEDGE = 4;</code>. */
    public static final int SIMPLE_SHAPE_VEDGE_VALUE = 4;
    
    /** <code>BACKGROUND_SHAPE = 5;</code>. */
    public static final int BACKGROUND_SHAPE_VALUE = 5;
    
    /** <code>ENTITY_SHAPE = 6;</code>. */
    public static final int ENTITY_SHAPE_VALUE = 6;


    /* (non-Javadoc)
     * @see com.google.protobuf.ProtocolMessageEnum#getNumber()
     */
    public final int getNumber() { return value; }

    /**
     * Value of.
     *
     * @param value the value
     * @return the cG editor shape type
     */
    public static CGEditorShapeType valueOf(int value) {
      switch (value) {
        case 1: return SIMPLE_SHAPE_CIRCLE;
        case 2: return SIMPLE_SHAPE_BOX;
        case 3: return SIMPLE_SHAPE_HEDGE;
        case 4: return SIMPLE_SHAPE_VEDGE;
        case 5: return BACKGROUND_SHAPE;
        case 6: return ENTITY_SHAPE;
        default: return null;
      }
    }

    /**
     * Internal get value map.
     *
     * @return the com.google.protobuf. internal. enum lite map
     */
    public static com.google.protobuf.Internal.EnumLiteMap<CGEditorShapeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    
    /** The internal value map. */
    private static com.google.protobuf.Internal.EnumLiteMap<CGEditorShapeType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CGEditorShapeType>() {
            public CGEditorShapeType findValueByNumber(int number) {
              return CGEditorShapeType.valueOf(number);
            }
          };

    /* (non-Javadoc)
     * @see com.google.protobuf.ProtocolMessageEnum#getValueDescriptor()
     */
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.ProtocolMessageEnum#getDescriptorForType()
     */
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.getDescriptor().getEnumTypes().get(3);
    }

    /** The Constant VALUES. */
    private static final CGEditorShapeType[] VALUES = values();

    /**
     * Value of.
     *
     * @param desc the desc
     * @return the cG editor shape type
     */
    public static CGEditorShapeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    /** The index. */
    private final int index;
    
    /** The value. */
    private final int value;

    /**
     * Instantiates a new cG editor shape type.
     *
     * @param index the index
     * @param value the value
     */
    private CGEditorShapeType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.laex.cg2d.protobuf.CGEditorShapeType)
  }

  /**
   * The Interface CGGameModelOrBuilder.
   */
  public interface CGGameModelOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
     *
     * @return the layers list
     */
    java.util.List<com.laex.cg2d.protobuf.GameObject.CGLayer> 
        getLayersList();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
     *
     * @param index the index
     * @return the layers
     */
    com.laex.cg2d.protobuf.GameObject.CGLayer getLayers(int index);
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
     *
     * @return the layers count
     */
    int getLayersCount();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
     *
     * @return the layers or builder list
     */
    java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder> 
        getLayersOrBuilderList();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
     *
     * @param index the index
     * @return the layers or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder getLayersOrBuilder(
        int index);

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
     *
     * @return true, if successful
     */
    boolean hasScreenPrefs();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
     *
     * @return the screen prefs
     */
    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences getScreenPrefs();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
     *
     * @return the screen prefs or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder getScreenPrefsOrBuilder();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGGameModel}
   */
  public static final class CGGameModel extends
      com.google.protobuf.GeneratedMessage
      implements CGGameModelOrBuilder {
    // Use CGGameModel.newBuilder() to construct.
    /**
     * Instantiates a new cG game model.
     *
     * @param builder the builder
     */
    private CGGameModel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG game model.
     *
     * @param noInit the no init
     */
    private CGGameModel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGGameModel defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGGameModel getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGGameModel getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG game model.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGGameModel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                layers_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGLayer>();
                mutable_bitField0_ |= 0x00000001;
              }
              layers_.add(input.readMessage(com.laex.cg2d.protobuf.GameObject.CGLayer.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = screenPrefs_.toBuilder();
              }
              screenPrefs_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(screenPrefs_);
                screenPrefs_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          layers_ = java.util.Collections.unmodifiableList(layers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGGameModel_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGGameModel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGGameModel.class, com.laex.cg2d.protobuf.GameObject.CGGameModel.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGGameModel> PARSER =
        new com.google.protobuf.AbstractParser<CGGameModel>() {
      public CGGameModel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGGameModel(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGGameModel> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;
    /** The Constant LAYERS_FIELD_NUMBER. */
    public static final int LAYERS_FIELD_NUMBER = 1;
    
    /** The layers_. */
    private java.util.List<com.laex.cg2d.protobuf.GameObject.CGLayer> layers_;
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
     *
     * @return the layers list
     */
    public java.util.List<com.laex.cg2d.protobuf.GameObject.CGLayer> getLayersList() {
      return layers_;
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
     *
     * @return the layers or builder list
     */
    public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder> 
        getLayersOrBuilderList() {
      return layers_;
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
     *
     * @return the layers count
     */
    public int getLayersCount() {
      return layers_.size();
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
     *
     * @param index the index
     * @return the layers
     */
    public com.laex.cg2d.protobuf.GameObject.CGLayer getLayers(int index) {
      return layers_.get(index);
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
     *
     * @param index the index
     * @return the layers or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder getLayersOrBuilder(
        int index) {
      return layers_.get(index);
    }

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;
    /** The Constant SCREENPREFS_FIELD_NUMBER. */
    public static final int SCREENPREFS_FIELD_NUMBER = 2;
    
    /** The screen prefs_. */
    private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences screenPrefs_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
     *
     * @return true, if successful
     */
    public boolean hasScreenPrefs() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
     *
     * @return the screen prefs
     */
    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences getScreenPrefs() {
      return screenPrefs_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
     *
     * @return the screen prefs or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder getScreenPrefsOrBuilder() {
      return screenPrefs_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      layers_ = java.util.Collections.emptyList();
      screenPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance();
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getLayersCount(); i++) {
        if (!getLayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < layers_.size(); i++) {
        output.writeMessage(1, layers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, screenPrefs_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < layers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, layers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, screenPrefs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg game model
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg game model
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg game model
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg game model
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg game model
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg game model
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg game model
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg game model
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg game model
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg game model
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGGameModel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGGameModel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGGameModel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGGameModelOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGGameModel_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGGameModel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGGameModel.class, com.laex.cg2d.protobuf.GameObject.CGGameModel.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGGameModel.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLayersFieldBuilder();
          getScreenPrefsFieldBuilder();
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        if (layersBuilder_ == null) {
          layers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          layersBuilder_.clear();
        }
        if (screenPrefsBuilder_ == null) {
          screenPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance();
        } else {
          screenPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGGameModel_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGGameModel getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGGameModel.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGGameModel build() {
        com.laex.cg2d.protobuf.GameObject.CGGameModel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGGameModel buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGGameModel result = new com.laex.cg2d.protobuf.GameObject.CGGameModel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (layersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            layers_ = java.util.Collections.unmodifiableList(layers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.layers_ = layers_;
        } else {
          result.layers_ = layersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (screenPrefsBuilder_ == null) {
          result.screenPrefs_ = screenPrefs_;
        } else {
          result.screenPrefs_ = screenPrefsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGGameModel) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGGameModel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGGameModel other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGGameModel.getDefaultInstance()) return this;
        if (layersBuilder_ == null) {
          if (!other.layers_.isEmpty()) {
            if (layers_.isEmpty()) {
              layers_ = other.layers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLayersIsMutable();
              layers_.addAll(other.layers_);
            }
            onChanged();
          }
        } else {
          if (!other.layers_.isEmpty()) {
            if (layersBuilder_.isEmpty()) {
              layersBuilder_.dispose();
              layersBuilder_ = null;
              layers_ = other.layers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              layersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLayersFieldBuilder() : null;
            } else {
              layersBuilder_.addAllMessages(other.layers_);
            }
          }
        }
        if (other.hasScreenPrefs()) {
          mergeScreenPrefs(other.getScreenPrefs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        for (int i = 0; i < getLayersCount(); i++) {
          if (!getLayers(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGGameModel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGGameModel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;
      /** The layers_. */
      private java.util.List<com.laex.cg2d.protobuf.GameObject.CGLayer> layers_ =
        java.util.Collections.emptyList();
      
      /**
       * Ensure layers is mutable.
       */
      private void ensureLayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          layers_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGLayer>(layers_);
          bitField0_ |= 0x00000001;
         }
      }

      /** The layers builder_. */
      private com.google.protobuf.RepeatedFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGLayer, com.laex.cg2d.protobuf.GameObject.CGLayer.Builder, com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder> layersBuilder_;

      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @return the layers list
       */
      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGLayer> getLayersList() {
        if (layersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(layers_);
        } else {
          return layersBuilder_.getMessageList();
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @return the layers count
       */
      public int getLayersCount() {
        if (layersBuilder_ == null) {
          return layers_.size();
        } else {
          return layersBuilder_.getCount();
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @param index the index
       * @return the layers
       */
      public com.laex.cg2d.protobuf.GameObject.CGLayer getLayers(int index) {
        if (layersBuilder_ == null) {
          return layers_.get(index);
        } else {
          return layersBuilder_.getMessage(index);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @param index the index
       * @param value the value
       * @return the builder
       */
      public Builder setLayers(
          int index, com.laex.cg2d.protobuf.GameObject.CGLayer value) {
        if (layersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLayersIsMutable();
          layers_.set(index, value);
          onChanged();
        } else {
          layersBuilder_.setMessage(index, value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @param index the index
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setLayers(
          int index, com.laex.cg2d.protobuf.GameObject.CGLayer.Builder builderForValue) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          layers_.set(index, builderForValue.build());
          onChanged();
        } else {
          layersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder addLayers(com.laex.cg2d.protobuf.GameObject.CGLayer value) {
        if (layersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLayersIsMutable();
          layers_.add(value);
          onChanged();
        } else {
          layersBuilder_.addMessage(value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @param index the index
       * @param value the value
       * @return the builder
       */
      public Builder addLayers(
          int index, com.laex.cg2d.protobuf.GameObject.CGLayer value) {
        if (layersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLayersIsMutable();
          layers_.add(index, value);
          onChanged();
        } else {
          layersBuilder_.addMessage(index, value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder addLayers(
          com.laex.cg2d.protobuf.GameObject.CGLayer.Builder builderForValue) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          layers_.add(builderForValue.build());
          onChanged();
        } else {
          layersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @param index the index
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder addLayers(
          int index, com.laex.cg2d.protobuf.GameObject.CGLayer.Builder builderForValue) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          layers_.add(index, builderForValue.build());
          onChanged();
        } else {
          layersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @param values the values
       * @return the builder
       */
      public Builder addAllLayers(
          java.lang.Iterable<? extends com.laex.cg2d.protobuf.GameObject.CGLayer> values) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          super.addAll(values, layers_);
          onChanged();
        } else {
          layersBuilder_.addAllMessages(values);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @return the builder
       */
      public Builder clearLayers() {
        if (layersBuilder_ == null) {
          layers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          layersBuilder_.clear();
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @param index the index
       * @return the builder
       */
      public Builder removeLayers(int index) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          layers_.remove(index);
          onChanged();
        } else {
          layersBuilder_.remove(index);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @param index the index
       * @return the layers builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGLayer.Builder getLayersBuilder(
          int index) {
        return getLayersFieldBuilder().getBuilder(index);
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @param index the index
       * @return the layers or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder getLayersOrBuilder(
          int index) {
        if (layersBuilder_ == null) {
          return layers_.get(index);  } else {
          return layersBuilder_.getMessageOrBuilder(index);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @return the layers or builder list
       */
      public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder> 
           getLayersOrBuilderList() {
        if (layersBuilder_ != null) {
          return layersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(layers_);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @return the com.laex.cg2d.protobuf. game object. cg layer. builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGLayer.Builder addLayersBuilder() {
        return getLayersFieldBuilder().addBuilder(
            com.laex.cg2d.protobuf.GameObject.CGLayer.getDefaultInstance());
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @param index the index
       * @return the com.laex.cg2d.protobuf. game object. cg layer. builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGLayer.Builder addLayersBuilder(
          int index) {
        return getLayersFieldBuilder().addBuilder(
            index, com.laex.cg2d.protobuf.GameObject.CGLayer.getDefaultInstance());
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGLayer layers = 1;</code>
       *
       * @return the layers builder list
       */
      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGLayer.Builder> 
           getLayersBuilderList() {
        return getLayersFieldBuilder().getBuilderList();
      }
      
      /**
       * Gets the layers field builder.
       *
       * @return the layers field builder
       */
      private com.google.protobuf.RepeatedFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGLayer, com.laex.cg2d.protobuf.GameObject.CGLayer.Builder, com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder> 
          getLayersFieldBuilder() {
        if (layersBuilder_ == null) {
          layersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGLayer, com.laex.cg2d.protobuf.GameObject.CGLayer.Builder, com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder>(
                  layers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          layers_ = null;
        }
        return layersBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;
      /** The screen prefs_. */
      private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences screenPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance();
      
      /** The screen prefs builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder> screenPrefsBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
       *
       * @return true, if successful
       */
      public boolean hasScreenPrefs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
       *
       * @return the screen prefs
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences getScreenPrefs() {
        if (screenPrefsBuilder_ == null) {
          return screenPrefs_;
        } else {
          return screenPrefsBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setScreenPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences value) {
        if (screenPrefsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          screenPrefs_ = value;
          onChanged();
        } else {
          screenPrefsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setScreenPrefs(
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder builderForValue) {
        if (screenPrefsBuilder_ == null) {
          screenPrefs_ = builderForValue.build();
          onChanged();
        } else {
          screenPrefsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeScreenPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences value) {
        if (screenPrefsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              screenPrefs_ != com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance()) {
            screenPrefs_ =
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.newBuilder(screenPrefs_).mergeFrom(value).buildPartial();
          } else {
            screenPrefs_ = value;
          }
          onChanged();
        } else {
          screenPrefsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
       *
       * @return the builder
       */
      public Builder clearScreenPrefs() {
        if (screenPrefsBuilder_ == null) {
          screenPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance();
          onChanged();
        } else {
          screenPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
       *
       * @return the screen prefs builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder getScreenPrefsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getScreenPrefsFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
       *
       * @return the screen prefs or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder getScreenPrefsOrBuilder() {
        if (screenPrefsBuilder_ != null) {
          return screenPrefsBuilder_.getMessageOrBuilder();
        } else {
          return screenPrefs_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences screenPrefs = 2;</code>
       *
       * @return the screen prefs field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder> 
          getScreenPrefsFieldBuilder() {
        if (screenPrefsBuilder_ == null) {
          screenPrefsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder>(
                  screenPrefs_,
                  getParentForChildren(),
                  isClean());
          screenPrefs_ = null;
        }
        return screenPrefsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGGameModel)
    }

    static {
      defaultInstance = new CGGameModel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGGameModel)
  }

  /**
   * The Interface CGJointOrBuilder.
   */
  public interface CGJointOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string sourceShapeId = 1;
    /**
     * <code>optional string sourceShapeId = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasSourceShapeId();
    
    /**
     * <code>optional string sourceShapeId = 1;</code>.
     *
     * @return the source shape id
     */
    java.lang.String getSourceShapeId();
    
    /**
     * <code>optional string sourceShapeId = 1;</code>.
     *
     * @return the source shape id bytes
     */
    com.google.protobuf.ByteString
        getSourceShapeIdBytes();

    // optional string targetShapeId = 2;
    /**
     * <code>optional string targetShapeId = 2;</code>.
     *
     * @return true, if successful
     */
    boolean hasTargetShapeId();
    
    /**
     * <code>optional string targetShapeId = 2;</code>.
     *
     * @return the target shape id
     */
    java.lang.String getTargetShapeId();
    
    /**
     * <code>optional string targetShapeId = 2;</code>.
     *
     * @return the target shape id bytes
     */
    com.google.protobuf.ByteString
        getTargetShapeIdBytes();

    // optional .com.laex.cg2d.protobuf.CGJointType type = 3;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGJointType type = 3;</code>
     *
     * @return true, if successful
     */
    boolean hasType();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGJointType type = 3;</code>
     *
     * @return the type
     */
    com.laex.cg2d.protobuf.GameObject.CGJointType getType();

    // optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
     *
     * @return true, if successful
     */
    boolean hasDistanceJointDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
     *
     * @return the distance joint def
     */
    com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef getDistanceJointDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
     *
     * @return the distance joint def or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder getDistanceJointDefOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
     *
     * @return true, if successful
     */
    boolean hasRevoluteJointDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
     *
     * @return the revolute joint def
     */
    com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef getRevoluteJointDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
     *
     * @return the revolute joint def or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder getRevoluteJointDefOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
     *
     * @return true, if successful
     */
    boolean hasPrismaticJointDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
     *
     * @return the prismatic joint def
     */
    com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef getPrismaticJointDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
     *
     * @return the prismatic joint def or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder getPrismaticJointDefOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
     *
     * @return true, if successful
     */
    boolean hasPulleyJointDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
     *
     * @return the pulley joint def
     */
    com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef getPulleyJointDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
     *
     * @return the pulley joint def or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder getPulleyJointDefOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
     *
     * @return true, if successful
     */
    boolean hasFrictionJointDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
     *
     * @return the friction joint def
     */
    com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef getFrictionJointDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
     *
     * @return the friction joint def or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder getFrictionJointDefOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
     *
     * @return true, if successful
     */
    boolean hasWeldJointDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
     *
     * @return the weld joint def
     */
    com.laex.cg2d.protobuf.GameObject.CGWeldJointDef getWeldJointDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
     *
     * @return the weld joint def or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder getWeldJointDefOrBuilder();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGJoint}
   */
  public static final class CGJoint extends
      com.google.protobuf.GeneratedMessage
      implements CGJointOrBuilder {
    // Use CGJoint.newBuilder() to construct.
    /**
     * Instantiates a new cG joint.
     *
     * @param builder the builder
     */
    private CGJoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG joint.
     *
     * @param noInit the no init
     */
    private CGJoint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGJoint defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGJoint getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGJoint getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG joint.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGJoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              sourceShapeId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              targetShapeId_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.laex.cg2d.protobuf.GameObject.CGJointType value = com.laex.cg2d.protobuf.GameObject.CGJointType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
            case 42: {
              com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = distanceJointDef_.toBuilder();
              }
              distanceJointDef_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(distanceJointDef_);
                distanceJointDef_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 50: {
              com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = revoluteJointDef_.toBuilder();
              }
              revoluteJointDef_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(revoluteJointDef_);
                revoluteJointDef_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 58: {
              com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = prismaticJointDef_.toBuilder();
              }
              prismaticJointDef_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(prismaticJointDef_);
                prismaticJointDef_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 66: {
              com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = pulleyJointDef_.toBuilder();
              }
              pulleyJointDef_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pulleyJointDef_);
                pulleyJointDef_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 74: {
              com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = frictionJointDef_.toBuilder();
              }
              frictionJointDef_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(frictionJointDef_);
                frictionJointDef_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 82: {
              com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = weldJointDef_.toBuilder();
              }
              weldJointDef_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(weldJointDef_);
                weldJointDef_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGJoint_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGJoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGJoint.class, com.laex.cg2d.protobuf.GameObject.CGJoint.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGJoint> PARSER =
        new com.google.protobuf.AbstractParser<CGJoint>() {
      public CGJoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGJoint(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGJoint> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional string sourceShapeId = 1;
    /** The Constant SOURCESHAPEID_FIELD_NUMBER. */
    public static final int SOURCESHAPEID_FIELD_NUMBER = 1;
    
    /** The source shape id_. */
    private java.lang.Object sourceShapeId_;
    
    /**
     * <code>optional string sourceShapeId = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasSourceShapeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional string sourceShapeId = 1;</code>.
     *
     * @return the source shape id
     */
    public java.lang.String getSourceShapeId() {
      java.lang.Object ref = sourceShapeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sourceShapeId_ = s;
        }
        return s;
      }
    }
    
    /**
     * <code>optional string sourceShapeId = 1;</code>.
     *
     * @return the source shape id bytes
     */
    public com.google.protobuf.ByteString
        getSourceShapeIdBytes() {
      java.lang.Object ref = sourceShapeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sourceShapeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string targetShapeId = 2;
    /** The Constant TARGETSHAPEID_FIELD_NUMBER. */
    public static final int TARGETSHAPEID_FIELD_NUMBER = 2;
    
    /** The target shape id_. */
    private java.lang.Object targetShapeId_;
    
    /**
     * <code>optional string targetShapeId = 2;</code>.
     *
     * @return true, if successful
     */
    public boolean hasTargetShapeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional string targetShapeId = 2;</code>.
     *
     * @return the target shape id
     */
    public java.lang.String getTargetShapeId() {
      java.lang.Object ref = targetShapeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          targetShapeId_ = s;
        }
        return s;
      }
    }
    
    /**
     * <code>optional string targetShapeId = 2;</code>.
     *
     * @return the target shape id bytes
     */
    public com.google.protobuf.ByteString
        getTargetShapeIdBytes() {
      java.lang.Object ref = targetShapeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetShapeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.laex.cg2d.protobuf.CGJointType type = 3;
    /** The Constant TYPE_FIELD_NUMBER. */
    public static final int TYPE_FIELD_NUMBER = 3;
    
    /** The type_. */
    private com.laex.cg2d.protobuf.GameObject.CGJointType type_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGJointType type = 3;</code>
     *
     * @return true, if successful
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGJointType type = 3;</code>
     *
     * @return the type
     */
    public com.laex.cg2d.protobuf.GameObject.CGJointType getType() {
      return type_;
    }

    // optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;
    /** The Constant DISTANCEJOINTDEF_FIELD_NUMBER. */
    public static final int DISTANCEJOINTDEF_FIELD_NUMBER = 5;
    
    /** The distance joint def_. */
    private com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef distanceJointDef_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
     *
     * @return true, if successful
     */
    public boolean hasDistanceJointDef() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
     *
     * @return the distance joint def
     */
    public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef getDistanceJointDef() {
      return distanceJointDef_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
     *
     * @return the distance joint def or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder getDistanceJointDefOrBuilder() {
      return distanceJointDef_;
    }

    // optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;
    /** The Constant REVOLUTEJOINTDEF_FIELD_NUMBER. */
    public static final int REVOLUTEJOINTDEF_FIELD_NUMBER = 6;
    
    /** The revolute joint def_. */
    private com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef revoluteJointDef_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
     *
     * @return true, if successful
     */
    public boolean hasRevoluteJointDef() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
     *
     * @return the revolute joint def
     */
    public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef getRevoluteJointDef() {
      return revoluteJointDef_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
     *
     * @return the revolute joint def or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder getRevoluteJointDefOrBuilder() {
      return revoluteJointDef_;
    }

    // optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;
    /** The Constant PRISMATICJOINTDEF_FIELD_NUMBER. */
    public static final int PRISMATICJOINTDEF_FIELD_NUMBER = 7;
    
    /** The prismatic joint def_. */
    private com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef prismaticJointDef_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
     *
     * @return true, if successful
     */
    public boolean hasPrismaticJointDef() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
     *
     * @return the prismatic joint def
     */
    public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef getPrismaticJointDef() {
      return prismaticJointDef_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
     *
     * @return the prismatic joint def or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder getPrismaticJointDefOrBuilder() {
      return prismaticJointDef_;
    }

    // optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;
    /** The Constant PULLEYJOINTDEF_FIELD_NUMBER. */
    public static final int PULLEYJOINTDEF_FIELD_NUMBER = 8;
    
    /** The pulley joint def_. */
    private com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef pulleyJointDef_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
     *
     * @return true, if successful
     */
    public boolean hasPulleyJointDef() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
     *
     * @return the pulley joint def
     */
    public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef getPulleyJointDef() {
      return pulleyJointDef_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
     *
     * @return the pulley joint def or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder getPulleyJointDefOrBuilder() {
      return pulleyJointDef_;
    }

    // optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;
    /** The Constant FRICTIONJOINTDEF_FIELD_NUMBER. */
    public static final int FRICTIONJOINTDEF_FIELD_NUMBER = 9;
    
    /** The friction joint def_. */
    private com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef frictionJointDef_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
     *
     * @return true, if successful
     */
    public boolean hasFrictionJointDef() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
     *
     * @return the friction joint def
     */
    public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef getFrictionJointDef() {
      return frictionJointDef_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
     *
     * @return the friction joint def or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder getFrictionJointDefOrBuilder() {
      return frictionJointDef_;
    }

    // optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;
    /** The Constant WELDJOINTDEF_FIELD_NUMBER. */
    public static final int WELDJOINTDEF_FIELD_NUMBER = 10;
    
    /** The weld joint def_. */
    private com.laex.cg2d.protobuf.GameObject.CGWeldJointDef weldJointDef_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
     *
     * @return true, if successful
     */
    public boolean hasWeldJointDef() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
     *
     * @return the weld joint def
     */
    public com.laex.cg2d.protobuf.GameObject.CGWeldJointDef getWeldJointDef() {
      return weldJointDef_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
     *
     * @return the weld joint def or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder getWeldJointDefOrBuilder() {
      return weldJointDef_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      sourceShapeId_ = "";
      targetShapeId_ = "";
      type_ = com.laex.cg2d.protobuf.GameObject.CGJointType.UNKNOWN;
      distanceJointDef_ = com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance();
      revoluteJointDef_ = com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance();
      prismaticJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance();
      pulleyJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance();
      frictionJointDef_ = com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance();
      weldJointDef_ = com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance();
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasRevoluteJointDef()) {
        if (!getRevoluteJointDef().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPrismaticJointDef()) {
        if (!getPrismaticJointDef().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPulleyJointDef()) {
        if (!getPulleyJointDef().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSourceShapeIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTargetShapeIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, distanceJointDef_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, revoluteJointDef_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, prismaticJointDef_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, pulleyJointDef_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(9, frictionJointDef_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(10, weldJointDef_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSourceShapeIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTargetShapeIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, distanceJointDef_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, revoluteJointDef_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, prismaticJointDef_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, pulleyJointDef_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, frictionJointDef_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, weldJointDef_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg joint
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg joint
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg joint
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg joint
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg joint
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg joint
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg joint
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg joint
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg joint
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg joint
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGJoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGJoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGJoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGJoint_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGJoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGJoint.class, com.laex.cg2d.protobuf.GameObject.CGJoint.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGJoint.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDistanceJointDefFieldBuilder();
          getRevoluteJointDefFieldBuilder();
          getPrismaticJointDefFieldBuilder();
          getPulleyJointDefFieldBuilder();
          getFrictionJointDefFieldBuilder();
          getWeldJointDefFieldBuilder();
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        sourceShapeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        targetShapeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = com.laex.cg2d.protobuf.GameObject.CGJointType.UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (distanceJointDefBuilder_ == null) {
          distanceJointDef_ = com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance();
        } else {
          distanceJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (revoluteJointDefBuilder_ == null) {
          revoluteJointDef_ = com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance();
        } else {
          revoluteJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (prismaticJointDefBuilder_ == null) {
          prismaticJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance();
        } else {
          prismaticJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (pulleyJointDefBuilder_ == null) {
          pulleyJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance();
        } else {
          pulleyJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (frictionJointDefBuilder_ == null) {
          frictionJointDef_ = com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance();
        } else {
          frictionJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (weldJointDefBuilder_ == null) {
          weldJointDef_ = com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance();
        } else {
          weldJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGJoint_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGJoint getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGJoint.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGJoint build() {
        com.laex.cg2d.protobuf.GameObject.CGJoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGJoint buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGJoint result = new com.laex.cg2d.protobuf.GameObject.CGJoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sourceShapeId_ = sourceShapeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.targetShapeId_ = targetShapeId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (distanceJointDefBuilder_ == null) {
          result.distanceJointDef_ = distanceJointDef_;
        } else {
          result.distanceJointDef_ = distanceJointDefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (revoluteJointDefBuilder_ == null) {
          result.revoluteJointDef_ = revoluteJointDef_;
        } else {
          result.revoluteJointDef_ = revoluteJointDefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (prismaticJointDefBuilder_ == null) {
          result.prismaticJointDef_ = prismaticJointDef_;
        } else {
          result.prismaticJointDef_ = prismaticJointDefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (pulleyJointDefBuilder_ == null) {
          result.pulleyJointDef_ = pulleyJointDef_;
        } else {
          result.pulleyJointDef_ = pulleyJointDefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (frictionJointDefBuilder_ == null) {
          result.frictionJointDef_ = frictionJointDef_;
        } else {
          result.frictionJointDef_ = frictionJointDefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (weldJointDefBuilder_ == null) {
          result.weldJointDef_ = weldJointDef_;
        } else {
          result.weldJointDef_ = weldJointDefBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGJoint) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGJoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGJoint other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGJoint.getDefaultInstance()) return this;
        if (other.hasSourceShapeId()) {
          bitField0_ |= 0x00000001;
          sourceShapeId_ = other.sourceShapeId_;
          onChanged();
        }
        if (other.hasTargetShapeId()) {
          bitField0_ |= 0x00000002;
          targetShapeId_ = other.targetShapeId_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDistanceJointDef()) {
          mergeDistanceJointDef(other.getDistanceJointDef());
        }
        if (other.hasRevoluteJointDef()) {
          mergeRevoluteJointDef(other.getRevoluteJointDef());
        }
        if (other.hasPrismaticJointDef()) {
          mergePrismaticJointDef(other.getPrismaticJointDef());
        }
        if (other.hasPulleyJointDef()) {
          mergePulleyJointDef(other.getPulleyJointDef());
        }
        if (other.hasFrictionJointDef()) {
          mergeFrictionJointDef(other.getFrictionJointDef());
        }
        if (other.hasWeldJointDef()) {
          mergeWeldJointDef(other.getWeldJointDef());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        if (hasRevoluteJointDef()) {
          if (!getRevoluteJointDef().isInitialized()) {
            
            return false;
          }
        }
        if (hasPrismaticJointDef()) {
          if (!getPrismaticJointDef().isInitialized()) {
            
            return false;
          }
        }
        if (hasPulleyJointDef()) {
          if (!getPulleyJointDef().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGJoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGJoint) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional string sourceShapeId = 1;
      /** The source shape id_. */
      private java.lang.Object sourceShapeId_ = "";
      
      /**
       * <code>optional string sourceShapeId = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasSourceShapeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional string sourceShapeId = 1;</code>.
       *
       * @return the source shape id
       */
      public java.lang.String getSourceShapeId() {
        java.lang.Object ref = sourceShapeId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sourceShapeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      
      /**
       * <code>optional string sourceShapeId = 1;</code>.
       *
       * @return the source shape id bytes
       */
      public com.google.protobuf.ByteString
          getSourceShapeIdBytes() {
        java.lang.Object ref = sourceShapeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sourceShapeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      /**
       * <code>optional string sourceShapeId = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setSourceShapeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sourceShapeId_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string sourceShapeId = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearSourceShapeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sourceShapeId_ = getDefaultInstance().getSourceShapeId();
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string sourceShapeId = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setSourceShapeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sourceShapeId_ = value;
        onChanged();
        return this;
      }

      // optional string targetShapeId = 2;
      /** The target shape id_. */
      private java.lang.Object targetShapeId_ = "";
      
      /**
       * <code>optional string targetShapeId = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasTargetShapeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional string targetShapeId = 2;</code>.
       *
       * @return the target shape id
       */
      public java.lang.String getTargetShapeId() {
        java.lang.Object ref = targetShapeId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          targetShapeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      
      /**
       * <code>optional string targetShapeId = 2;</code>.
       *
       * @return the target shape id bytes
       */
      public com.google.protobuf.ByteString
          getTargetShapeIdBytes() {
        java.lang.Object ref = targetShapeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          targetShapeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      /**
       * <code>optional string targetShapeId = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setTargetShapeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        targetShapeId_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string targetShapeId = 2;</code>.
       *
       * @return the builder
       */
      public Builder clearTargetShapeId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetShapeId_ = getDefaultInstance().getTargetShapeId();
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string targetShapeId = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setTargetShapeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        targetShapeId_ = value;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGJointType type = 3;
      /** The type_. */
      private com.laex.cg2d.protobuf.GameObject.CGJointType type_ = com.laex.cg2d.protobuf.GameObject.CGJointType.UNKNOWN;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGJointType type = 3;</code>
       *
       * @return true, if successful
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGJointType type = 3;</code>
       *
       * @return the type
       */
      public com.laex.cg2d.protobuf.GameObject.CGJointType getType() {
        return type_;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGJointType type = 3;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setType(com.laex.cg2d.protobuf.GameObject.CGJointType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGJointType type = 3;</code>
       *
       * @return the builder
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = com.laex.cg2d.protobuf.GameObject.CGJointType.UNKNOWN;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;
      /** The distance joint def_. */
      private com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef distanceJointDef_ = com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance();
      
      /** The distance joint def builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder> distanceJointDefBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
       *
       * @return true, if successful
       */
      public boolean hasDistanceJointDef() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
       *
       * @return the distance joint def
       */
      public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef getDistanceJointDef() {
        if (distanceJointDefBuilder_ == null) {
          return distanceJointDef_;
        } else {
          return distanceJointDefBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setDistanceJointDef(com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef value) {
        if (distanceJointDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          distanceJointDef_ = value;
          onChanged();
        } else {
          distanceJointDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setDistanceJointDef(
          com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder builderForValue) {
        if (distanceJointDefBuilder_ == null) {
          distanceJointDef_ = builderForValue.build();
          onChanged();
        } else {
          distanceJointDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeDistanceJointDef(com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef value) {
        if (distanceJointDefBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              distanceJointDef_ != com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance()) {
            distanceJointDef_ =
              com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.newBuilder(distanceJointDef_).mergeFrom(value).buildPartial();
          } else {
            distanceJointDef_ = value;
          }
          onChanged();
        } else {
          distanceJointDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
       *
       * @return the builder
       */
      public Builder clearDistanceJointDef() {
        if (distanceJointDefBuilder_ == null) {
          distanceJointDef_ = com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance();
          onChanged();
        } else {
          distanceJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
       *
       * @return the distance joint def builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder getDistanceJointDefBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDistanceJointDefFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
       *
       * @return the distance joint def or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder getDistanceJointDefOrBuilder() {
        if (distanceJointDefBuilder_ != null) {
          return distanceJointDefBuilder_.getMessageOrBuilder();
        } else {
          return distanceJointDef_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGDistanceJointDef distanceJointDef = 5;</code>
       *
       * @return the distance joint def field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder> 
          getDistanceJointDefFieldBuilder() {
        if (distanceJointDefBuilder_ == null) {
          distanceJointDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder>(
                  distanceJointDef_,
                  getParentForChildren(),
                  isClean());
          distanceJointDef_ = null;
        }
        return distanceJointDefBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;
      /** The revolute joint def_. */
      private com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef revoluteJointDef_ = com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance();
      
      /** The revolute joint def builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder> revoluteJointDefBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
       *
       * @return true, if successful
       */
      public boolean hasRevoluteJointDef() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
       *
       * @return the revolute joint def
       */
      public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef getRevoluteJointDef() {
        if (revoluteJointDefBuilder_ == null) {
          return revoluteJointDef_;
        } else {
          return revoluteJointDefBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setRevoluteJointDef(com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef value) {
        if (revoluteJointDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          revoluteJointDef_ = value;
          onChanged();
        } else {
          revoluteJointDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setRevoluteJointDef(
          com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder builderForValue) {
        if (revoluteJointDefBuilder_ == null) {
          revoluteJointDef_ = builderForValue.build();
          onChanged();
        } else {
          revoluteJointDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeRevoluteJointDef(com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef value) {
        if (revoluteJointDefBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              revoluteJointDef_ != com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance()) {
            revoluteJointDef_ =
              com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.newBuilder(revoluteJointDef_).mergeFrom(value).buildPartial();
          } else {
            revoluteJointDef_ = value;
          }
          onChanged();
        } else {
          revoluteJointDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
       *
       * @return the builder
       */
      public Builder clearRevoluteJointDef() {
        if (revoluteJointDefBuilder_ == null) {
          revoluteJointDef_ = com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance();
          onChanged();
        } else {
          revoluteJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
       *
       * @return the revolute joint def builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder getRevoluteJointDefBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getRevoluteJointDefFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
       *
       * @return the revolute joint def or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder getRevoluteJointDefOrBuilder() {
        if (revoluteJointDefBuilder_ != null) {
          return revoluteJointDefBuilder_.getMessageOrBuilder();
        } else {
          return revoluteJointDef_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGRevoluteJointDef revoluteJointDef = 6;</code>
       *
       * @return the revolute joint def field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder> 
          getRevoluteJointDefFieldBuilder() {
        if (revoluteJointDefBuilder_ == null) {
          revoluteJointDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder>(
                  revoluteJointDef_,
                  getParentForChildren(),
                  isClean());
          revoluteJointDef_ = null;
        }
        return revoluteJointDefBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;
      /** The prismatic joint def_. */
      private com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef prismaticJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance();
      
      /** The prismatic joint def builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder> prismaticJointDefBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
       *
       * @return true, if successful
       */
      public boolean hasPrismaticJointDef() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
       *
       * @return the prismatic joint def
       */
      public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef getPrismaticJointDef() {
        if (prismaticJointDefBuilder_ == null) {
          return prismaticJointDef_;
        } else {
          return prismaticJointDefBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setPrismaticJointDef(com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef value) {
        if (prismaticJointDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          prismaticJointDef_ = value;
          onChanged();
        } else {
          prismaticJointDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setPrismaticJointDef(
          com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder builderForValue) {
        if (prismaticJointDefBuilder_ == null) {
          prismaticJointDef_ = builderForValue.build();
          onChanged();
        } else {
          prismaticJointDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergePrismaticJointDef(com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef value) {
        if (prismaticJointDefBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              prismaticJointDef_ != com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance()) {
            prismaticJointDef_ =
              com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.newBuilder(prismaticJointDef_).mergeFrom(value).buildPartial();
          } else {
            prismaticJointDef_ = value;
          }
          onChanged();
        } else {
          prismaticJointDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
       *
       * @return the builder
       */
      public Builder clearPrismaticJointDef() {
        if (prismaticJointDefBuilder_ == null) {
          prismaticJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance();
          onChanged();
        } else {
          prismaticJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
       *
       * @return the prismatic joint def builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder getPrismaticJointDefBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getPrismaticJointDefFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
       *
       * @return the prismatic joint def or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder getPrismaticJointDefOrBuilder() {
        if (prismaticJointDefBuilder_ != null) {
          return prismaticJointDefBuilder_.getMessageOrBuilder();
        } else {
          return prismaticJointDef_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPrismaticJointDef prismaticJointDef = 7;</code>
       *
       * @return the prismatic joint def field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder> 
          getPrismaticJointDefFieldBuilder() {
        if (prismaticJointDefBuilder_ == null) {
          prismaticJointDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder>(
                  prismaticJointDef_,
                  getParentForChildren(),
                  isClean());
          prismaticJointDef_ = null;
        }
        return prismaticJointDefBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;
      /** The pulley joint def_. */
      private com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef pulleyJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance();
      
      /** The pulley joint def builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder> pulleyJointDefBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
       *
       * @return true, if successful
       */
      public boolean hasPulleyJointDef() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
       *
       * @return the pulley joint def
       */
      public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef getPulleyJointDef() {
        if (pulleyJointDefBuilder_ == null) {
          return pulleyJointDef_;
        } else {
          return pulleyJointDefBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setPulleyJointDef(com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef value) {
        if (pulleyJointDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pulleyJointDef_ = value;
          onChanged();
        } else {
          pulleyJointDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setPulleyJointDef(
          com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder builderForValue) {
        if (pulleyJointDefBuilder_ == null) {
          pulleyJointDef_ = builderForValue.build();
          onChanged();
        } else {
          pulleyJointDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergePulleyJointDef(com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef value) {
        if (pulleyJointDefBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              pulleyJointDef_ != com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance()) {
            pulleyJointDef_ =
              com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.newBuilder(pulleyJointDef_).mergeFrom(value).buildPartial();
          } else {
            pulleyJointDef_ = value;
          }
          onChanged();
        } else {
          pulleyJointDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
       *
       * @return the builder
       */
      public Builder clearPulleyJointDef() {
        if (pulleyJointDefBuilder_ == null) {
          pulleyJointDef_ = com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance();
          onChanged();
        } else {
          pulleyJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
       *
       * @return the pulley joint def builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder getPulleyJointDefBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getPulleyJointDefFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
       *
       * @return the pulley joint def or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder getPulleyJointDefOrBuilder() {
        if (pulleyJointDefBuilder_ != null) {
          return pulleyJointDefBuilder_.getMessageOrBuilder();
        } else {
          return pulleyJointDef_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGPulleyJointDef pulleyJointDef = 8;</code>
       *
       * @return the pulley joint def field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder> 
          getPulleyJointDefFieldBuilder() {
        if (pulleyJointDefBuilder_ == null) {
          pulleyJointDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder>(
                  pulleyJointDef_,
                  getParentForChildren(),
                  isClean());
          pulleyJointDef_ = null;
        }
        return pulleyJointDefBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;
      /** The friction joint def_. */
      private com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef frictionJointDef_ = com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance();
      
      /** The friction joint def builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder> frictionJointDefBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
       *
       * @return true, if successful
       */
      public boolean hasFrictionJointDef() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
       *
       * @return the friction joint def
       */
      public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef getFrictionJointDef() {
        if (frictionJointDefBuilder_ == null) {
          return frictionJointDef_;
        } else {
          return frictionJointDefBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setFrictionJointDef(com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef value) {
        if (frictionJointDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          frictionJointDef_ = value;
          onChanged();
        } else {
          frictionJointDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setFrictionJointDef(
          com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder builderForValue) {
        if (frictionJointDefBuilder_ == null) {
          frictionJointDef_ = builderForValue.build();
          onChanged();
        } else {
          frictionJointDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeFrictionJointDef(com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef value) {
        if (frictionJointDefBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              frictionJointDef_ != com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance()) {
            frictionJointDef_ =
              com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.newBuilder(frictionJointDef_).mergeFrom(value).buildPartial();
          } else {
            frictionJointDef_ = value;
          }
          onChanged();
        } else {
          frictionJointDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
       *
       * @return the builder
       */
      public Builder clearFrictionJointDef() {
        if (frictionJointDefBuilder_ == null) {
          frictionJointDef_ = com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance();
          onChanged();
        } else {
          frictionJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
       *
       * @return the friction joint def builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder getFrictionJointDefBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getFrictionJointDefFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
       *
       * @return the friction joint def or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder getFrictionJointDefOrBuilder() {
        if (frictionJointDefBuilder_ != null) {
          return frictionJointDefBuilder_.getMessageOrBuilder();
        } else {
          return frictionJointDef_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFrictionJointDef frictionJointDef = 9;</code>
       *
       * @return the friction joint def field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder> 
          getFrictionJointDefFieldBuilder() {
        if (frictionJointDefBuilder_ == null) {
          frictionJointDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder>(
                  frictionJointDef_,
                  getParentForChildren(),
                  isClean());
          frictionJointDef_ = null;
        }
        return frictionJointDefBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;
      /** The weld joint def_. */
      private com.laex.cg2d.protobuf.GameObject.CGWeldJointDef weldJointDef_ = com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance();
      
      /** The weld joint def builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGWeldJointDef, com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder> weldJointDefBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
       *
       * @return true, if successful
       */
      public boolean hasWeldJointDef() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
       *
       * @return the weld joint def
       */
      public com.laex.cg2d.protobuf.GameObject.CGWeldJointDef getWeldJointDef() {
        if (weldJointDefBuilder_ == null) {
          return weldJointDef_;
        } else {
          return weldJointDefBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setWeldJointDef(com.laex.cg2d.protobuf.GameObject.CGWeldJointDef value) {
        if (weldJointDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          weldJointDef_ = value;
          onChanged();
        } else {
          weldJointDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setWeldJointDef(
          com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder builderForValue) {
        if (weldJointDefBuilder_ == null) {
          weldJointDef_ = builderForValue.build();
          onChanged();
        } else {
          weldJointDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeWeldJointDef(com.laex.cg2d.protobuf.GameObject.CGWeldJointDef value) {
        if (weldJointDefBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              weldJointDef_ != com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance()) {
            weldJointDef_ =
              com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.newBuilder(weldJointDef_).mergeFrom(value).buildPartial();
          } else {
            weldJointDef_ = value;
          }
          onChanged();
        } else {
          weldJointDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
       *
       * @return the builder
       */
      public Builder clearWeldJointDef() {
        if (weldJointDefBuilder_ == null) {
          weldJointDef_ = com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance();
          onChanged();
        } else {
          weldJointDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
       *
       * @return the weld joint def builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder getWeldJointDefBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getWeldJointDefFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
       *
       * @return the weld joint def or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder getWeldJointDefOrBuilder() {
        if (weldJointDefBuilder_ != null) {
          return weldJointDefBuilder_.getMessageOrBuilder();
        } else {
          return weldJointDef_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGWeldJointDef weldJointDef = 10;</code>
       *
       * @return the weld joint def field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGWeldJointDef, com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder> 
          getWeldJointDefFieldBuilder() {
        if (weldJointDefBuilder_ == null) {
          weldJointDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGWeldJointDef, com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder, com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder>(
                  weldJointDef_,
                  getParentForChildren(),
                  isClean());
          weldJointDef_ = null;
        }
        return weldJointDefBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGJoint)
    }

    static {
      defaultInstance = new CGJoint(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGJoint)
  }

  /**
   * The Interface CGDistanceJointDefOrBuilder.
   */
  public interface CGDistanceJointDefOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool collideConnected = 1;
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasCollideConnected();
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return the collide connected
     */
    boolean getCollideConnected();

    // optional float freqencyHz = 2;
    /**
     * <code>optional float freqencyHz = 2;</code>.
     *
     * @return true, if successful
     */
    boolean hasFreqencyHz();
    
    /**
     * <code>optional float freqencyHz = 2;</code>.
     *
     * @return the freqency hz
     */
    float getFreqencyHz();

    // optional float dampingRatio = 3;
    /**
     * <code>optional float dampingRatio = 3;</code>.
     *
     * @return true, if successful
     */
    boolean hasDampingRatio();
    
    /**
     * <code>optional float dampingRatio = 3;</code>.
     *
     * @return the damping ratio
     */
    float getDampingRatio();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGDistanceJointDef}
   */
  public static final class CGDistanceJointDef extends
      com.google.protobuf.GeneratedMessage
      implements CGDistanceJointDefOrBuilder {
    // Use CGDistanceJointDef.newBuilder() to construct.
    /**
     * Instantiates a new cG distance joint def.
     *
     * @param builder the builder
     */
    private CGDistanceJointDef(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG distance joint def.
     *
     * @param noInit the no init
     */
    private CGDistanceJointDef(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGDistanceJointDef defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGDistanceJointDef getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGDistanceJointDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG distance joint def.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGDistanceJointDef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              collideConnected_ = input.readBool();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              freqencyHz_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              dampingRatio_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.class, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGDistanceJointDef> PARSER =
        new com.google.protobuf.AbstractParser<CGDistanceJointDef>() {
      public CGDistanceJointDef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGDistanceJointDef(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGDistanceJointDef> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional bool collideConnected = 1;
    /** The Constant COLLIDECONNECTED_FIELD_NUMBER. */
    public static final int COLLIDECONNECTED_FIELD_NUMBER = 1;
    
    /** The collide connected_. */
    private boolean collideConnected_;
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasCollideConnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return the collide connected
     */
    public boolean getCollideConnected() {
      return collideConnected_;
    }

    // optional float freqencyHz = 2;
    /** The Constant FREQENCYHZ_FIELD_NUMBER. */
    public static final int FREQENCYHZ_FIELD_NUMBER = 2;
    
    /** The freqency hz_. */
    private float freqencyHz_;
    
    /**
     * <code>optional float freqencyHz = 2;</code>.
     *
     * @return true, if successful
     */
    public boolean hasFreqencyHz() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional float freqencyHz = 2;</code>.
     *
     * @return the freqency hz
     */
    public float getFreqencyHz() {
      return freqencyHz_;
    }

    // optional float dampingRatio = 3;
    /** The Constant DAMPINGRATIO_FIELD_NUMBER. */
    public static final int DAMPINGRATIO_FIELD_NUMBER = 3;
    
    /** The damping ratio_. */
    private float dampingRatio_;
    
    /**
     * <code>optional float dampingRatio = 3;</code>.
     *
     * @return true, if successful
     */
    public boolean hasDampingRatio() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional float dampingRatio = 3;</code>.
     *
     * @return the damping ratio
     */
    public float getDampingRatio() {
      return dampingRatio_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      collideConnected_ = false;
      freqencyHz_ = 0F;
      dampingRatio_ = 0F;
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, freqencyHz_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, dampingRatio_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, freqencyHz_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, dampingRatio_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg distance joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg distance joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg distance joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg distance joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg distance joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg distance joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg distance joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg distance joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg distance joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg distance joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGDistanceJointDef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGDistanceJointDefOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.class, com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        collideConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        freqencyHz_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        dampingRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef build() {
        com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef result = new com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.collideConnected_ = collideConnected_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.freqencyHz_ = freqencyHz_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dampingRatio_ = dampingRatio_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef.getDefaultInstance()) return this;
        if (other.hasCollideConnected()) {
          setCollideConnected(other.getCollideConnected());
        }
        if (other.hasFreqencyHz()) {
          setFreqencyHz(other.getFreqencyHz());
        }
        if (other.hasDampingRatio()) {
          setDampingRatio(other.getDampingRatio());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGDistanceJointDef) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional bool collideConnected = 1;
      /** The collide connected_. */
      private boolean collideConnected_ ;
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasCollideConnected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return the collide connected
       */
      public boolean getCollideConnected() {
        return collideConnected_;
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setCollideConnected(boolean value) {
        bitField0_ |= 0x00000001;
        collideConnected_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearCollideConnected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        collideConnected_ = false;
        onChanged();
        return this;
      }

      // optional float freqencyHz = 2;
      /** The freqency hz_. */
      private float freqencyHz_ ;
      
      /**
       * <code>optional float freqencyHz = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasFreqencyHz() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional float freqencyHz = 2;</code>.
       *
       * @return the freqency hz
       */
      public float getFreqencyHz() {
        return freqencyHz_;
      }
      
      /**
       * <code>optional float freqencyHz = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setFreqencyHz(float value) {
        bitField0_ |= 0x00000002;
        freqencyHz_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float freqencyHz = 2;</code>.
       *
       * @return the builder
       */
      public Builder clearFreqencyHz() {
        bitField0_ = (bitField0_ & ~0x00000002);
        freqencyHz_ = 0F;
        onChanged();
        return this;
      }

      // optional float dampingRatio = 3;
      /** The damping ratio_. */
      private float dampingRatio_ ;
      
      /**
       * <code>optional float dampingRatio = 3;</code>.
       *
       * @return true, if successful
       */
      public boolean hasDampingRatio() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional float dampingRatio = 3;</code>.
       *
       * @return the damping ratio
       */
      public float getDampingRatio() {
        return dampingRatio_;
      }
      
      /**
       * <code>optional float dampingRatio = 3;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setDampingRatio(float value) {
        bitField0_ |= 0x00000004;
        dampingRatio_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float dampingRatio = 3;</code>.
       *
       * @return the builder
       */
      public Builder clearDampingRatio() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dampingRatio_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGDistanceJointDef)
    }

    static {
      defaultInstance = new CGDistanceJointDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGDistanceJointDef)
  }

  /**
   * The Interface CGRevoluteJointDefOrBuilder.
   */
  public interface CGRevoluteJointDefOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool collideConnected = 1;
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasCollideConnected();
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return the collide connected
     */
    boolean getCollideConnected();

    // optional float referenceAngle = 2;
    /**
     * <code>optional float referenceAngle = 2;</code>.
     *
     * @return true, if successful
     */
    boolean hasReferenceAngle();
    
    /**
     * <code>optional float referenceAngle = 2;</code>.
     *
     * @return the reference angle
     */
    float getReferenceAngle();

    // optional bool enableLimit = 3;
    /**
     * <code>optional bool enableLimit = 3;</code>.
     *
     * @return true, if successful
     */
    boolean hasEnableLimit();
    
    /**
     * <code>optional bool enableLimit = 3;</code>.
     *
     * @return the enable limit
     */
    boolean getEnableLimit();

    // optional float lowerAngle = 4;
    /**
     * <code>optional float lowerAngle = 4;</code>.
     *
     * @return true, if successful
     */
    boolean hasLowerAngle();
    
    /**
     * <code>optional float lowerAngle = 4;</code>.
     *
     * @return the lower angle
     */
    float getLowerAngle();

    // optional float upperAngle = 5;
    /**
     * <code>optional float upperAngle = 5;</code>.
     *
     * @return true, if successful
     */
    boolean hasUpperAngle();
    
    /**
     * <code>optional float upperAngle = 5;</code>.
     *
     * @return the upper angle
     */
    float getUpperAngle();

    // optional bool enableMotor = 6;
    /**
     * <code>optional bool enableMotor = 6;</code>.
     *
     * @return true, if successful
     */
    boolean hasEnableMotor();
    
    /**
     * <code>optional bool enableMotor = 6;</code>.
     *
     * @return the enable motor
     */
    boolean getEnableMotor();

    // optional float motorSpeed = 7;
    /**
     * <code>optional float motorSpeed = 7;</code>.
     *
     * @return true, if successful
     */
    boolean hasMotorSpeed();
    
    /**
     * <code>optional float motorSpeed = 7;</code>.
     *
     * @return the motor speed
     */
    float getMotorSpeed();

    // optional float maxMotorTorque = 8;
    /**
     * <code>optional float maxMotorTorque = 8;</code>.
     *
     * @return true, if successful
     */
    boolean hasMaxMotorTorque();
    
    /**
     * <code>optional float maxMotorTorque = 8;</code>.
     *
     * @return the max motor torque
     */
    float getMaxMotorTorque();

    // optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
     *
     * @return true, if successful
     */
    boolean hasWorldAnchor();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
     *
     * @return the world anchor
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2 getWorldAnchor();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
     *
     * @return the world anchor or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getWorldAnchorOrBuilder();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGRevoluteJointDef}
   */
  public static final class CGRevoluteJointDef extends
      com.google.protobuf.GeneratedMessage
      implements CGRevoluteJointDefOrBuilder {
    // Use CGRevoluteJointDef.newBuilder() to construct.
    /**
     * Instantiates a new cG revolute joint def.
     *
     * @param builder the builder
     */
    private CGRevoluteJointDef(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG revolute joint def.
     *
     * @param noInit the no init
     */
    private CGRevoluteJointDef(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGRevoluteJointDef defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGRevoluteJointDef getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGRevoluteJointDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG revolute joint def.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGRevoluteJointDef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              collideConnected_ = input.readBool();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              referenceAngle_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              enableLimit_ = input.readBool();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              lowerAngle_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              upperAngle_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              enableMotor_ = input.readBool();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              motorSpeed_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              maxMotorTorque_ = input.readFloat();
              break;
            }
            case 74: {
              com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = worldAnchor_.toBuilder();
              }
              worldAnchor_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGVector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(worldAnchor_);
                worldAnchor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.class, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGRevoluteJointDef> PARSER =
        new com.google.protobuf.AbstractParser<CGRevoluteJointDef>() {
      public CGRevoluteJointDef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGRevoluteJointDef(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGRevoluteJointDef> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional bool collideConnected = 1;
    /** The Constant COLLIDECONNECTED_FIELD_NUMBER. */
    public static final int COLLIDECONNECTED_FIELD_NUMBER = 1;
    
    /** The collide connected_. */
    private boolean collideConnected_;
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasCollideConnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return the collide connected
     */
    public boolean getCollideConnected() {
      return collideConnected_;
    }

    // optional float referenceAngle = 2;
    /** The Constant REFERENCEANGLE_FIELD_NUMBER. */
    public static final int REFERENCEANGLE_FIELD_NUMBER = 2;
    
    /** The reference angle_. */
    private float referenceAngle_;
    
    /**
     * <code>optional float referenceAngle = 2;</code>.
     *
     * @return true, if successful
     */
    public boolean hasReferenceAngle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional float referenceAngle = 2;</code>.
     *
     * @return the reference angle
     */
    public float getReferenceAngle() {
      return referenceAngle_;
    }

    // optional bool enableLimit = 3;
    /** The Constant ENABLELIMIT_FIELD_NUMBER. */
    public static final int ENABLELIMIT_FIELD_NUMBER = 3;
    
    /** The enable limit_. */
    private boolean enableLimit_;
    
    /**
     * <code>optional bool enableLimit = 3;</code>.
     *
     * @return true, if successful
     */
    public boolean hasEnableLimit() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional bool enableLimit = 3;</code>.
     *
     * @return the enable limit
     */
    public boolean getEnableLimit() {
      return enableLimit_;
    }

    // optional float lowerAngle = 4;
    /** The Constant LOWERANGLE_FIELD_NUMBER. */
    public static final int LOWERANGLE_FIELD_NUMBER = 4;
    
    /** The lower angle_. */
    private float lowerAngle_;
    
    /**
     * <code>optional float lowerAngle = 4;</code>.
     *
     * @return true, if successful
     */
    public boolean hasLowerAngle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    
    /**
     * <code>optional float lowerAngle = 4;</code>.
     *
     * @return the lower angle
     */
    public float getLowerAngle() {
      return lowerAngle_;
    }

    // optional float upperAngle = 5;
    /** The Constant UPPERANGLE_FIELD_NUMBER. */
    public static final int UPPERANGLE_FIELD_NUMBER = 5;
    
    /** The upper angle_. */
    private float upperAngle_;
    
    /**
     * <code>optional float upperAngle = 5;</code>.
     *
     * @return true, if successful
     */
    public boolean hasUpperAngle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    
    /**
     * <code>optional float upperAngle = 5;</code>.
     *
     * @return the upper angle
     */
    public float getUpperAngle() {
      return upperAngle_;
    }

    // optional bool enableMotor = 6;
    /** The Constant ENABLEMOTOR_FIELD_NUMBER. */
    public static final int ENABLEMOTOR_FIELD_NUMBER = 6;
    
    /** The enable motor_. */
    private boolean enableMotor_;
    
    /**
     * <code>optional bool enableMotor = 6;</code>.
     *
     * @return true, if successful
     */
    public boolean hasEnableMotor() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    
    /**
     * <code>optional bool enableMotor = 6;</code>.
     *
     * @return the enable motor
     */
    public boolean getEnableMotor() {
      return enableMotor_;
    }

    // optional float motorSpeed = 7;
    /** The Constant MOTORSPEED_FIELD_NUMBER. */
    public static final int MOTORSPEED_FIELD_NUMBER = 7;
    
    /** The motor speed_. */
    private float motorSpeed_;
    
    /**
     * <code>optional float motorSpeed = 7;</code>.
     *
     * @return true, if successful
     */
    public boolean hasMotorSpeed() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    
    /**
     * <code>optional float motorSpeed = 7;</code>.
     *
     * @return the motor speed
     */
    public float getMotorSpeed() {
      return motorSpeed_;
    }

    // optional float maxMotorTorque = 8;
    /** The Constant MAXMOTORTORQUE_FIELD_NUMBER. */
    public static final int MAXMOTORTORQUE_FIELD_NUMBER = 8;
    
    /** The max motor torque_. */
    private float maxMotorTorque_;
    
    /**
     * <code>optional float maxMotorTorque = 8;</code>.
     *
     * @return true, if successful
     */
    public boolean hasMaxMotorTorque() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    
    /**
     * <code>optional float maxMotorTorque = 8;</code>.
     *
     * @return the max motor torque
     */
    public float getMaxMotorTorque() {
      return maxMotorTorque_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;
    /** The Constant WORLDANCHOR_FIELD_NUMBER. */
    public static final int WORLDANCHOR_FIELD_NUMBER = 9;
    
    /** The world anchor_. */
    private com.laex.cg2d.protobuf.GameObject.CGVector2 worldAnchor_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
     *
     * @return true, if successful
     */
    public boolean hasWorldAnchor() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
     *
     * @return the world anchor
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2 getWorldAnchor() {
      return worldAnchor_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
     *
     * @return the world anchor or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getWorldAnchorOrBuilder() {
      return worldAnchor_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      collideConnected_ = false;
      referenceAngle_ = 0F;
      enableLimit_ = false;
      lowerAngle_ = 0F;
      upperAngle_ = 0F;
      enableMotor_ = false;
      motorSpeed_ = 0F;
      maxMotorTorque_ = 0F;
      worldAnchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasWorldAnchor()) {
        if (!getWorldAnchor().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, referenceAngle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, enableLimit_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, lowerAngle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, upperAngle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, enableMotor_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, motorSpeed_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, maxMotorTorque_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, worldAnchor_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, referenceAngle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, enableLimit_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, lowerAngle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, upperAngle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, enableMotor_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, motorSpeed_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, maxMotorTorque_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, worldAnchor_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg revolute joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg revolute joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg revolute joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg revolute joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg revolute joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg revolute joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg revolute joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg revolute joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg revolute joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg revolute joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGRevoluteJointDef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDefOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.class, com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getWorldAnchorFieldBuilder();
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        collideConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        referenceAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        enableLimit_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        lowerAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        upperAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        enableMotor_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        motorSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        maxMotorTorque_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (worldAnchorBuilder_ == null) {
          worldAnchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          worldAnchorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef build() {
        com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef result = new com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.collideConnected_ = collideConnected_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.referenceAngle_ = referenceAngle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.enableLimit_ = enableLimit_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lowerAngle_ = lowerAngle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.upperAngle_ = upperAngle_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.enableMotor_ = enableMotor_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.motorSpeed_ = motorSpeed_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.maxMotorTorque_ = maxMotorTorque_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (worldAnchorBuilder_ == null) {
          result.worldAnchor_ = worldAnchor_;
        } else {
          result.worldAnchor_ = worldAnchorBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef.getDefaultInstance()) return this;
        if (other.hasCollideConnected()) {
          setCollideConnected(other.getCollideConnected());
        }
        if (other.hasReferenceAngle()) {
          setReferenceAngle(other.getReferenceAngle());
        }
        if (other.hasEnableLimit()) {
          setEnableLimit(other.getEnableLimit());
        }
        if (other.hasLowerAngle()) {
          setLowerAngle(other.getLowerAngle());
        }
        if (other.hasUpperAngle()) {
          setUpperAngle(other.getUpperAngle());
        }
        if (other.hasEnableMotor()) {
          setEnableMotor(other.getEnableMotor());
        }
        if (other.hasMotorSpeed()) {
          setMotorSpeed(other.getMotorSpeed());
        }
        if (other.hasMaxMotorTorque()) {
          setMaxMotorTorque(other.getMaxMotorTorque());
        }
        if (other.hasWorldAnchor()) {
          mergeWorldAnchor(other.getWorldAnchor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        if (hasWorldAnchor()) {
          if (!getWorldAnchor().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGRevoluteJointDef) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional bool collideConnected = 1;
      /** The collide connected_. */
      private boolean collideConnected_ ;
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasCollideConnected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return the collide connected
       */
      public boolean getCollideConnected() {
        return collideConnected_;
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setCollideConnected(boolean value) {
        bitField0_ |= 0x00000001;
        collideConnected_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearCollideConnected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        collideConnected_ = false;
        onChanged();
        return this;
      }

      // optional float referenceAngle = 2;
      /** The reference angle_. */
      private float referenceAngle_ ;
      
      /**
       * <code>optional float referenceAngle = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasReferenceAngle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional float referenceAngle = 2;</code>.
       *
       * @return the reference angle
       */
      public float getReferenceAngle() {
        return referenceAngle_;
      }
      
      /**
       * <code>optional float referenceAngle = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setReferenceAngle(float value) {
        bitField0_ |= 0x00000002;
        referenceAngle_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float referenceAngle = 2;</code>.
       *
       * @return the builder
       */
      public Builder clearReferenceAngle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        referenceAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional bool enableLimit = 3;
      /** The enable limit_. */
      private boolean enableLimit_ ;
      
      /**
       * <code>optional bool enableLimit = 3;</code>.
       *
       * @return true, if successful
       */
      public boolean hasEnableLimit() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional bool enableLimit = 3;</code>.
       *
       * @return the enable limit
       */
      public boolean getEnableLimit() {
        return enableLimit_;
      }
      
      /**
       * <code>optional bool enableLimit = 3;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setEnableLimit(boolean value) {
        bitField0_ |= 0x00000004;
        enableLimit_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool enableLimit = 3;</code>.
       *
       * @return the builder
       */
      public Builder clearEnableLimit() {
        bitField0_ = (bitField0_ & ~0x00000004);
        enableLimit_ = false;
        onChanged();
        return this;
      }

      // optional float lowerAngle = 4;
      /** The lower angle_. */
      private float lowerAngle_ ;
      
      /**
       * <code>optional float lowerAngle = 4;</code>.
       *
       * @return true, if successful
       */
      public boolean hasLowerAngle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional float lowerAngle = 4;</code>.
       *
       * @return the lower angle
       */
      public float getLowerAngle() {
        return lowerAngle_;
      }
      
      /**
       * <code>optional float lowerAngle = 4;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setLowerAngle(float value) {
        bitField0_ |= 0x00000008;
        lowerAngle_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float lowerAngle = 4;</code>.
       *
       * @return the builder
       */
      public Builder clearLowerAngle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lowerAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float upperAngle = 5;
      /** The upper angle_. */
      private float upperAngle_ ;
      
      /**
       * <code>optional float upperAngle = 5;</code>.
       *
       * @return true, if successful
       */
      public boolean hasUpperAngle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      
      /**
       * <code>optional float upperAngle = 5;</code>.
       *
       * @return the upper angle
       */
      public float getUpperAngle() {
        return upperAngle_;
      }
      
      /**
       * <code>optional float upperAngle = 5;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setUpperAngle(float value) {
        bitField0_ |= 0x00000010;
        upperAngle_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float upperAngle = 5;</code>.
       *
       * @return the builder
       */
      public Builder clearUpperAngle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        upperAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional bool enableMotor = 6;
      /** The enable motor_. */
      private boolean enableMotor_ ;
      
      /**
       * <code>optional bool enableMotor = 6;</code>.
       *
       * @return true, if successful
       */
      public boolean hasEnableMotor() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      
      /**
       * <code>optional bool enableMotor = 6;</code>.
       *
       * @return the enable motor
       */
      public boolean getEnableMotor() {
        return enableMotor_;
      }
      
      /**
       * <code>optional bool enableMotor = 6;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setEnableMotor(boolean value) {
        bitField0_ |= 0x00000020;
        enableMotor_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool enableMotor = 6;</code>.
       *
       * @return the builder
       */
      public Builder clearEnableMotor() {
        bitField0_ = (bitField0_ & ~0x00000020);
        enableMotor_ = false;
        onChanged();
        return this;
      }

      // optional float motorSpeed = 7;
      /** The motor speed_. */
      private float motorSpeed_ ;
      
      /**
       * <code>optional float motorSpeed = 7;</code>.
       *
       * @return true, if successful
       */
      public boolean hasMotorSpeed() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      
      /**
       * <code>optional float motorSpeed = 7;</code>.
       *
       * @return the motor speed
       */
      public float getMotorSpeed() {
        return motorSpeed_;
      }
      
      /**
       * <code>optional float motorSpeed = 7;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setMotorSpeed(float value) {
        bitField0_ |= 0x00000040;
        motorSpeed_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float motorSpeed = 7;</code>.
       *
       * @return the builder
       */
      public Builder clearMotorSpeed() {
        bitField0_ = (bitField0_ & ~0x00000040);
        motorSpeed_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxMotorTorque = 8;
      /** The max motor torque_. */
      private float maxMotorTorque_ ;
      
      /**
       * <code>optional float maxMotorTorque = 8;</code>.
       *
       * @return true, if successful
       */
      public boolean hasMaxMotorTorque() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      
      /**
       * <code>optional float maxMotorTorque = 8;</code>.
       *
       * @return the max motor torque
       */
      public float getMaxMotorTorque() {
        return maxMotorTorque_;
      }
      
      /**
       * <code>optional float maxMotorTorque = 8;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setMaxMotorTorque(float value) {
        bitField0_ |= 0x00000080;
        maxMotorTorque_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float maxMotorTorque = 8;</code>.
       *
       * @return the builder
       */
      public Builder clearMaxMotorTorque() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxMotorTorque_ = 0F;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;
      /** The world anchor_. */
      private com.laex.cg2d.protobuf.GameObject.CGVector2 worldAnchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      
      /** The world anchor builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> worldAnchorBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
       *
       * @return true, if successful
       */
      public boolean hasWorldAnchor() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
       *
       * @return the world anchor
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2 getWorldAnchor() {
        if (worldAnchorBuilder_ == null) {
          return worldAnchor_;
        } else {
          return worldAnchorBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setWorldAnchor(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (worldAnchorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          worldAnchor_ = value;
          onChanged();
        } else {
          worldAnchorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setWorldAnchor(
          com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (worldAnchorBuilder_ == null) {
          worldAnchor_ = builderForValue.build();
          onChanged();
        } else {
          worldAnchorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeWorldAnchor(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (worldAnchorBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              worldAnchor_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            worldAnchor_ =
              com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(worldAnchor_).mergeFrom(value).buildPartial();
          } else {
            worldAnchor_ = value;
          }
          onChanged();
        } else {
          worldAnchorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
       *
       * @return the builder
       */
      public Builder clearWorldAnchor() {
        if (worldAnchorBuilder_ == null) {
          worldAnchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          worldAnchorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
       *
       * @return the world anchor builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getWorldAnchorBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getWorldAnchorFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
       *
       * @return the world anchor or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getWorldAnchorOrBuilder() {
        if (worldAnchorBuilder_ != null) {
          return worldAnchorBuilder_.getMessageOrBuilder();
        } else {
          return worldAnchor_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 worldAnchor = 9;</code>
       *
       * @return the world anchor field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> 
          getWorldAnchorFieldBuilder() {
        if (worldAnchorBuilder_ == null) {
          worldAnchorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
                  worldAnchor_,
                  getParentForChildren(),
                  isClean());
          worldAnchor_ = null;
        }
        return worldAnchorBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGRevoluteJointDef)
    }

    static {
      defaultInstance = new CGRevoluteJointDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGRevoluteJointDef)
  }

  /**
   * The Interface CGPrismaticJointDefOrBuilder.
   */
  public interface CGPrismaticJointDefOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool collideConnected = 1;
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasCollideConnected();
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return the collide connected
     */
    boolean getCollideConnected();

    // optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
     *
     * @return true, if successful
     */
    boolean hasAnchor();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
     *
     * @return the anchor
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2 getAnchor();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
     *
     * @return the anchor or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getAnchorOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
     *
     * @return true, if successful
     */
    boolean hasAxis();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
     *
     * @return the axis
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2 getAxis();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
     *
     * @return the axis or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getAxisOrBuilder();

    // optional float referenceAngle = 5;
    /**
     * <code>optional float referenceAngle = 5;</code>.
     *
     * @return true, if successful
     */
    boolean hasReferenceAngle();
    
    /**
     * <code>optional float referenceAngle = 5;</code>.
     *
     * @return the reference angle
     */
    float getReferenceAngle();

    // optional bool enableLimit = 6;
    /**
     * <code>optional bool enableLimit = 6;</code>.
     *
     * @return true, if successful
     */
    boolean hasEnableLimit();
    
    /**
     * <code>optional bool enableLimit = 6;</code>.
     *
     * @return the enable limit
     */
    boolean getEnableLimit();

    // optional float lowerTranslation = 7;
    /**
     * <code>optional float lowerTranslation = 7;</code>.
     *
     * @return true, if successful
     */
    boolean hasLowerTranslation();
    
    /**
     * <code>optional float lowerTranslation = 7;</code>.
     *
     * @return the lower translation
     */
    float getLowerTranslation();

    // optional float upperTranslation = 8;
    /**
     * <code>optional float upperTranslation = 8;</code>.
     *
     * @return true, if successful
     */
    boolean hasUpperTranslation();
    
    /**
     * <code>optional float upperTranslation = 8;</code>.
     *
     * @return the upper translation
     */
    float getUpperTranslation();

    // optional bool enableMotor = 9;
    /**
     * <code>optional bool enableMotor = 9;</code>.
     *
     * @return true, if successful
     */
    boolean hasEnableMotor();
    
    /**
     * <code>optional bool enableMotor = 9;</code>.
     *
     * @return the enable motor
     */
    boolean getEnableMotor();

    // optional float maxMotorForce = 10;
    /**
     * <code>optional float maxMotorForce = 10;</code>.
     *
     * @return true, if successful
     */
    boolean hasMaxMotorForce();
    
    /**
     * <code>optional float maxMotorForce = 10;</code>.
     *
     * @return the max motor force
     */
    float getMaxMotorForce();

    // optional float motorSpeed = 11;
    /**
     * <code>optional float motorSpeed = 11;</code>.
     *
     * @return true, if successful
     */
    boolean hasMotorSpeed();
    
    /**
     * <code>optional float motorSpeed = 11;</code>.
     *
     * @return the motor speed
     */
    float getMotorSpeed();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGPrismaticJointDef}
   */
  public static final class CGPrismaticJointDef extends
      com.google.protobuf.GeneratedMessage
      implements CGPrismaticJointDefOrBuilder {
    // Use CGPrismaticJointDef.newBuilder() to construct.
    /**
     * Instantiates a new cG prismatic joint def.
     *
     * @param builder the builder
     */
    private CGPrismaticJointDef(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG prismatic joint def.
     *
     * @param noInit the no init
     */
    private CGPrismaticJointDef(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGPrismaticJointDef defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGPrismaticJointDef getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGPrismaticJointDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG prismatic joint def.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGPrismaticJointDef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              collideConnected_ = input.readBool();
              break;
            }
            case 18: {
              com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = anchor_.toBuilder();
              }
              anchor_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGVector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(anchor_);
                anchor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = axis_.toBuilder();
              }
              axis_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGVector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(axis_);
                axis_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 45: {
              bitField0_ |= 0x00000008;
              referenceAngle_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              enableLimit_ = input.readBool();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000020;
              lowerTranslation_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000040;
              upperTranslation_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              enableMotor_ = input.readBool();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000100;
              maxMotorForce_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000200;
              motorSpeed_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.class, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGPrismaticJointDef> PARSER =
        new com.google.protobuf.AbstractParser<CGPrismaticJointDef>() {
      public CGPrismaticJointDef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGPrismaticJointDef(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGPrismaticJointDef> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional bool collideConnected = 1;
    /** The Constant COLLIDECONNECTED_FIELD_NUMBER. */
    public static final int COLLIDECONNECTED_FIELD_NUMBER = 1;
    
    /** The collide connected_. */
    private boolean collideConnected_;
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasCollideConnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return the collide connected
     */
    public boolean getCollideConnected() {
      return collideConnected_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;
    /** The Constant ANCHOR_FIELD_NUMBER. */
    public static final int ANCHOR_FIELD_NUMBER = 2;
    
    /** The anchor_. */
    private com.laex.cg2d.protobuf.GameObject.CGVector2 anchor_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
     *
     * @return true, if successful
     */
    public boolean hasAnchor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
     *
     * @return the anchor
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2 getAnchor() {
      return anchor_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
     *
     * @return the anchor or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getAnchorOrBuilder() {
      return anchor_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;
    /** The Constant AXIS_FIELD_NUMBER. */
    public static final int AXIS_FIELD_NUMBER = 3;
    
    /** The axis_. */
    private com.laex.cg2d.protobuf.GameObject.CGVector2 axis_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
     *
     * @return true, if successful
     */
    public boolean hasAxis() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
     *
     * @return the axis
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2 getAxis() {
      return axis_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
     *
     * @return the axis or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getAxisOrBuilder() {
      return axis_;
    }

    // optional float referenceAngle = 5;
    /** The Constant REFERENCEANGLE_FIELD_NUMBER. */
    public static final int REFERENCEANGLE_FIELD_NUMBER = 5;
    
    /** The reference angle_. */
    private float referenceAngle_;
    
    /**
     * <code>optional float referenceAngle = 5;</code>.
     *
     * @return true, if successful
     */
    public boolean hasReferenceAngle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    
    /**
     * <code>optional float referenceAngle = 5;</code>.
     *
     * @return the reference angle
     */
    public float getReferenceAngle() {
      return referenceAngle_;
    }

    // optional bool enableLimit = 6;
    /** The Constant ENABLELIMIT_FIELD_NUMBER. */
    public static final int ENABLELIMIT_FIELD_NUMBER = 6;
    
    /** The enable limit_. */
    private boolean enableLimit_;
    
    /**
     * <code>optional bool enableLimit = 6;</code>.
     *
     * @return true, if successful
     */
    public boolean hasEnableLimit() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    
    /**
     * <code>optional bool enableLimit = 6;</code>.
     *
     * @return the enable limit
     */
    public boolean getEnableLimit() {
      return enableLimit_;
    }

    // optional float lowerTranslation = 7;
    /** The Constant LOWERTRANSLATION_FIELD_NUMBER. */
    public static final int LOWERTRANSLATION_FIELD_NUMBER = 7;
    
    /** The lower translation_. */
    private float lowerTranslation_;
    
    /**
     * <code>optional float lowerTranslation = 7;</code>.
     *
     * @return true, if successful
     */
    public boolean hasLowerTranslation() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    
    /**
     * <code>optional float lowerTranslation = 7;</code>.
     *
     * @return the lower translation
     */
    public float getLowerTranslation() {
      return lowerTranslation_;
    }

    // optional float upperTranslation = 8;
    /** The Constant UPPERTRANSLATION_FIELD_NUMBER. */
    public static final int UPPERTRANSLATION_FIELD_NUMBER = 8;
    
    /** The upper translation_. */
    private float upperTranslation_;
    
    /**
     * <code>optional float upperTranslation = 8;</code>.
     *
     * @return true, if successful
     */
    public boolean hasUpperTranslation() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    
    /**
     * <code>optional float upperTranslation = 8;</code>.
     *
     * @return the upper translation
     */
    public float getUpperTranslation() {
      return upperTranslation_;
    }

    // optional bool enableMotor = 9;
    /** The Constant ENABLEMOTOR_FIELD_NUMBER. */
    public static final int ENABLEMOTOR_FIELD_NUMBER = 9;
    
    /** The enable motor_. */
    private boolean enableMotor_;
    
    /**
     * <code>optional bool enableMotor = 9;</code>.
     *
     * @return true, if successful
     */
    public boolean hasEnableMotor() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    
    /**
     * <code>optional bool enableMotor = 9;</code>.
     *
     * @return the enable motor
     */
    public boolean getEnableMotor() {
      return enableMotor_;
    }

    // optional float maxMotorForce = 10;
    /** The Constant MAXMOTORFORCE_FIELD_NUMBER. */
    public static final int MAXMOTORFORCE_FIELD_NUMBER = 10;
    
    /** The max motor force_. */
    private float maxMotorForce_;
    
    /**
     * <code>optional float maxMotorForce = 10;</code>.
     *
     * @return true, if successful
     */
    public boolean hasMaxMotorForce() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    
    /**
     * <code>optional float maxMotorForce = 10;</code>.
     *
     * @return the max motor force
     */
    public float getMaxMotorForce() {
      return maxMotorForce_;
    }

    // optional float motorSpeed = 11;
    /** The Constant MOTORSPEED_FIELD_NUMBER. */
    public static final int MOTORSPEED_FIELD_NUMBER = 11;
    
    /** The motor speed_. */
    private float motorSpeed_;
    
    /**
     * <code>optional float motorSpeed = 11;</code>.
     *
     * @return true, if successful
     */
    public boolean hasMotorSpeed() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    
    /**
     * <code>optional float motorSpeed = 11;</code>.
     *
     * @return the motor speed
     */
    public float getMotorSpeed() {
      return motorSpeed_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      collideConnected_ = false;
      anchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      axis_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      referenceAngle_ = 0F;
      enableLimit_ = false;
      lowerTranslation_ = 0F;
      upperTranslation_ = 0F;
      enableMotor_ = false;
      maxMotorForce_ = 0F;
      motorSpeed_ = 0F;
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasAnchor()) {
        if (!getAnchor().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasAxis()) {
        if (!getAxis().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, anchor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, axis_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(5, referenceAngle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, enableLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(7, lowerTranslation_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(8, upperTranslation_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(9, enableMotor_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(10, maxMotorForce_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(11, motorSpeed_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, anchor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, axis_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, referenceAngle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, enableLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, lowerTranslation_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, upperTranslation_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, enableMotor_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, maxMotorForce_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, motorSpeed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg prismatic joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg prismatic joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg prismatic joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg prismatic joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg prismatic joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg prismatic joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg prismatic joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg prismatic joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg prismatic joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg prismatic joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGPrismaticJointDef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDefOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.class, com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAnchorFieldBuilder();
          getAxisFieldBuilder();
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        collideConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (anchorBuilder_ == null) {
          anchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          anchorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (axisBuilder_ == null) {
          axis_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          axisBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        referenceAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        enableLimit_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        lowerTranslation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        upperTranslation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        enableMotor_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        maxMotorForce_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        motorSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef build() {
        com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef result = new com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.collideConnected_ = collideConnected_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (anchorBuilder_ == null) {
          result.anchor_ = anchor_;
        } else {
          result.anchor_ = anchorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (axisBuilder_ == null) {
          result.axis_ = axis_;
        } else {
          result.axis_ = axisBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.referenceAngle_ = referenceAngle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.enableLimit_ = enableLimit_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lowerTranslation_ = lowerTranslation_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.upperTranslation_ = upperTranslation_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.enableMotor_ = enableMotor_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.maxMotorForce_ = maxMotorForce_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.motorSpeed_ = motorSpeed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef.getDefaultInstance()) return this;
        if (other.hasCollideConnected()) {
          setCollideConnected(other.getCollideConnected());
        }
        if (other.hasAnchor()) {
          mergeAnchor(other.getAnchor());
        }
        if (other.hasAxis()) {
          mergeAxis(other.getAxis());
        }
        if (other.hasReferenceAngle()) {
          setReferenceAngle(other.getReferenceAngle());
        }
        if (other.hasEnableLimit()) {
          setEnableLimit(other.getEnableLimit());
        }
        if (other.hasLowerTranslation()) {
          setLowerTranslation(other.getLowerTranslation());
        }
        if (other.hasUpperTranslation()) {
          setUpperTranslation(other.getUpperTranslation());
        }
        if (other.hasEnableMotor()) {
          setEnableMotor(other.getEnableMotor());
        }
        if (other.hasMaxMotorForce()) {
          setMaxMotorForce(other.getMaxMotorForce());
        }
        if (other.hasMotorSpeed()) {
          setMotorSpeed(other.getMotorSpeed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        if (hasAnchor()) {
          if (!getAnchor().isInitialized()) {
            
            return false;
          }
        }
        if (hasAxis()) {
          if (!getAxis().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGPrismaticJointDef) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional bool collideConnected = 1;
      /** The collide connected_. */
      private boolean collideConnected_ ;
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasCollideConnected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return the collide connected
       */
      public boolean getCollideConnected() {
        return collideConnected_;
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setCollideConnected(boolean value) {
        bitField0_ |= 0x00000001;
        collideConnected_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearCollideConnected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        collideConnected_ = false;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;
      /** The anchor_. */
      private com.laex.cg2d.protobuf.GameObject.CGVector2 anchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      
      /** The anchor builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> anchorBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
       *
       * @return true, if successful
       */
      public boolean hasAnchor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
       *
       * @return the anchor
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2 getAnchor() {
        if (anchorBuilder_ == null) {
          return anchor_;
        } else {
          return anchorBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setAnchor(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (anchorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          anchor_ = value;
          onChanged();
        } else {
          anchorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setAnchor(
          com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (anchorBuilder_ == null) {
          anchor_ = builderForValue.build();
          onChanged();
        } else {
          anchorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeAnchor(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (anchorBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              anchor_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            anchor_ =
              com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(anchor_).mergeFrom(value).buildPartial();
          } else {
            anchor_ = value;
          }
          onChanged();
        } else {
          anchorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
       *
       * @return the builder
       */
      public Builder clearAnchor() {
        if (anchorBuilder_ == null) {
          anchor_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          anchorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
       *
       * @return the anchor builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getAnchorBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAnchorFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
       *
       * @return the anchor or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getAnchorOrBuilder() {
        if (anchorBuilder_ != null) {
          return anchorBuilder_.getMessageOrBuilder();
        } else {
          return anchor_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 anchor = 2;</code>
       *
       * @return the anchor field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> 
          getAnchorFieldBuilder() {
        if (anchorBuilder_ == null) {
          anchorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
                  anchor_,
                  getParentForChildren(),
                  isClean());
          anchor_ = null;
        }
        return anchorBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;
      /** The axis_. */
      private com.laex.cg2d.protobuf.GameObject.CGVector2 axis_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      
      /** The axis builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> axisBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
       *
       * @return true, if successful
       */
      public boolean hasAxis() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
       *
       * @return the axis
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2 getAxis() {
        if (axisBuilder_ == null) {
          return axis_;
        } else {
          return axisBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setAxis(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (axisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          axis_ = value;
          onChanged();
        } else {
          axisBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setAxis(
          com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (axisBuilder_ == null) {
          axis_ = builderForValue.build();
          onChanged();
        } else {
          axisBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeAxis(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (axisBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              axis_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            axis_ =
              com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(axis_).mergeFrom(value).buildPartial();
          } else {
            axis_ = value;
          }
          onChanged();
        } else {
          axisBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
       *
       * @return the builder
       */
      public Builder clearAxis() {
        if (axisBuilder_ == null) {
          axis_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          axisBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
       *
       * @return the axis builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getAxisBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getAxisFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
       *
       * @return the axis or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getAxisOrBuilder() {
        if (axisBuilder_ != null) {
          return axisBuilder_.getMessageOrBuilder();
        } else {
          return axis_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 axis = 3;</code>
       *
       * @return the axis field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> 
          getAxisFieldBuilder() {
        if (axisBuilder_ == null) {
          axisBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
                  axis_,
                  getParentForChildren(),
                  isClean());
          axis_ = null;
        }
        return axisBuilder_;
      }

      // optional float referenceAngle = 5;
      /** The reference angle_. */
      private float referenceAngle_ ;
      
      /**
       * <code>optional float referenceAngle = 5;</code>.
       *
       * @return true, if successful
       */
      public boolean hasReferenceAngle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional float referenceAngle = 5;</code>.
       *
       * @return the reference angle
       */
      public float getReferenceAngle() {
        return referenceAngle_;
      }
      
      /**
       * <code>optional float referenceAngle = 5;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setReferenceAngle(float value) {
        bitField0_ |= 0x00000008;
        referenceAngle_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float referenceAngle = 5;</code>.
       *
       * @return the builder
       */
      public Builder clearReferenceAngle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        referenceAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional bool enableLimit = 6;
      /** The enable limit_. */
      private boolean enableLimit_ ;
      
      /**
       * <code>optional bool enableLimit = 6;</code>.
       *
       * @return true, if successful
       */
      public boolean hasEnableLimit() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      
      /**
       * <code>optional bool enableLimit = 6;</code>.
       *
       * @return the enable limit
       */
      public boolean getEnableLimit() {
        return enableLimit_;
      }
      
      /**
       * <code>optional bool enableLimit = 6;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setEnableLimit(boolean value) {
        bitField0_ |= 0x00000010;
        enableLimit_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool enableLimit = 6;</code>.
       *
       * @return the builder
       */
      public Builder clearEnableLimit() {
        bitField0_ = (bitField0_ & ~0x00000010);
        enableLimit_ = false;
        onChanged();
        return this;
      }

      // optional float lowerTranslation = 7;
      /** The lower translation_. */
      private float lowerTranslation_ ;
      
      /**
       * <code>optional float lowerTranslation = 7;</code>.
       *
       * @return true, if successful
       */
      public boolean hasLowerTranslation() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      
      /**
       * <code>optional float lowerTranslation = 7;</code>.
       *
       * @return the lower translation
       */
      public float getLowerTranslation() {
        return lowerTranslation_;
      }
      
      /**
       * <code>optional float lowerTranslation = 7;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setLowerTranslation(float value) {
        bitField0_ |= 0x00000020;
        lowerTranslation_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float lowerTranslation = 7;</code>.
       *
       * @return the builder
       */
      public Builder clearLowerTranslation() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lowerTranslation_ = 0F;
        onChanged();
        return this;
      }

      // optional float upperTranslation = 8;
      /** The upper translation_. */
      private float upperTranslation_ ;
      
      /**
       * <code>optional float upperTranslation = 8;</code>.
       *
       * @return true, if successful
       */
      public boolean hasUpperTranslation() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      
      /**
       * <code>optional float upperTranslation = 8;</code>.
       *
       * @return the upper translation
       */
      public float getUpperTranslation() {
        return upperTranslation_;
      }
      
      /**
       * <code>optional float upperTranslation = 8;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setUpperTranslation(float value) {
        bitField0_ |= 0x00000040;
        upperTranslation_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float upperTranslation = 8;</code>.
       *
       * @return the builder
       */
      public Builder clearUpperTranslation() {
        bitField0_ = (bitField0_ & ~0x00000040);
        upperTranslation_ = 0F;
        onChanged();
        return this;
      }

      // optional bool enableMotor = 9;
      /** The enable motor_. */
      private boolean enableMotor_ ;
      
      /**
       * <code>optional bool enableMotor = 9;</code>.
       *
       * @return true, if successful
       */
      public boolean hasEnableMotor() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      
      /**
       * <code>optional bool enableMotor = 9;</code>.
       *
       * @return the enable motor
       */
      public boolean getEnableMotor() {
        return enableMotor_;
      }
      
      /**
       * <code>optional bool enableMotor = 9;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setEnableMotor(boolean value) {
        bitField0_ |= 0x00000080;
        enableMotor_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool enableMotor = 9;</code>.
       *
       * @return the builder
       */
      public Builder clearEnableMotor() {
        bitField0_ = (bitField0_ & ~0x00000080);
        enableMotor_ = false;
        onChanged();
        return this;
      }

      // optional float maxMotorForce = 10;
      /** The max motor force_. */
      private float maxMotorForce_ ;
      
      /**
       * <code>optional float maxMotorForce = 10;</code>.
       *
       * @return true, if successful
       */
      public boolean hasMaxMotorForce() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      
      /**
       * <code>optional float maxMotorForce = 10;</code>.
       *
       * @return the max motor force
       */
      public float getMaxMotorForce() {
        return maxMotorForce_;
      }
      
      /**
       * <code>optional float maxMotorForce = 10;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setMaxMotorForce(float value) {
        bitField0_ |= 0x00000100;
        maxMotorForce_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float maxMotorForce = 10;</code>.
       *
       * @return the builder
       */
      public Builder clearMaxMotorForce() {
        bitField0_ = (bitField0_ & ~0x00000100);
        maxMotorForce_ = 0F;
        onChanged();
        return this;
      }

      // optional float motorSpeed = 11;
      /** The motor speed_. */
      private float motorSpeed_ ;
      
      /**
       * <code>optional float motorSpeed = 11;</code>.
       *
       * @return true, if successful
       */
      public boolean hasMotorSpeed() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      
      /**
       * <code>optional float motorSpeed = 11;</code>.
       *
       * @return the motor speed
       */
      public float getMotorSpeed() {
        return motorSpeed_;
      }
      
      /**
       * <code>optional float motorSpeed = 11;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setMotorSpeed(float value) {
        bitField0_ |= 0x00000200;
        motorSpeed_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float motorSpeed = 11;</code>.
       *
       * @return the builder
       */
      public Builder clearMotorSpeed() {
        bitField0_ = (bitField0_ & ~0x00000200);
        motorSpeed_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGPrismaticJointDef)
    }

    static {
      defaultInstance = new CGPrismaticJointDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGPrismaticJointDef)
  }

  /**
   * The Interface CGPulleyJointDefOrBuilder.
   */
  public interface CGPulleyJointDefOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool collideConnected = 1;
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasCollideConnected();
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return the collide connected
     */
    boolean getCollideConnected();

    // optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
     *
     * @return true, if successful
     */
    boolean hasGroundAnchorA();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
     *
     * @return the ground anchor a
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2 getGroundAnchorA();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
     *
     * @return the ground anchor a or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getGroundAnchorAOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
     *
     * @return true, if successful
     */
    boolean hasGroundAnchorB();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
     *
     * @return the ground anchor b
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2 getGroundAnchorB();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
     *
     * @return the ground anchor b or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getGroundAnchorBOrBuilder();

    // optional float ratio = 4;
    /**
     * <code>optional float ratio = 4;</code>.
     *
     * @return true, if successful
     */
    boolean hasRatio();
    
    /**
     * <code>optional float ratio = 4;</code>.
     *
     * @return the ratio
     */
    float getRatio();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGPulleyJointDef}
   */
  public static final class CGPulleyJointDef extends
      com.google.protobuf.GeneratedMessage
      implements CGPulleyJointDefOrBuilder {
    // Use CGPulleyJointDef.newBuilder() to construct.
    /**
     * Instantiates a new cG pulley joint def.
     *
     * @param builder the builder
     */
    private CGPulleyJointDef(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG pulley joint def.
     *
     * @param noInit the no init
     */
    private CGPulleyJointDef(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGPulleyJointDef defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGPulleyJointDef getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGPulleyJointDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG pulley joint def.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGPulleyJointDef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              collideConnected_ = input.readBool();
              break;
            }
            case 18: {
              com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = groundAnchorA_.toBuilder();
              }
              groundAnchorA_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGVector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groundAnchorA_);
                groundAnchorA_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = groundAnchorB_.toBuilder();
              }
              groundAnchorB_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGVector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groundAnchorB_);
                groundAnchorB_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              ratio_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.class, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGPulleyJointDef> PARSER =
        new com.google.protobuf.AbstractParser<CGPulleyJointDef>() {
      public CGPulleyJointDef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGPulleyJointDef(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGPulleyJointDef> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional bool collideConnected = 1;
    /** The Constant COLLIDECONNECTED_FIELD_NUMBER. */
    public static final int COLLIDECONNECTED_FIELD_NUMBER = 1;
    
    /** The collide connected_. */
    private boolean collideConnected_;
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasCollideConnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return the collide connected
     */
    public boolean getCollideConnected() {
      return collideConnected_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;
    /** The Constant GROUNDANCHORA_FIELD_NUMBER. */
    public static final int GROUNDANCHORA_FIELD_NUMBER = 2;
    
    /** The ground anchor a_. */
    private com.laex.cg2d.protobuf.GameObject.CGVector2 groundAnchorA_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
     *
     * @return true, if successful
     */
    public boolean hasGroundAnchorA() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
     *
     * @return the ground anchor a
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2 getGroundAnchorA() {
      return groundAnchorA_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
     *
     * @return the ground anchor a or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getGroundAnchorAOrBuilder() {
      return groundAnchorA_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;
    /** The Constant GROUNDANCHORB_FIELD_NUMBER. */
    public static final int GROUNDANCHORB_FIELD_NUMBER = 3;
    
    /** The ground anchor b_. */
    private com.laex.cg2d.protobuf.GameObject.CGVector2 groundAnchorB_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
     *
     * @return true, if successful
     */
    public boolean hasGroundAnchorB() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
     *
     * @return the ground anchor b
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2 getGroundAnchorB() {
      return groundAnchorB_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
     *
     * @return the ground anchor b or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getGroundAnchorBOrBuilder() {
      return groundAnchorB_;
    }

    // optional float ratio = 4;
    /** The Constant RATIO_FIELD_NUMBER. */
    public static final int RATIO_FIELD_NUMBER = 4;
    
    /** The ratio_. */
    private float ratio_;
    
    /**
     * <code>optional float ratio = 4;</code>.
     *
     * @return true, if successful
     */
    public boolean hasRatio() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    
    /**
     * <code>optional float ratio = 4;</code>.
     *
     * @return the ratio
     */
    public float getRatio() {
      return ratio_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      collideConnected_ = false;
      groundAnchorA_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      groundAnchorB_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      ratio_ = 0F;
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasGroundAnchorA()) {
        if (!getGroundAnchorA().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGroundAnchorB()) {
        if (!getGroundAnchorB().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, groundAnchorA_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, groundAnchorB_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, ratio_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, groundAnchorA_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, groundAnchorB_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, ratio_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg pulley joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg pulley joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg pulley joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg pulley joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg pulley joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg pulley joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg pulley joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg pulley joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg pulley joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg pulley joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGPulleyJointDef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGPulleyJointDefOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.class, com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGroundAnchorAFieldBuilder();
          getGroundAnchorBFieldBuilder();
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        collideConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (groundAnchorABuilder_ == null) {
          groundAnchorA_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          groundAnchorABuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (groundAnchorBBuilder_ == null) {
          groundAnchorB_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          groundAnchorBBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        ratio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef build() {
        com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef result = new com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.collideConnected_ = collideConnected_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (groundAnchorABuilder_ == null) {
          result.groundAnchorA_ = groundAnchorA_;
        } else {
          result.groundAnchorA_ = groundAnchorABuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (groundAnchorBBuilder_ == null) {
          result.groundAnchorB_ = groundAnchorB_;
        } else {
          result.groundAnchorB_ = groundAnchorBBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ratio_ = ratio_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef.getDefaultInstance()) return this;
        if (other.hasCollideConnected()) {
          setCollideConnected(other.getCollideConnected());
        }
        if (other.hasGroundAnchorA()) {
          mergeGroundAnchorA(other.getGroundAnchorA());
        }
        if (other.hasGroundAnchorB()) {
          mergeGroundAnchorB(other.getGroundAnchorB());
        }
        if (other.hasRatio()) {
          setRatio(other.getRatio());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        if (hasGroundAnchorA()) {
          if (!getGroundAnchorA().isInitialized()) {
            
            return false;
          }
        }
        if (hasGroundAnchorB()) {
          if (!getGroundAnchorB().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGPulleyJointDef) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional bool collideConnected = 1;
      /** The collide connected_. */
      private boolean collideConnected_ ;
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasCollideConnected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return the collide connected
       */
      public boolean getCollideConnected() {
        return collideConnected_;
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setCollideConnected(boolean value) {
        bitField0_ |= 0x00000001;
        collideConnected_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearCollideConnected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        collideConnected_ = false;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;
      /** The ground anchor a_. */
      private com.laex.cg2d.protobuf.GameObject.CGVector2 groundAnchorA_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      
      /** The ground anchor a builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> groundAnchorABuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
       *
       * @return true, if successful
       */
      public boolean hasGroundAnchorA() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
       *
       * @return the ground anchor a
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2 getGroundAnchorA() {
        if (groundAnchorABuilder_ == null) {
          return groundAnchorA_;
        } else {
          return groundAnchorABuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setGroundAnchorA(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (groundAnchorABuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groundAnchorA_ = value;
          onChanged();
        } else {
          groundAnchorABuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setGroundAnchorA(
          com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (groundAnchorABuilder_ == null) {
          groundAnchorA_ = builderForValue.build();
          onChanged();
        } else {
          groundAnchorABuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeGroundAnchorA(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (groundAnchorABuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              groundAnchorA_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            groundAnchorA_ =
              com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(groundAnchorA_).mergeFrom(value).buildPartial();
          } else {
            groundAnchorA_ = value;
          }
          onChanged();
        } else {
          groundAnchorABuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
       *
       * @return the builder
       */
      public Builder clearGroundAnchorA() {
        if (groundAnchorABuilder_ == null) {
          groundAnchorA_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          groundAnchorABuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
       *
       * @return the ground anchor a builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getGroundAnchorABuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getGroundAnchorAFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
       *
       * @return the ground anchor a or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getGroundAnchorAOrBuilder() {
        if (groundAnchorABuilder_ != null) {
          return groundAnchorABuilder_.getMessageOrBuilder();
        } else {
          return groundAnchorA_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorA = 2;</code>
       *
       * @return the ground anchor a field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> 
          getGroundAnchorAFieldBuilder() {
        if (groundAnchorABuilder_ == null) {
          groundAnchorABuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
                  groundAnchorA_,
                  getParentForChildren(),
                  isClean());
          groundAnchorA_ = null;
        }
        return groundAnchorABuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;
      /** The ground anchor b_. */
      private com.laex.cg2d.protobuf.GameObject.CGVector2 groundAnchorB_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      
      /** The ground anchor b builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> groundAnchorBBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
       *
       * @return true, if successful
       */
      public boolean hasGroundAnchorB() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
       *
       * @return the ground anchor b
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2 getGroundAnchorB() {
        if (groundAnchorBBuilder_ == null) {
          return groundAnchorB_;
        } else {
          return groundAnchorBBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setGroundAnchorB(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (groundAnchorBBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groundAnchorB_ = value;
          onChanged();
        } else {
          groundAnchorBBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setGroundAnchorB(
          com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (groundAnchorBBuilder_ == null) {
          groundAnchorB_ = builderForValue.build();
          onChanged();
        } else {
          groundAnchorBBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeGroundAnchorB(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (groundAnchorBBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              groundAnchorB_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            groundAnchorB_ =
              com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(groundAnchorB_).mergeFrom(value).buildPartial();
          } else {
            groundAnchorB_ = value;
          }
          onChanged();
        } else {
          groundAnchorBBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
       *
       * @return the builder
       */
      public Builder clearGroundAnchorB() {
        if (groundAnchorBBuilder_ == null) {
          groundAnchorB_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          groundAnchorBBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
       *
       * @return the ground anchor b builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getGroundAnchorBBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getGroundAnchorBFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
       *
       * @return the ground anchor b or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getGroundAnchorBOrBuilder() {
        if (groundAnchorBBuilder_ != null) {
          return groundAnchorBBuilder_.getMessageOrBuilder();
        } else {
          return groundAnchorB_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 groundAnchorB = 3;</code>
       *
       * @return the ground anchor b field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> 
          getGroundAnchorBFieldBuilder() {
        if (groundAnchorBBuilder_ == null) {
          groundAnchorBBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
                  groundAnchorB_,
                  getParentForChildren(),
                  isClean());
          groundAnchorB_ = null;
        }
        return groundAnchorBBuilder_;
      }

      // optional float ratio = 4;
      /** The ratio_. */
      private float ratio_ ;
      
      /**
       * <code>optional float ratio = 4;</code>.
       *
       * @return true, if successful
       */
      public boolean hasRatio() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional float ratio = 4;</code>.
       *
       * @return the ratio
       */
      public float getRatio() {
        return ratio_;
      }
      
      /**
       * <code>optional float ratio = 4;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setRatio(float value) {
        bitField0_ |= 0x00000008;
        ratio_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float ratio = 4;</code>.
       *
       * @return the builder
       */
      public Builder clearRatio() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ratio_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGPulleyJointDef)
    }

    static {
      defaultInstance = new CGPulleyJointDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGPulleyJointDef)
  }

  /**
   * The Interface CGFrictionJointDefOrBuilder.
   */
  public interface CGFrictionJointDefOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool collideConnected = 1;
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasCollideConnected();
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return the collide connected
     */
    boolean getCollideConnected();

    // optional float maxForce = 2;
    /**
     * <code>optional float maxForce = 2;</code>.
     *
     * @return true, if successful
     */
    boolean hasMaxForce();
    
    /**
     * <code>optional float maxForce = 2;</code>.
     *
     * @return the max force
     */
    float getMaxForce();

    // optional float maxTorque = 3;
    /**
     * <code>optional float maxTorque = 3;</code>.
     *
     * @return true, if successful
     */
    boolean hasMaxTorque();
    
    /**
     * <code>optional float maxTorque = 3;</code>.
     *
     * @return the max torque
     */
    float getMaxTorque();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGFrictionJointDef}
   */
  public static final class CGFrictionJointDef extends
      com.google.protobuf.GeneratedMessage
      implements CGFrictionJointDefOrBuilder {
    // Use CGFrictionJointDef.newBuilder() to construct.
    /**
     * Instantiates a new cG friction joint def.
     *
     * @param builder the builder
     */
    private CGFrictionJointDef(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG friction joint def.
     *
     * @param noInit the no init
     */
    private CGFrictionJointDef(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGFrictionJointDef defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGFrictionJointDef getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGFrictionJointDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG friction joint def.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGFrictionJointDef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              collideConnected_ = input.readBool();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              maxForce_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              maxTorque_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.class, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGFrictionJointDef> PARSER =
        new com.google.protobuf.AbstractParser<CGFrictionJointDef>() {
      public CGFrictionJointDef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGFrictionJointDef(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGFrictionJointDef> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional bool collideConnected = 1;
    /** The Constant COLLIDECONNECTED_FIELD_NUMBER. */
    public static final int COLLIDECONNECTED_FIELD_NUMBER = 1;
    
    /** The collide connected_. */
    private boolean collideConnected_;
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasCollideConnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return the collide connected
     */
    public boolean getCollideConnected() {
      return collideConnected_;
    }

    // optional float maxForce = 2;
    /** The Constant MAXFORCE_FIELD_NUMBER. */
    public static final int MAXFORCE_FIELD_NUMBER = 2;
    
    /** The max force_. */
    private float maxForce_;
    
    /**
     * <code>optional float maxForce = 2;</code>.
     *
     * @return true, if successful
     */
    public boolean hasMaxForce() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional float maxForce = 2;</code>.
     *
     * @return the max force
     */
    public float getMaxForce() {
      return maxForce_;
    }

    // optional float maxTorque = 3;
    /** The Constant MAXTORQUE_FIELD_NUMBER. */
    public static final int MAXTORQUE_FIELD_NUMBER = 3;
    
    /** The max torque_. */
    private float maxTorque_;
    
    /**
     * <code>optional float maxTorque = 3;</code>.
     *
     * @return true, if successful
     */
    public boolean hasMaxTorque() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional float maxTorque = 3;</code>.
     *
     * @return the max torque
     */
    public float getMaxTorque() {
      return maxTorque_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      collideConnected_ = false;
      maxForce_ = 0F;
      maxTorque_ = 0F;
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, maxForce_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, maxTorque_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, collideConnected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, maxForce_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, maxTorque_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg friction joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg friction joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg friction joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg friction joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg friction joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg friction joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg friction joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg friction joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg friction joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg friction joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGFrictionJointDef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGFrictionJointDefOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.class, com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        collideConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxForce_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxTorque_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef build() {
        com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef result = new com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.collideConnected_ = collideConnected_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxForce_ = maxForce_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxTorque_ = maxTorque_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef.getDefaultInstance()) return this;
        if (other.hasCollideConnected()) {
          setCollideConnected(other.getCollideConnected());
        }
        if (other.hasMaxForce()) {
          setMaxForce(other.getMaxForce());
        }
        if (other.hasMaxTorque()) {
          setMaxTorque(other.getMaxTorque());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGFrictionJointDef) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional bool collideConnected = 1;
      /** The collide connected_. */
      private boolean collideConnected_ ;
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasCollideConnected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return the collide connected
       */
      public boolean getCollideConnected() {
        return collideConnected_;
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setCollideConnected(boolean value) {
        bitField0_ |= 0x00000001;
        collideConnected_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearCollideConnected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        collideConnected_ = false;
        onChanged();
        return this;
      }

      // optional float maxForce = 2;
      /** The max force_. */
      private float maxForce_ ;
      
      /**
       * <code>optional float maxForce = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasMaxForce() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional float maxForce = 2;</code>.
       *
       * @return the max force
       */
      public float getMaxForce() {
        return maxForce_;
      }
      
      /**
       * <code>optional float maxForce = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setMaxForce(float value) {
        bitField0_ |= 0x00000002;
        maxForce_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float maxForce = 2;</code>.
       *
       * @return the builder
       */
      public Builder clearMaxForce() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxForce_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxTorque = 3;
      /** The max torque_. */
      private float maxTorque_ ;
      
      /**
       * <code>optional float maxTorque = 3;</code>.
       *
       * @return true, if successful
       */
      public boolean hasMaxTorque() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional float maxTorque = 3;</code>.
       *
       * @return the max torque
       */
      public float getMaxTorque() {
        return maxTorque_;
      }
      
      /**
       * <code>optional float maxTorque = 3;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setMaxTorque(float value) {
        bitField0_ |= 0x00000004;
        maxTorque_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float maxTorque = 3;</code>.
       *
       * @return the builder
       */
      public Builder clearMaxTorque() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxTorque_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGFrictionJointDef)
    }

    static {
      defaultInstance = new CGFrictionJointDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGFrictionJointDef)
  }

  /**
   * The Interface CGWeldJointDefOrBuilder.
   */
  public interface CGWeldJointDefOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool collideConnected = 1;
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasCollideConnected();
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return the collide connected
     */
    boolean getCollideConnected();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGWeldJointDef}
   */
  public static final class CGWeldJointDef extends
      com.google.protobuf.GeneratedMessage
      implements CGWeldJointDefOrBuilder {
    // Use CGWeldJointDef.newBuilder() to construct.
    /**
     * Instantiates a new cG weld joint def.
     *
     * @param builder the builder
     */
    private CGWeldJointDef(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG weld joint def.
     *
     * @param noInit the no init
     */
    private CGWeldJointDef(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGWeldJointDef defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGWeldJointDef getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGWeldJointDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG weld joint def.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGWeldJointDef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              collideConnected_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.class, com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGWeldJointDef> PARSER =
        new com.google.protobuf.AbstractParser<CGWeldJointDef>() {
      public CGWeldJointDef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGWeldJointDef(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGWeldJointDef> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional bool collideConnected = 1;
    /** The Constant COLLIDECONNECTED_FIELD_NUMBER. */
    public static final int COLLIDECONNECTED_FIELD_NUMBER = 1;
    
    /** The collide connected_. */
    private boolean collideConnected_;
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasCollideConnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional bool collideConnected = 1;</code>.
     *
     * @return the collide connected
     */
    public boolean getCollideConnected() {
      return collideConnected_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      collideConnected_ = false;
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, collideConnected_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, collideConnected_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg weld joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg weld joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg weld joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg weld joint def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg weld joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg weld joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg weld joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg weld joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg weld joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg weld joint def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGWeldJointDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGWeldJointDef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGWeldJointDefOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.class, com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        collideConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGWeldJointDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGWeldJointDef build() {
        com.laex.cg2d.protobuf.GameObject.CGWeldJointDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGWeldJointDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGWeldJointDef result = new com.laex.cg2d.protobuf.GameObject.CGWeldJointDef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.collideConnected_ = collideConnected_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGWeldJointDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGWeldJointDef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGWeldJointDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGWeldJointDef.getDefaultInstance()) return this;
        if (other.hasCollideConnected()) {
          setCollideConnected(other.getCollideConnected());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGWeldJointDef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGWeldJointDef) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional bool collideConnected = 1;
      /** The collide connected_. */
      private boolean collideConnected_ ;
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasCollideConnected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return the collide connected
       */
      public boolean getCollideConnected() {
        return collideConnected_;
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setCollideConnected(boolean value) {
        bitField0_ |= 0x00000001;
        collideConnected_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool collideConnected = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearCollideConnected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        collideConnected_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGWeldJointDef)
    }

    static {
      defaultInstance = new CGWeldJointDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGWeldJointDef)
  }

  /**
   * The Interface CGResourceFileOrBuilder.
   */
  public interface CGResourceFileOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string resourceFile = 1;
    /**
     * <code>optional string resourceFile = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasResourceFile();
    
    /**
     * <code>optional string resourceFile = 1;</code>.
     *
     * @return the resource file
     */
    java.lang.String getResourceFile();
    
    /**
     * <code>optional string resourceFile = 1;</code>.
     *
     * @return the resource file bytes
     */
    com.google.protobuf.ByteString
        getResourceFileBytes();

    // optional string resourceFileAbsolute = 2;
    /**
     * <code>optional string resourceFileAbsolute = 2;</code>.
     *
     * @return true, if successful
     */
    boolean hasResourceFileAbsolute();
    
    /**
     * <code>optional string resourceFileAbsolute = 2;</code>.
     *
     * @return the resource file absolute
     */
    java.lang.String getResourceFileAbsolute();
    
    /**
     * <code>optional string resourceFileAbsolute = 2;</code>.
     *
     * @return the resource file absolute bytes
     */
    com.google.protobuf.ByteString
        getResourceFileAbsoluteBytes();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGResourceFile}
   */
  public static final class CGResourceFile extends
      com.google.protobuf.GeneratedMessage
      implements CGResourceFileOrBuilder {
    // Use CGResourceFile.newBuilder() to construct.
    /**
     * Instantiates a new cG resource file.
     *
     * @param builder the builder
     */
    private CGResourceFile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG resource file.
     *
     * @param noInit the no init
     */
    private CGResourceFile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGResourceFile defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGResourceFile getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGResourceFile getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG resource file.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGResourceFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              resourceFile_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              resourceFileAbsolute_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGResourceFile_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGResourceFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGResourceFile.class, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGResourceFile> PARSER =
        new com.google.protobuf.AbstractParser<CGResourceFile>() {
      public CGResourceFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGResourceFile(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGResourceFile> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional string resourceFile = 1;
    /** The Constant RESOURCEFILE_FIELD_NUMBER. */
    public static final int RESOURCEFILE_FIELD_NUMBER = 1;
    
    /** The resource file_. */
    private java.lang.Object resourceFile_;
    
    /**
     * <code>optional string resourceFile = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasResourceFile() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional string resourceFile = 1;</code>.
     *
     * @return the resource file
     */
    public java.lang.String getResourceFile() {
      java.lang.Object ref = resourceFile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          resourceFile_ = s;
        }
        return s;
      }
    }
    
    /**
     * <code>optional string resourceFile = 1;</code>.
     *
     * @return the resource file bytes
     */
    public com.google.protobuf.ByteString
        getResourceFileBytes() {
      java.lang.Object ref = resourceFile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resourceFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string resourceFileAbsolute = 2;
    /** The Constant RESOURCEFILEABSOLUTE_FIELD_NUMBER. */
    public static final int RESOURCEFILEABSOLUTE_FIELD_NUMBER = 2;
    
    /** The resource file absolute_. */
    private java.lang.Object resourceFileAbsolute_;
    
    /**
     * <code>optional string resourceFileAbsolute = 2;</code>.
     *
     * @return true, if successful
     */
    public boolean hasResourceFileAbsolute() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional string resourceFileAbsolute = 2;</code>.
     *
     * @return the resource file absolute
     */
    public java.lang.String getResourceFileAbsolute() {
      java.lang.Object ref = resourceFileAbsolute_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          resourceFileAbsolute_ = s;
        }
        return s;
      }
    }
    
    /**
     * <code>optional string resourceFileAbsolute = 2;</code>.
     *
     * @return the resource file absolute bytes
     */
    public com.google.protobuf.ByteString
        getResourceFileAbsoluteBytes() {
      java.lang.Object ref = resourceFileAbsolute_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resourceFileAbsolute_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      resourceFile_ = "";
      resourceFileAbsolute_ = "";
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getResourceFileBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getResourceFileAbsoluteBytes());
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getResourceFileBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getResourceFileAbsoluteBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg resource file
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg resource file
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg resource file
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg resource file
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg resource file
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg resource file
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg resource file
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg resource file
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg resource file
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg resource file
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGResourceFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGResourceFile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGResourceFile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGResourceFile_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGResourceFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGResourceFile.class, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGResourceFile.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        resourceFile_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        resourceFileAbsolute_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGResourceFile_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFile getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFile build() {
        com.laex.cg2d.protobuf.GameObject.CGResourceFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFile buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGResourceFile result = new com.laex.cg2d.protobuf.GameObject.CGResourceFile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.resourceFile_ = resourceFile_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.resourceFileAbsolute_ = resourceFileAbsolute_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGResourceFile) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGResourceFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGResourceFile other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance()) return this;
        if (other.hasResourceFile()) {
          bitField0_ |= 0x00000001;
          resourceFile_ = other.resourceFile_;
          onChanged();
        }
        if (other.hasResourceFileAbsolute()) {
          bitField0_ |= 0x00000002;
          resourceFileAbsolute_ = other.resourceFileAbsolute_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGResourceFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGResourceFile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional string resourceFile = 1;
      /** The resource file_. */
      private java.lang.Object resourceFile_ = "";
      
      /**
       * <code>optional string resourceFile = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasResourceFile() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional string resourceFile = 1;</code>.
       *
       * @return the resource file
       */
      public java.lang.String getResourceFile() {
        java.lang.Object ref = resourceFile_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          resourceFile_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      
      /**
       * <code>optional string resourceFile = 1;</code>.
       *
       * @return the resource file bytes
       */
      public com.google.protobuf.ByteString
          getResourceFileBytes() {
        java.lang.Object ref = resourceFile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resourceFile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      /**
       * <code>optional string resourceFile = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setResourceFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        resourceFile_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string resourceFile = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearResourceFile() {
        bitField0_ = (bitField0_ & ~0x00000001);
        resourceFile_ = getDefaultInstance().getResourceFile();
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string resourceFile = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setResourceFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        resourceFile_ = value;
        onChanged();
        return this;
      }

      // optional string resourceFileAbsolute = 2;
      /** The resource file absolute_. */
      private java.lang.Object resourceFileAbsolute_ = "";
      
      /**
       * <code>optional string resourceFileAbsolute = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasResourceFileAbsolute() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional string resourceFileAbsolute = 2;</code>.
       *
       * @return the resource file absolute
       */
      public java.lang.String getResourceFileAbsolute() {
        java.lang.Object ref = resourceFileAbsolute_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          resourceFileAbsolute_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      
      /**
       * <code>optional string resourceFileAbsolute = 2;</code>.
       *
       * @return the resource file absolute bytes
       */
      public com.google.protobuf.ByteString
          getResourceFileAbsoluteBytes() {
        java.lang.Object ref = resourceFileAbsolute_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resourceFileAbsolute_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      /**
       * <code>optional string resourceFileAbsolute = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setResourceFileAbsolute(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        resourceFileAbsolute_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string resourceFileAbsolute = 2;</code>.
       *
       * @return the builder
       */
      public Builder clearResourceFileAbsolute() {
        bitField0_ = (bitField0_ & ~0x00000002);
        resourceFileAbsolute_ = getDefaultInstance().getResourceFileAbsolute();
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string resourceFileAbsolute = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setResourceFileAbsoluteBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        resourceFileAbsolute_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGResourceFile)
    }

    static {
      defaultInstance = new CGResourceFile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGResourceFile)
  }

  /**
   * The Interface CGEntityAnimationOrBuilder.
   */
  public interface CGEntityAnimationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string animationName = 1;
    /**
     * <code>optional string animationName = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasAnimationName();
    
    /**
     * <code>optional string animationName = 1;</code>.
     *
     * @return the animation name
     */
    java.lang.String getAnimationName();
    
    /**
     * <code>optional string animationName = 1;</code>.
     *
     * @return the animation name bytes
     */
    com.google.protobuf.ByteString
        getAnimationNameBytes();

    // optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
     *
     * @return true, if successful
     */
    boolean hasAnimationResourceFile();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
     *
     * @return the animation resource file
     */
    com.laex.cg2d.protobuf.GameObject.CGResourceFile getAnimationResourceFile();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
     *
     * @return the animation resource file or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getAnimationResourceFileOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
     *
     * @return true, if successful
     */
    boolean hasFixtureFile();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
     *
     * @return the fixture file
     */
    com.laex.cg2d.protobuf.GameObject.CGResourceFile getFixtureFile();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
     *
     * @return the fixture file or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getFixtureFileOrBuilder();

    // optional float animationDuration = 4;
    /**
     * <code>optional float animationDuration = 4;</code>.
     *
     * @return true, if successful
     */
    boolean hasAnimationDuration();
    
    /**
     * <code>optional float animationDuration = 4;</code>.
     *
     * @return the animation duration
     */
    float getAnimationDuration();

    // optional bool defaultAnimation = 5;
    /**
     * <code>optional bool defaultAnimation = 5;</code>.
     *
     * @return true, if successful
     */
    boolean hasDefaultAnimation();
    
    /**
     * <code>optional bool defaultAnimation = 5;</code>.
     *
     * @return the default animation
     */
    boolean getDefaultAnimation();

    // optional int32 cols = 6;
    /**
     * <code>optional int32 cols = 6;</code>.
     *
     * @return true, if successful
     */
    boolean hasCols();
    
    /**
     * <code>optional int32 cols = 6;</code>.
     *
     * @return the cols
     */
    int getCols();

    // optional int32 rows = 7;
    /**
     * <code>optional int32 rows = 7;</code>.
     *
     * @return true, if successful
     */
    boolean hasRows();
    
    /**
     * <code>optional int32 rows = 7;</code>.
     *
     * @return the rows
     */
    int getRows();

    // optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;</code>
     *
     * @return true, if successful
     */
    boolean hasCollisionType();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;</code>
     *
     * @return the collision type
     */
    com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType getCollisionType();

    // optional int32 shpX = 9;
    /**
     * <code>optional int32 shpX = 9;</code>.
     *
     * @return true, if successful
     */
    boolean hasShpX();
    
    /**
     * <code>optional int32 shpX = 9;</code>.
     *
     * @return the shp x
     */
    int getShpX();

    // optional int32 shpY = 10;
    /**
     * <code>optional int32 shpY = 10;</code>.
     *
     * @return true, if successful
     */
    boolean hasShpY();
    
    /**
     * <code>optional int32 shpY = 10;</code>.
     *
     * @return the shp y
     */
    int getShpY();

    // optional int32 shpWidth = 11;
    /**
     * <code>optional int32 shpWidth = 11;</code>.
     *
     * @return true, if successful
     */
    boolean hasShpWidth();
    
    /**
     * <code>optional int32 shpWidth = 11;</code>.
     *
     * @return the shp width
     */
    int getShpWidth();

    // optional int32 shpHeight = 12;
    /**
     * <code>optional int32 shpHeight = 12;</code>.
     *
     * @return true, if successful
     */
    boolean hasShpHeight();
    
    /**
     * <code>optional int32 shpHeight = 12;</code>.
     *
     * @return the shp height
     */
    int getShpHeight();

    // repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
     *
     * @return the vertices list
     */
    java.util.List<com.laex.cg2d.protobuf.GameObject.CGVector2> 
        getVerticesList();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
     *
     * @param index the index
     * @return the vertices
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2 getVertices(int index);
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
     *
     * @return the vertices count
     */
    int getVerticesCount();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
     *
     * @return the vertices or builder list
     */
    java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> 
        getVerticesOrBuilderList();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
     *
     * @param index the index
     * @return the vertices or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getVerticesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGEntityAnimation}
   */
  public static final class CGEntityAnimation extends
      com.google.protobuf.GeneratedMessage
      implements CGEntityAnimationOrBuilder {
    // Use CGEntityAnimation.newBuilder() to construct.
    /**
     * Instantiates a new cG entity animation.
     *
     * @param builder the builder
     */
    private CGEntityAnimation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG entity animation.
     *
     * @param noInit the no init
     */
    private CGEntityAnimation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGEntityAnimation defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGEntityAnimation getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGEntityAnimation getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG entity animation.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGEntityAnimation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              animationName_ = input.readBytes();
              break;
            }
            case 18: {
              com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = animationResourceFile_.toBuilder();
              }
              animationResourceFile_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGResourceFile.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(animationResourceFile_);
                animationResourceFile_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = fixtureFile_.toBuilder();
              }
              fixtureFile_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGResourceFile.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fixtureFile_);
                fixtureFile_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              animationDuration_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              defaultAnimation_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              cols_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              rows_ = input.readInt32();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType value = com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                collisionType_ = value;
              }
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              shpX_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              shpY_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              shpWidth_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              shpHeight_ = input.readInt32();
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                vertices_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGVector2>();
                mutable_bitField0_ |= 0x00001000;
              }
              vertices_.add(input.readMessage(com.laex.cg2d.protobuf.GameObject.CGVector2.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          vertices_ = java.util.Collections.unmodifiableList(vertices_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.class, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGEntityAnimation> PARSER =
        new com.google.protobuf.AbstractParser<CGEntityAnimation>() {
      public CGEntityAnimation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGEntityAnimation(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGEntityAnimation> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional string animationName = 1;
    /** The Constant ANIMATIONNAME_FIELD_NUMBER. */
    public static final int ANIMATIONNAME_FIELD_NUMBER = 1;
    
    /** The animation name_. */
    private java.lang.Object animationName_;
    
    /**
     * <code>optional string animationName = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasAnimationName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional string animationName = 1;</code>.
     *
     * @return the animation name
     */
    public java.lang.String getAnimationName() {
      java.lang.Object ref = animationName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          animationName_ = s;
        }
        return s;
      }
    }
    
    /**
     * <code>optional string animationName = 1;</code>.
     *
     * @return the animation name bytes
     */
    public com.google.protobuf.ByteString
        getAnimationNameBytes() {
      java.lang.Object ref = animationName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        animationName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;
    /** The Constant ANIMATIONRESOURCEFILE_FIELD_NUMBER. */
    public static final int ANIMATIONRESOURCEFILE_FIELD_NUMBER = 2;
    
    /** The animation resource file_. */
    private com.laex.cg2d.protobuf.GameObject.CGResourceFile animationResourceFile_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
     *
     * @return true, if successful
     */
    public boolean hasAnimationResourceFile() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
     *
     * @return the animation resource file
     */
    public com.laex.cg2d.protobuf.GameObject.CGResourceFile getAnimationResourceFile() {
      return animationResourceFile_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
     *
     * @return the animation resource file or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getAnimationResourceFileOrBuilder() {
      return animationResourceFile_;
    }

    // optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;
    /** The Constant FIXTUREFILE_FIELD_NUMBER. */
    public static final int FIXTUREFILE_FIELD_NUMBER = 3;
    
    /** The fixture file_. */
    private com.laex.cg2d.protobuf.GameObject.CGResourceFile fixtureFile_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
     *
     * @return true, if successful
     */
    public boolean hasFixtureFile() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
     *
     * @return the fixture file
     */
    public com.laex.cg2d.protobuf.GameObject.CGResourceFile getFixtureFile() {
      return fixtureFile_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
     *
     * @return the fixture file or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getFixtureFileOrBuilder() {
      return fixtureFile_;
    }

    // optional float animationDuration = 4;
    /** The Constant ANIMATIONDURATION_FIELD_NUMBER. */
    public static final int ANIMATIONDURATION_FIELD_NUMBER = 4;
    
    /** The animation duration_. */
    private float animationDuration_;
    
    /**
     * <code>optional float animationDuration = 4;</code>.
     *
     * @return true, if successful
     */
    public boolean hasAnimationDuration() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    
    /**
     * <code>optional float animationDuration = 4;</code>.
     *
     * @return the animation duration
     */
    public float getAnimationDuration() {
      return animationDuration_;
    }

    // optional bool defaultAnimation = 5;
    /** The Constant DEFAULTANIMATION_FIELD_NUMBER. */
    public static final int DEFAULTANIMATION_FIELD_NUMBER = 5;
    
    /** The default animation_. */
    private boolean defaultAnimation_;
    
    /**
     * <code>optional bool defaultAnimation = 5;</code>.
     *
     * @return true, if successful
     */
    public boolean hasDefaultAnimation() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    
    /**
     * <code>optional bool defaultAnimation = 5;</code>.
     *
     * @return the default animation
     */
    public boolean getDefaultAnimation() {
      return defaultAnimation_;
    }

    // optional int32 cols = 6;
    /** The Constant COLS_FIELD_NUMBER. */
    public static final int COLS_FIELD_NUMBER = 6;
    
    /** The cols_. */
    private int cols_;
    
    /**
     * <code>optional int32 cols = 6;</code>.
     *
     * @return true, if successful
     */
    public boolean hasCols() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    
    /**
     * <code>optional int32 cols = 6;</code>.
     *
     * @return the cols
     */
    public int getCols() {
      return cols_;
    }

    // optional int32 rows = 7;
    /** The Constant ROWS_FIELD_NUMBER. */
    public static final int ROWS_FIELD_NUMBER = 7;
    
    /** The rows_. */
    private int rows_;
    
    /**
     * <code>optional int32 rows = 7;</code>.
     *
     * @return true, if successful
     */
    public boolean hasRows() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    
    /**
     * <code>optional int32 rows = 7;</code>.
     *
     * @return the rows
     */
    public int getRows() {
      return rows_;
    }

    // optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;
    /** The Constant COLLISIONTYPE_FIELD_NUMBER. */
    public static final int COLLISIONTYPE_FIELD_NUMBER = 8;
    
    /** The collision type_. */
    private com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType collisionType_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;</code>
     *
     * @return true, if successful
     */
    public boolean hasCollisionType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;</code>
     *
     * @return the collision type
     */
    public com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType getCollisionType() {
      return collisionType_;
    }

    // optional int32 shpX = 9;
    /** The Constant SHPX_FIELD_NUMBER. */
    public static final int SHPX_FIELD_NUMBER = 9;
    
    /** The shp x_. */
    private int shpX_;
    
    /**
     * <code>optional int32 shpX = 9;</code>.
     *
     * @return true, if successful
     */
    public boolean hasShpX() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    
    /**
     * <code>optional int32 shpX = 9;</code>.
     *
     * @return the shp x
     */
    public int getShpX() {
      return shpX_;
    }

    // optional int32 shpY = 10;
    /** The Constant SHPY_FIELD_NUMBER. */
    public static final int SHPY_FIELD_NUMBER = 10;
    
    /** The shp y_. */
    private int shpY_;
    
    /**
     * <code>optional int32 shpY = 10;</code>.
     *
     * @return true, if successful
     */
    public boolean hasShpY() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    
    /**
     * <code>optional int32 shpY = 10;</code>.
     *
     * @return the shp y
     */
    public int getShpY() {
      return shpY_;
    }

    // optional int32 shpWidth = 11;
    /** The Constant SHPWIDTH_FIELD_NUMBER. */
    public static final int SHPWIDTH_FIELD_NUMBER = 11;
    
    /** The shp width_. */
    private int shpWidth_;
    
    /**
     * <code>optional int32 shpWidth = 11;</code>.
     *
     * @return true, if successful
     */
    public boolean hasShpWidth() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    
    /**
     * <code>optional int32 shpWidth = 11;</code>.
     *
     * @return the shp width
     */
    public int getShpWidth() {
      return shpWidth_;
    }

    // optional int32 shpHeight = 12;
    /** The Constant SHPHEIGHT_FIELD_NUMBER. */
    public static final int SHPHEIGHT_FIELD_NUMBER = 12;
    
    /** The shp height_. */
    private int shpHeight_;
    
    /**
     * <code>optional int32 shpHeight = 12;</code>.
     *
     * @return true, if successful
     */
    public boolean hasShpHeight() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    
    /**
     * <code>optional int32 shpHeight = 12;</code>.
     *
     * @return the shp height
     */
    public int getShpHeight() {
      return shpHeight_;
    }

    // repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;
    /** The Constant VERTICES_FIELD_NUMBER. */
    public static final int VERTICES_FIELD_NUMBER = 13;
    
    /** The vertices_. */
    private java.util.List<com.laex.cg2d.protobuf.GameObject.CGVector2> vertices_;
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
     *
     * @return the vertices list
     */
    public java.util.List<com.laex.cg2d.protobuf.GameObject.CGVector2> getVerticesList() {
      return vertices_;
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
     *
     * @return the vertices or builder list
     */
    public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> 
        getVerticesOrBuilderList() {
      return vertices_;
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
     *
     * @return the vertices count
     */
    public int getVerticesCount() {
      return vertices_.size();
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
     *
     * @param index the index
     * @return the vertices
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2 getVertices(int index) {
      return vertices_.get(index);
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
     *
     * @param index the index
     * @return the vertices or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getVerticesOrBuilder(
        int index) {
      return vertices_.get(index);
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      animationName_ = "";
      animationResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
      fixtureFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
      animationDuration_ = 0F;
      defaultAnimation_ = false;
      cols_ = 0;
      rows_ = 0;
      collisionType_ = com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType.NONE;
      shpX_ = 0;
      shpY_ = 0;
      shpWidth_ = 0;
      shpHeight_ = 0;
      vertices_ = java.util.Collections.emptyList();
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getVerticesCount(); i++) {
        if (!getVertices(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getAnimationNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, animationResourceFile_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, fixtureFile_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, animationDuration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, defaultAnimation_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, cols_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, rows_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, collisionType_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, shpX_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, shpY_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, shpWidth_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, shpHeight_);
      }
      for (int i = 0; i < vertices_.size(); i++) {
        output.writeMessage(13, vertices_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getAnimationNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, animationResourceFile_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fixtureFile_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, animationDuration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, defaultAnimation_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, cols_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, rows_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, collisionType_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, shpX_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, shpY_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, shpWidth_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, shpHeight_);
      }
      for (int i = 0; i < vertices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, vertices_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg entity animation
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg entity animation
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg entity animation
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg entity animation
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg entity animation
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg entity animation
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg entity animation
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg entity animation
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg entity animation
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg entity animation
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGEntityAnimation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGEntityAnimation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.class, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAnimationResourceFileFieldBuilder();
          getFixtureFileFieldBuilder();
          getVerticesFieldBuilder();
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        animationName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (animationResourceFileBuilder_ == null) {
          animationResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
        } else {
          animationResourceFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (fixtureFileBuilder_ == null) {
          fixtureFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
        } else {
          fixtureFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        animationDuration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        defaultAnimation_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        cols_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        rows_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        collisionType_ = com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType.NONE;
        bitField0_ = (bitField0_ & ~0x00000080);
        shpX_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        shpY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        shpWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        shpHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (verticesBuilder_ == null) {
          vertices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          verticesBuilder_.clear();
        }
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation build() {
        com.laex.cg2d.protobuf.GameObject.CGEntityAnimation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGEntityAnimation result = new com.laex.cg2d.protobuf.GameObject.CGEntityAnimation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.animationName_ = animationName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (animationResourceFileBuilder_ == null) {
          result.animationResourceFile_ = animationResourceFile_;
        } else {
          result.animationResourceFile_ = animationResourceFileBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (fixtureFileBuilder_ == null) {
          result.fixtureFile_ = fixtureFile_;
        } else {
          result.fixtureFile_ = fixtureFileBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.animationDuration_ = animationDuration_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.defaultAnimation_ = defaultAnimation_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.cols_ = cols_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rows_ = rows_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.collisionType_ = collisionType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.shpX_ = shpX_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.shpY_ = shpY_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.shpWidth_ = shpWidth_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.shpHeight_ = shpHeight_;
        if (verticesBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            vertices_ = java.util.Collections.unmodifiableList(vertices_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.vertices_ = vertices_;
        } else {
          result.vertices_ = verticesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGEntityAnimation) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGEntityAnimation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGEntityAnimation other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.getDefaultInstance()) return this;
        if (other.hasAnimationName()) {
          bitField0_ |= 0x00000001;
          animationName_ = other.animationName_;
          onChanged();
        }
        if (other.hasAnimationResourceFile()) {
          mergeAnimationResourceFile(other.getAnimationResourceFile());
        }
        if (other.hasFixtureFile()) {
          mergeFixtureFile(other.getFixtureFile());
        }
        if (other.hasAnimationDuration()) {
          setAnimationDuration(other.getAnimationDuration());
        }
        if (other.hasDefaultAnimation()) {
          setDefaultAnimation(other.getDefaultAnimation());
        }
        if (other.hasCols()) {
          setCols(other.getCols());
        }
        if (other.hasRows()) {
          setRows(other.getRows());
        }
        if (other.hasCollisionType()) {
          setCollisionType(other.getCollisionType());
        }
        if (other.hasShpX()) {
          setShpX(other.getShpX());
        }
        if (other.hasShpY()) {
          setShpY(other.getShpY());
        }
        if (other.hasShpWidth()) {
          setShpWidth(other.getShpWidth());
        }
        if (other.hasShpHeight()) {
          setShpHeight(other.getShpHeight());
        }
        if (verticesBuilder_ == null) {
          if (!other.vertices_.isEmpty()) {
            if (vertices_.isEmpty()) {
              vertices_ = other.vertices_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureVerticesIsMutable();
              vertices_.addAll(other.vertices_);
            }
            onChanged();
          }
        } else {
          if (!other.vertices_.isEmpty()) {
            if (verticesBuilder_.isEmpty()) {
              verticesBuilder_.dispose();
              verticesBuilder_ = null;
              vertices_ = other.vertices_;
              bitField0_ = (bitField0_ & ~0x00001000);
              verticesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVerticesFieldBuilder() : null;
            } else {
              verticesBuilder_.addAllMessages(other.vertices_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        for (int i = 0; i < getVerticesCount(); i++) {
          if (!getVertices(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGEntityAnimation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGEntityAnimation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional string animationName = 1;
      /** The animation name_. */
      private java.lang.Object animationName_ = "";
      
      /**
       * <code>optional string animationName = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasAnimationName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional string animationName = 1;</code>.
       *
       * @return the animation name
       */
      public java.lang.String getAnimationName() {
        java.lang.Object ref = animationName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          animationName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      
      /**
       * <code>optional string animationName = 1;</code>.
       *
       * @return the animation name bytes
       */
      public com.google.protobuf.ByteString
          getAnimationNameBytes() {
        java.lang.Object ref = animationName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          animationName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      /**
       * <code>optional string animationName = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setAnimationName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        animationName_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string animationName = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearAnimationName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        animationName_ = getDefaultInstance().getAnimationName();
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string animationName = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setAnimationNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        animationName_ = value;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;
      /** The animation resource file_. */
      private com.laex.cg2d.protobuf.GameObject.CGResourceFile animationResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
      
      /** The animation resource file builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> animationResourceFileBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
       *
       * @return true, if successful
       */
      public boolean hasAnimationResourceFile() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
       *
       * @return the animation resource file
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFile getAnimationResourceFile() {
        if (animationResourceFileBuilder_ == null) {
          return animationResourceFile_;
        } else {
          return animationResourceFileBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setAnimationResourceFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (animationResourceFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          animationResourceFile_ = value;
          onChanged();
        } else {
          animationResourceFileBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setAnimationResourceFile(
          com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder builderForValue) {
        if (animationResourceFileBuilder_ == null) {
          animationResourceFile_ = builderForValue.build();
          onChanged();
        } else {
          animationResourceFileBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeAnimationResourceFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (animationResourceFileBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              animationResourceFile_ != com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance()) {
            animationResourceFile_ =
              com.laex.cg2d.protobuf.GameObject.CGResourceFile.newBuilder(animationResourceFile_).mergeFrom(value).buildPartial();
          } else {
            animationResourceFile_ = value;
          }
          onChanged();
        } else {
          animationResourceFileBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
       *
       * @return the builder
       */
      public Builder clearAnimationResourceFile() {
        if (animationResourceFileBuilder_ == null) {
          animationResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
          onChanged();
        } else {
          animationResourceFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
       *
       * @return the animation resource file builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder getAnimationResourceFileBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAnimationResourceFileFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
       *
       * @return the animation resource file or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getAnimationResourceFileOrBuilder() {
        if (animationResourceFileBuilder_ != null) {
          return animationResourceFileBuilder_.getMessageOrBuilder();
        } else {
          return animationResourceFile_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile animationResourceFile = 2;</code>
       *
       * @return the animation resource file field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> 
          getAnimationResourceFileFieldBuilder() {
        if (animationResourceFileBuilder_ == null) {
          animationResourceFileBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder>(
                  animationResourceFile_,
                  getParentForChildren(),
                  isClean());
          animationResourceFile_ = null;
        }
        return animationResourceFileBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;
      /** The fixture file_. */
      private com.laex.cg2d.protobuf.GameObject.CGResourceFile fixtureFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
      
      /** The fixture file builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> fixtureFileBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
       *
       * @return true, if successful
       */
      public boolean hasFixtureFile() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
       *
       * @return the fixture file
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFile getFixtureFile() {
        if (fixtureFileBuilder_ == null) {
          return fixtureFile_;
        } else {
          return fixtureFileBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setFixtureFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (fixtureFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fixtureFile_ = value;
          onChanged();
        } else {
          fixtureFileBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setFixtureFile(
          com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder builderForValue) {
        if (fixtureFileBuilder_ == null) {
          fixtureFile_ = builderForValue.build();
          onChanged();
        } else {
          fixtureFileBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeFixtureFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (fixtureFileBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              fixtureFile_ != com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance()) {
            fixtureFile_ =
              com.laex.cg2d.protobuf.GameObject.CGResourceFile.newBuilder(fixtureFile_).mergeFrom(value).buildPartial();
          } else {
            fixtureFile_ = value;
          }
          onChanged();
        } else {
          fixtureFileBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
       *
       * @return the builder
       */
      public Builder clearFixtureFile() {
        if (fixtureFileBuilder_ == null) {
          fixtureFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
          onChanged();
        } else {
          fixtureFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
       *
       * @return the fixture file builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder getFixtureFileBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getFixtureFileFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
       *
       * @return the fixture file or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getFixtureFileOrBuilder() {
        if (fixtureFileBuilder_ != null) {
          return fixtureFileBuilder_.getMessageOrBuilder();
        } else {
          return fixtureFile_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile fixtureFile = 3;</code>
       *
       * @return the fixture file field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> 
          getFixtureFileFieldBuilder() {
        if (fixtureFileBuilder_ == null) {
          fixtureFileBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder>(
                  fixtureFile_,
                  getParentForChildren(),
                  isClean());
          fixtureFile_ = null;
        }
        return fixtureFileBuilder_;
      }

      // optional float animationDuration = 4;
      /** The animation duration_. */
      private float animationDuration_ ;
      
      /**
       * <code>optional float animationDuration = 4;</code>.
       *
       * @return true, if successful
       */
      public boolean hasAnimationDuration() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional float animationDuration = 4;</code>.
       *
       * @return the animation duration
       */
      public float getAnimationDuration() {
        return animationDuration_;
      }
      
      /**
       * <code>optional float animationDuration = 4;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setAnimationDuration(float value) {
        bitField0_ |= 0x00000008;
        animationDuration_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float animationDuration = 4;</code>.
       *
       * @return the builder
       */
      public Builder clearAnimationDuration() {
        bitField0_ = (bitField0_ & ~0x00000008);
        animationDuration_ = 0F;
        onChanged();
        return this;
      }

      // optional bool defaultAnimation = 5;
      /** The default animation_. */
      private boolean defaultAnimation_ ;
      
      /**
       * <code>optional bool defaultAnimation = 5;</code>.
       *
       * @return true, if successful
       */
      public boolean hasDefaultAnimation() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      
      /**
       * <code>optional bool defaultAnimation = 5;</code>.
       *
       * @return the default animation
       */
      public boolean getDefaultAnimation() {
        return defaultAnimation_;
      }
      
      /**
       * <code>optional bool defaultAnimation = 5;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setDefaultAnimation(boolean value) {
        bitField0_ |= 0x00000010;
        defaultAnimation_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool defaultAnimation = 5;</code>.
       *
       * @return the builder
       */
      public Builder clearDefaultAnimation() {
        bitField0_ = (bitField0_ & ~0x00000010);
        defaultAnimation_ = false;
        onChanged();
        return this;
      }

      // optional int32 cols = 6;
      /** The cols_. */
      private int cols_ ;
      
      /**
       * <code>optional int32 cols = 6;</code>.
       *
       * @return true, if successful
       */
      public boolean hasCols() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      
      /**
       * <code>optional int32 cols = 6;</code>.
       *
       * @return the cols
       */
      public int getCols() {
        return cols_;
      }
      
      /**
       * <code>optional int32 cols = 6;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setCols(int value) {
        bitField0_ |= 0x00000020;
        cols_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional int32 cols = 6;</code>.
       *
       * @return the builder
       */
      public Builder clearCols() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cols_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rows = 7;
      /** The rows_. */
      private int rows_ ;
      
      /**
       * <code>optional int32 rows = 7;</code>.
       *
       * @return true, if successful
       */
      public boolean hasRows() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      
      /**
       * <code>optional int32 rows = 7;</code>.
       *
       * @return the rows
       */
      public int getRows() {
        return rows_;
      }
      
      /**
       * <code>optional int32 rows = 7;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setRows(int value) {
        bitField0_ |= 0x00000040;
        rows_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional int32 rows = 7;</code>.
       *
       * @return the builder
       */
      public Builder clearRows() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rows_ = 0;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;
      /** The collision type_. */
      private com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType collisionType_ = com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType.NONE;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;</code>
       *
       * @return true, if successful
       */
      public boolean hasCollisionType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;</code>
       *
       * @return the collision type
       */
      public com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType getCollisionType() {
        return collisionType_;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setCollisionType(com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        collisionType_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGEntityCollisionType collisionType = 8;</code>
       *
       * @return the builder
       */
      public Builder clearCollisionType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        collisionType_ = com.laex.cg2d.protobuf.GameObject.CGEntityCollisionType.NONE;
        onChanged();
        return this;
      }

      // optional int32 shpX = 9;
      /** The shp x_. */
      private int shpX_ ;
      
      /**
       * <code>optional int32 shpX = 9;</code>.
       *
       * @return true, if successful
       */
      public boolean hasShpX() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      
      /**
       * <code>optional int32 shpX = 9;</code>.
       *
       * @return the shp x
       */
      public int getShpX() {
        return shpX_;
      }
      
      /**
       * <code>optional int32 shpX = 9;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setShpX(int value) {
        bitField0_ |= 0x00000100;
        shpX_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional int32 shpX = 9;</code>.
       *
       * @return the builder
       */
      public Builder clearShpX() {
        bitField0_ = (bitField0_ & ~0x00000100);
        shpX_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shpY = 10;
      /** The shp y_. */
      private int shpY_ ;
      
      /**
       * <code>optional int32 shpY = 10;</code>.
       *
       * @return true, if successful
       */
      public boolean hasShpY() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      
      /**
       * <code>optional int32 shpY = 10;</code>.
       *
       * @return the shp y
       */
      public int getShpY() {
        return shpY_;
      }
      
      /**
       * <code>optional int32 shpY = 10;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setShpY(int value) {
        bitField0_ |= 0x00000200;
        shpY_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional int32 shpY = 10;</code>.
       *
       * @return the builder
       */
      public Builder clearShpY() {
        bitField0_ = (bitField0_ & ~0x00000200);
        shpY_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shpWidth = 11;
      /** The shp width_. */
      private int shpWidth_ ;
      
      /**
       * <code>optional int32 shpWidth = 11;</code>.
       *
       * @return true, if successful
       */
      public boolean hasShpWidth() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      
      /**
       * <code>optional int32 shpWidth = 11;</code>.
       *
       * @return the shp width
       */
      public int getShpWidth() {
        return shpWidth_;
      }
      
      /**
       * <code>optional int32 shpWidth = 11;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setShpWidth(int value) {
        bitField0_ |= 0x00000400;
        shpWidth_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional int32 shpWidth = 11;</code>.
       *
       * @return the builder
       */
      public Builder clearShpWidth() {
        bitField0_ = (bitField0_ & ~0x00000400);
        shpWidth_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shpHeight = 12;
      /** The shp height_. */
      private int shpHeight_ ;
      
      /**
       * <code>optional int32 shpHeight = 12;</code>.
       *
       * @return true, if successful
       */
      public boolean hasShpHeight() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      
      /**
       * <code>optional int32 shpHeight = 12;</code>.
       *
       * @return the shp height
       */
      public int getShpHeight() {
        return shpHeight_;
      }
      
      /**
       * <code>optional int32 shpHeight = 12;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setShpHeight(int value) {
        bitField0_ |= 0x00000800;
        shpHeight_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional int32 shpHeight = 12;</code>.
       *
       * @return the builder
       */
      public Builder clearShpHeight() {
        bitField0_ = (bitField0_ & ~0x00000800);
        shpHeight_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;
      /** The vertices_. */
      private java.util.List<com.laex.cg2d.protobuf.GameObject.CGVector2> vertices_ =
        java.util.Collections.emptyList();
      
      /**
       * Ensure vertices is mutable.
       */
      private void ensureVerticesIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          vertices_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGVector2>(vertices_);
          bitField0_ |= 0x00001000;
         }
      }

      /** The vertices builder_. */
      private com.google.protobuf.RepeatedFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> verticesBuilder_;

      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @return the vertices list
       */
      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGVector2> getVerticesList() {
        if (verticesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vertices_);
        } else {
          return verticesBuilder_.getMessageList();
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @return the vertices count
       */
      public int getVerticesCount() {
        if (verticesBuilder_ == null) {
          return vertices_.size();
        } else {
          return verticesBuilder_.getCount();
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @param index the index
       * @return the vertices
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2 getVertices(int index) {
        if (verticesBuilder_ == null) {
          return vertices_.get(index);
        } else {
          return verticesBuilder_.getMessage(index);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @param index the index
       * @param value the value
       * @return the builder
       */
      public Builder setVertices(
          int index, com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (verticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVerticesIsMutable();
          vertices_.set(index, value);
          onChanged();
        } else {
          verticesBuilder_.setMessage(index, value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @param index the index
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setVertices(
          int index, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.set(index, builderForValue.build());
          onChanged();
        } else {
          verticesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder addVertices(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (verticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVerticesIsMutable();
          vertices_.add(value);
          onChanged();
        } else {
          verticesBuilder_.addMessage(value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @param index the index
       * @param value the value
       * @return the builder
       */
      public Builder addVertices(
          int index, com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (verticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVerticesIsMutable();
          vertices_.add(index, value);
          onChanged();
        } else {
          verticesBuilder_.addMessage(index, value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder addVertices(
          com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.add(builderForValue.build());
          onChanged();
        } else {
          verticesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @param index the index
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder addVertices(
          int index, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.add(index, builderForValue.build());
          onChanged();
        } else {
          verticesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @param values the values
       * @return the builder
       */
      public Builder addAllVertices(
          java.lang.Iterable<? extends com.laex.cg2d.protobuf.GameObject.CGVector2> values) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          super.addAll(values, vertices_);
          onChanged();
        } else {
          verticesBuilder_.addAllMessages(values);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @return the builder
       */
      public Builder clearVertices() {
        if (verticesBuilder_ == null) {
          vertices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          verticesBuilder_.clear();
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @param index the index
       * @return the builder
       */
      public Builder removeVertices(int index) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.remove(index);
          onChanged();
        } else {
          verticesBuilder_.remove(index);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @param index the index
       * @return the vertices builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getVerticesBuilder(
          int index) {
        return getVerticesFieldBuilder().getBuilder(index);
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @param index the index
       * @return the vertices or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getVerticesOrBuilder(
          int index) {
        if (verticesBuilder_ == null) {
          return vertices_.get(index);  } else {
          return verticesBuilder_.getMessageOrBuilder(index);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @return the vertices or builder list
       */
      public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> 
           getVerticesOrBuilderList() {
        if (verticesBuilder_ != null) {
          return verticesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vertices_);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @return the com.laex.cg2d.protobuf. game object. cg vector2. builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder addVerticesBuilder() {
        return getVerticesFieldBuilder().addBuilder(
            com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance());
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @param index the index
       * @return the com.laex.cg2d.protobuf. game object. cg vector2. builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder addVerticesBuilder(
          int index) {
        return getVerticesFieldBuilder().addBuilder(
            index, com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance());
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGVector2 vertices = 13;</code>
       *
       * @return the vertices builder list
       */
      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGVector2.Builder> 
           getVerticesBuilderList() {
        return getVerticesFieldBuilder().getBuilderList();
      }
      
      /**
       * Gets the vertices field builder.
       *
       * @return the vertices field builder
       */
      private com.google.protobuf.RepeatedFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> 
          getVerticesFieldBuilder() {
        if (verticesBuilder_ == null) {
          verticesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
                  vertices_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          vertices_ = null;
        }
        return verticesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGEntityAnimation)
    }

    static {
      defaultInstance = new CGEntityAnimation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGEntityAnimation)
  }

  /**
   * The Interface CGEntityOrBuilder.
   */
  public interface CGEntityOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string internalName = 1;
    /**
     * <code>optional string internalName = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasInternalName();
    
    /**
     * <code>optional string internalName = 1;</code>.
     *
     * @return the internal name
     */
    java.lang.String getInternalName();
    
    /**
     * <code>optional string internalName = 1;</code>.
     *
     * @return the internal name bytes
     */
    com.google.protobuf.ByteString
        getInternalNameBytes();

    // repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
     *
     * @return the animations list
     */
    java.util.List<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation> 
        getAnimationsList();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
     *
     * @param index the index
     * @return the animations
     */
    com.laex.cg2d.protobuf.GameObject.CGEntityAnimation getAnimations(int index);
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
     *
     * @return the animations count
     */
    int getAnimationsCount();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
     *
     * @return the animations or builder list
     */
    java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder> 
        getAnimationsOrBuilderList();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
     *
     * @param index the index
     * @return the animations or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder getAnimationsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGEntity}
   */
  public static final class CGEntity extends
      com.google.protobuf.GeneratedMessage
      implements CGEntityOrBuilder {
    // Use CGEntity.newBuilder() to construct.
    /**
     * Instantiates a new cG entity.
     *
     * @param builder the builder
     */
    private CGEntity(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG entity.
     *
     * @param noInit the no init
     */
    private CGEntity(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGEntity defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGEntity getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGEntity getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG entity.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGEntity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              internalName_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                animations_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation>();
                mutable_bitField0_ |= 0x00000002;
              }
              animations_.add(input.readMessage(com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          animations_ = java.util.Collections.unmodifiableList(animations_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntity_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGEntity.class, com.laex.cg2d.protobuf.GameObject.CGEntity.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGEntity> PARSER =
        new com.google.protobuf.AbstractParser<CGEntity>() {
      public CGEntity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGEntity(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGEntity> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional string internalName = 1;
    /** The Constant INTERNALNAME_FIELD_NUMBER. */
    public static final int INTERNALNAME_FIELD_NUMBER = 1;
    
    /** The internal name_. */
    private java.lang.Object internalName_;
    
    /**
     * <code>optional string internalName = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasInternalName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional string internalName = 1;</code>.
     *
     * @return the internal name
     */
    public java.lang.String getInternalName() {
      java.lang.Object ref = internalName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          internalName_ = s;
        }
        return s;
      }
    }
    
    /**
     * <code>optional string internalName = 1;</code>.
     *
     * @return the internal name bytes
     */
    public com.google.protobuf.ByteString
        getInternalNameBytes() {
      java.lang.Object ref = internalName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        internalName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;
    /** The Constant ANIMATIONS_FIELD_NUMBER. */
    public static final int ANIMATIONS_FIELD_NUMBER = 2;
    
    /** The animations_. */
    private java.util.List<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation> animations_;
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
     *
     * @return the animations list
     */
    public java.util.List<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation> getAnimationsList() {
      return animations_;
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
     *
     * @return the animations or builder list
     */
    public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder> 
        getAnimationsOrBuilderList() {
      return animations_;
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
     *
     * @return the animations count
     */
    public int getAnimationsCount() {
      return animations_.size();
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
     *
     * @param index the index
     * @return the animations
     */
    public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation getAnimations(int index) {
      return animations_.get(index);
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
     *
     * @param index the index
     * @return the animations or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder getAnimationsOrBuilder(
        int index) {
      return animations_.get(index);
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      internalName_ = "";
      animations_ = java.util.Collections.emptyList();
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getAnimationsCount(); i++) {
        if (!getAnimations(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getInternalNameBytes());
      }
      for (int i = 0; i < animations_.size(); i++) {
        output.writeMessage(2, animations_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getInternalNameBytes());
      }
      for (int i = 0; i < animations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, animations_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg entity
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg entity
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg entity
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg entity
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg entity
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg entity
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg entity
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg entity
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg entity
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg entity
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGEntity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGEntity prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGEntity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGEntityOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntity_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGEntity.class, com.laex.cg2d.protobuf.GameObject.CGEntity.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGEntity.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAnimationsFieldBuilder();
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        internalName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (animationsBuilder_ == null) {
          animations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          animationsBuilder_.clear();
        }
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGEntity_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGEntity getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGEntity.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGEntity build() {
        com.laex.cg2d.protobuf.GameObject.CGEntity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGEntity buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGEntity result = new com.laex.cg2d.protobuf.GameObject.CGEntity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.internalName_ = internalName_;
        if (animationsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            animations_ = java.util.Collections.unmodifiableList(animations_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.animations_ = animations_;
        } else {
          result.animations_ = animationsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGEntity) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGEntity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGEntity other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGEntity.getDefaultInstance()) return this;
        if (other.hasInternalName()) {
          bitField0_ |= 0x00000001;
          internalName_ = other.internalName_;
          onChanged();
        }
        if (animationsBuilder_ == null) {
          if (!other.animations_.isEmpty()) {
            if (animations_.isEmpty()) {
              animations_ = other.animations_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAnimationsIsMutable();
              animations_.addAll(other.animations_);
            }
            onChanged();
          }
        } else {
          if (!other.animations_.isEmpty()) {
            if (animationsBuilder_.isEmpty()) {
              animationsBuilder_.dispose();
              animationsBuilder_ = null;
              animations_ = other.animations_;
              bitField0_ = (bitField0_ & ~0x00000002);
              animationsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAnimationsFieldBuilder() : null;
            } else {
              animationsBuilder_.addAllMessages(other.animations_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        for (int i = 0; i < getAnimationsCount(); i++) {
          if (!getAnimations(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGEntity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGEntity) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional string internalName = 1;
      /** The internal name_. */
      private java.lang.Object internalName_ = "";
      
      /**
       * <code>optional string internalName = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasInternalName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional string internalName = 1;</code>.
       *
       * @return the internal name
       */
      public java.lang.String getInternalName() {
        java.lang.Object ref = internalName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          internalName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      
      /**
       * <code>optional string internalName = 1;</code>.
       *
       * @return the internal name bytes
       */
      public com.google.protobuf.ByteString
          getInternalNameBytes() {
        java.lang.Object ref = internalName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          internalName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      /**
       * <code>optional string internalName = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setInternalName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        internalName_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string internalName = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearInternalName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalName_ = getDefaultInstance().getInternalName();
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string internalName = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setInternalNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        internalName_ = value;
        onChanged();
        return this;
      }

      // repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;
      /** The animations_. */
      private java.util.List<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation> animations_ =
        java.util.Collections.emptyList();
      
      /**
       * Ensure animations is mutable.
       */
      private void ensureAnimationsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          animations_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation>(animations_);
          bitField0_ |= 0x00000002;
         }
      }

      /** The animations builder_. */
      private com.google.protobuf.RepeatedFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGEntityAnimation, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder, com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder> animationsBuilder_;

      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @return the animations list
       */
      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation> getAnimationsList() {
        if (animationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(animations_);
        } else {
          return animationsBuilder_.getMessageList();
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @return the animations count
       */
      public int getAnimationsCount() {
        if (animationsBuilder_ == null) {
          return animations_.size();
        } else {
          return animationsBuilder_.getCount();
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @param index the index
       * @return the animations
       */
      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation getAnimations(int index) {
        if (animationsBuilder_ == null) {
          return animations_.get(index);
        } else {
          return animationsBuilder_.getMessage(index);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @param index the index
       * @param value the value
       * @return the builder
       */
      public Builder setAnimations(
          int index, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation value) {
        if (animationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnimationsIsMutable();
          animations_.set(index, value);
          onChanged();
        } else {
          animationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @param index the index
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setAnimations(
          int index, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder builderForValue) {
        if (animationsBuilder_ == null) {
          ensureAnimationsIsMutable();
          animations_.set(index, builderForValue.build());
          onChanged();
        } else {
          animationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder addAnimations(com.laex.cg2d.protobuf.GameObject.CGEntityAnimation value) {
        if (animationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnimationsIsMutable();
          animations_.add(value);
          onChanged();
        } else {
          animationsBuilder_.addMessage(value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @param index the index
       * @param value the value
       * @return the builder
       */
      public Builder addAnimations(
          int index, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation value) {
        if (animationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnimationsIsMutable();
          animations_.add(index, value);
          onChanged();
        } else {
          animationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder addAnimations(
          com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder builderForValue) {
        if (animationsBuilder_ == null) {
          ensureAnimationsIsMutable();
          animations_.add(builderForValue.build());
          onChanged();
        } else {
          animationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @param index the index
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder addAnimations(
          int index, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder builderForValue) {
        if (animationsBuilder_ == null) {
          ensureAnimationsIsMutable();
          animations_.add(index, builderForValue.build());
          onChanged();
        } else {
          animationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @param values the values
       * @return the builder
       */
      public Builder addAllAnimations(
          java.lang.Iterable<? extends com.laex.cg2d.protobuf.GameObject.CGEntityAnimation> values) {
        if (animationsBuilder_ == null) {
          ensureAnimationsIsMutable();
          super.addAll(values, animations_);
          onChanged();
        } else {
          animationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @return the builder
       */
      public Builder clearAnimations() {
        if (animationsBuilder_ == null) {
          animations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          animationsBuilder_.clear();
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @param index the index
       * @return the builder
       */
      public Builder removeAnimations(int index) {
        if (animationsBuilder_ == null) {
          ensureAnimationsIsMutable();
          animations_.remove(index);
          onChanged();
        } else {
          animationsBuilder_.remove(index);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @param index the index
       * @return the animations builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder getAnimationsBuilder(
          int index) {
        return getAnimationsFieldBuilder().getBuilder(index);
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @param index the index
       * @return the animations or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder getAnimationsOrBuilder(
          int index) {
        if (animationsBuilder_ == null) {
          return animations_.get(index);  } else {
          return animationsBuilder_.getMessageOrBuilder(index);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @return the animations or builder list
       */
      public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder> 
           getAnimationsOrBuilderList() {
        if (animationsBuilder_ != null) {
          return animationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(animations_);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @return the com.laex.cg2d.protobuf. game object. cg entity animation. builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder addAnimationsBuilder() {
        return getAnimationsFieldBuilder().addBuilder(
            com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.getDefaultInstance());
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @param index the index
       * @return the com.laex.cg2d.protobuf. game object. cg entity animation. builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder addAnimationsBuilder(
          int index) {
        return getAnimationsFieldBuilder().addBuilder(
            index, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.getDefaultInstance());
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGEntityAnimation animations = 2;</code>
       *
       * @return the animations builder list
       */
      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder> 
           getAnimationsBuilderList() {
        return getAnimationsFieldBuilder().getBuilderList();
      }
      
      /**
       * Gets the animations field builder.
       *
       * @return the animations field builder
       */
      private com.google.protobuf.RepeatedFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGEntityAnimation, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder, com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder> 
          getAnimationsFieldBuilder() {
        if (animationsBuilder_ == null) {
          animationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGEntityAnimation, com.laex.cg2d.protobuf.GameObject.CGEntityAnimation.Builder, com.laex.cg2d.protobuf.GameObject.CGEntityAnimationOrBuilder>(
                  animations_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          animations_ = null;
        }
        return animationsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGEntity)
    }

    static {
      defaultInstance = new CGEntity(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGEntity)
  }

  /**
   * The Interface CGBoundsOrBuilder.
   */
  public interface CGBoundsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional float x = 1;
    /**
     * <code>optional float x = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasX();
    
    /**
     * <code>optional float x = 1;</code>.
     *
     * @return the x
     */
    float getX();

    // optional float y = 2;
    /**
     * <code>optional float y = 2;</code>.
     *
     * @return true, if successful
     */
    boolean hasY();
    
    /**
     * <code>optional float y = 2;</code>.
     *
     * @return the y
     */
    float getY();

    // optional float width = 3;
    /**
     * <code>optional float width = 3;</code>.
     *
     * @return true, if successful
     */
    boolean hasWidth();
    
    /**
     * <code>optional float width = 3;</code>.
     *
     * @return the width
     */
    float getWidth();

    // optional float height = 4;
    /**
     * <code>optional float height = 4;</code>.
     *
     * @return true, if successful
     */
    boolean hasHeight();
    
    /**
     * <code>optional float height = 4;</code>.
     *
     * @return the height
     */
    float getHeight();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGBounds}
   */
  public static final class CGBounds extends
      com.google.protobuf.GeneratedMessage
      implements CGBoundsOrBuilder {
    // Use CGBounds.newBuilder() to construct.
    /**
     * Instantiates a new cG bounds.
     *
     * @param builder the builder
     */
    private CGBounds(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG bounds.
     *
     * @param noInit the no init
     */
    private CGBounds(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGBounds defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGBounds getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGBounds getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG bounds.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGBounds(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              width_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              height_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBounds_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBounds_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGBounds.class, com.laex.cg2d.protobuf.GameObject.CGBounds.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGBounds> PARSER =
        new com.google.protobuf.AbstractParser<CGBounds>() {
      public CGBounds parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGBounds(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGBounds> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional float x = 1;
    /** The Constant X_FIELD_NUMBER. */
    public static final int X_FIELD_NUMBER = 1;
    
    /** The x_. */
    private float x_;
    
    /**
     * <code>optional float x = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional float x = 1;</code>.
     *
     * @return the x
     */
    public float getX() {
      return x_;
    }

    // optional float y = 2;
    /** The Constant Y_FIELD_NUMBER. */
    public static final int Y_FIELD_NUMBER = 2;
    
    /** The y_. */
    private float y_;
    
    /**
     * <code>optional float y = 2;</code>.
     *
     * @return true, if successful
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional float y = 2;</code>.
     *
     * @return the y
     */
    public float getY() {
      return y_;
    }

    // optional float width = 3;
    /** The Constant WIDTH_FIELD_NUMBER. */
    public static final int WIDTH_FIELD_NUMBER = 3;
    
    /** The width_. */
    private float width_;
    
    /**
     * <code>optional float width = 3;</code>.
     *
     * @return true, if successful
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional float width = 3;</code>.
     *
     * @return the width
     */
    public float getWidth() {
      return width_;
    }

    // optional float height = 4;
    /** The Constant HEIGHT_FIELD_NUMBER. */
    public static final int HEIGHT_FIELD_NUMBER = 4;
    
    /** The height_. */
    private float height_;
    
    /**
     * <code>optional float height = 4;</code>.
     *
     * @return true, if successful
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    
    /**
     * <code>optional float height = 4;</code>.
     *
     * @return the height
     */
    public float getHeight() {
      return height_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      x_ = 0F;
      y_ = 0F;
      width_ = 0F;
      height_ = 0F;
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, width_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, height_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, width_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, height_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg bounds
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg bounds
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg bounds
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg bounds
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg bounds
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg bounds
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg bounds
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg bounds
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg bounds
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg bounds
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBounds parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGBounds prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGBounds}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBounds_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBounds_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGBounds.class, com.laex.cg2d.protobuf.GameObject.CGBounds.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGBounds.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBounds_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGBounds getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGBounds build() {
        com.laex.cg2d.protobuf.GameObject.CGBounds result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGBounds buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGBounds result = new com.laex.cg2d.protobuf.GameObject.CGBounds(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.height_ = height_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGBounds) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGBounds)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGBounds other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGBounds parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGBounds) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional float x = 1;
      /** The x_. */
      private float x_ ;
      
      /**
       * <code>optional float x = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional float x = 1;</code>.
       *
       * @return the x
       */
      public float getX() {
        return x_;
      }
      
      /**
       * <code>optional float x = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float x = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      // optional float y = 2;
      /** The y_. */
      private float y_ ;
      
      /**
       * <code>optional float y = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional float y = 2;</code>.
       *
       * @return the y
       */
      public float getY() {
        return y_;
      }
      
      /**
       * <code>optional float y = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float y = 2;</code>.
       *
       * @return the builder
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      // optional float width = 3;
      /** The width_. */
      private float width_ ;
      
      /**
       * <code>optional float width = 3;</code>.
       *
       * @return true, if successful
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional float width = 3;</code>.
       *
       * @return the width
       */
      public float getWidth() {
        return width_;
      }
      
      /**
       * <code>optional float width = 3;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setWidth(float value) {
        bitField0_ |= 0x00000004;
        width_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float width = 3;</code>.
       *
       * @return the builder
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        width_ = 0F;
        onChanged();
        return this;
      }

      // optional float height = 4;
      /** The height_. */
      private float height_ ;
      
      /**
       * <code>optional float height = 4;</code>.
       *
       * @return true, if successful
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional float height = 4;</code>.
       *
       * @return the height
       */
      public float getHeight() {
        return height_;
      }
      
      /**
       * <code>optional float height = 4;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setHeight(float value) {
        bitField0_ |= 0x00000008;
        height_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float height = 4;</code>.
       *
       * @return the builder
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        height_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGBounds)
    }

    static {
      defaultInstance = new CGBounds(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGBounds)
  }

  /**
   * The Interface CGVector2OrBuilder.
   */
  public interface CGVector2OrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required float x = 1;
    /**
     * <code>required float x = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasX();
    
    /**
     * <code>required float x = 1;</code>.
     *
     * @return the x
     */
    float getX();

    // required float y = 2;
    /**
     * <code>required float y = 2;</code>.
     *
     * @return true, if successful
     */
    boolean hasY();
    
    /**
     * <code>required float y = 2;</code>.
     *
     * @return the y
     */
    float getY();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGVector2}
   */
  public static final class CGVector2 extends
      com.google.protobuf.GeneratedMessage
      implements CGVector2OrBuilder {
    // Use CGVector2.newBuilder() to construct.
    /**
     * Instantiates a new cG vector2.
     *
     * @param builder the builder
     */
    private CGVector2(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG vector2.
     *
     * @param noInit the no init
     */
    private CGVector2(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGVector2 defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGVector2 getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGVector2 getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG vector2.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGVector2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGVector2_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGVector2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGVector2.class, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGVector2> PARSER =
        new com.google.protobuf.AbstractParser<CGVector2>() {
      public CGVector2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGVector2(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGVector2> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // required float x = 1;
    /** The Constant X_FIELD_NUMBER. */
    public static final int X_FIELD_NUMBER = 1;
    
    /** The x_. */
    private float x_;
    
    /**
     * <code>required float x = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>required float x = 1;</code>.
     *
     * @return the x
     */
    public float getX() {
      return x_;
    }

    // required float y = 2;
    /** The Constant Y_FIELD_NUMBER. */
    public static final int Y_FIELD_NUMBER = 2;
    
    /** The y_. */
    private float y_;
    
    /**
     * <code>required float y = 2;</code>.
     *
     * @return true, if successful
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>required float y = 2;</code>.
     *
     * @return the y
     */
    public float getY() {
      return y_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      x_ = 0F;
      y_ = 0F;
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg vector2
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg vector2
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg vector2
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg vector2
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg vector2
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg vector2
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg vector2
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg vector2
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg vector2
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg vector2
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGVector2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGVector2 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGVector2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGVector2_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGVector2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGVector2.class, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGVector2_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2 getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2 build() {
        com.laex.cg2d.protobuf.GameObject.CGVector2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2 buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGVector2 result = new com.laex.cg2d.protobuf.GameObject.CGVector2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGVector2) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGVector2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGVector2 other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGVector2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGVector2) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // required float x = 1;
      /** The x_. */
      private float x_ ;
      
      /**
       * <code>required float x = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>required float x = 1;</code>.
       *
       * @return the x
       */
      public float getX() {
        return x_;
      }
      
      /**
       * <code>required float x = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>required float x = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      // required float y = 2;
      /** The y_. */
      private float y_ ;
      
      /**
       * <code>required float y = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>required float y = 2;</code>.
       *
       * @return the y
       */
      public float getY() {
        return y_;
      }
      
      /**
       * <code>required float y = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>required float y = 2;</code>.
       *
       * @return the builder
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGVector2)
    }

    static {
      defaultInstance = new CGVector2(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGVector2)
  }

  /**
   * The Interface CGBodyDefOrBuilder.
   */
  public interface CGBodyDefOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool active = 1;
    /**
     * <code>optional bool active = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasActive();
    
    /**
     * <code>optional bool active = 1;</code>.
     *
     * @return the active
     */
    boolean getActive();

    // optional bool allowSleep = 2;
    /**
     * <code>optional bool allowSleep = 2;</code>.
     *
     * @return true, if successful
     */
    boolean hasAllowSleep();
    
    /**
     * <code>optional bool allowSleep = 2;</code>.
     *
     * @return the allow sleep
     */
    boolean getAllowSleep();

    // optional float angle = 3;
    /**
     * <code>optional float angle = 3;</code>.
     *
     * @return true, if successful
     */
    boolean hasAngle();
    
    /**
     * <code>optional float angle = 3;</code>.
     *
     * @return the angle
     */
    float getAngle();

    // optional float angularDamping = 4;
    /**
     * <code>optional float angularDamping = 4;</code>.
     *
     * @return true, if successful
     */
    boolean hasAngularDamping();
    
    /**
     * <code>optional float angularDamping = 4;</code>.
     *
     * @return the angular damping
     */
    float getAngularDamping();

    // optional float angularVelocity = 5;
    /**
     * <code>optional float angularVelocity = 5;</code>.
     *
     * @return true, if successful
     */
    boolean hasAngularVelocity();
    
    /**
     * <code>optional float angularVelocity = 5;</code>.
     *
     * @return the angular velocity
     */
    float getAngularVelocity();

    // optional bool awake = 6;
    /**
     * <code>optional bool awake = 6;</code>.
     *
     * @return true, if successful
     */
    boolean hasAwake();
    
    /**
     * <code>optional bool awake = 6;</code>.
     *
     * @return the awake
     */
    boolean getAwake();

    // optional bool bullet = 7;
    /**
     * <code>optional bool bullet = 7;</code>.
     *
     * @return true, if successful
     */
    boolean hasBullet();
    
    /**
     * <code>optional bool bullet = 7;</code>.
     *
     * @return the bullet
     */
    boolean getBullet();

    // optional bool fixedRotation = 8;
    /**
     * <code>optional bool fixedRotation = 8;</code>.
     *
     * @return true, if successful
     */
    boolean hasFixedRotation();
    
    /**
     * <code>optional bool fixedRotation = 8;</code>.
     *
     * @return the fixed rotation
     */
    boolean getFixedRotation();

    // optional float intertialScale = 9;
    /**
     * <code>optional float intertialScale = 9;</code>.
     *
     * @return true, if successful
     */
    boolean hasIntertialScale();
    
    /**
     * <code>optional float intertialScale = 9;</code>.
     *
     * @return the intertial scale
     */
    float getIntertialScale();

    // optional float linearDampitng = 10;
    /**
     * <code>optional float linearDampitng = 10;</code>.
     *
     * @return true, if successful
     */
    boolean hasLinearDampitng();
    
    /**
     * <code>optional float linearDampitng = 10;</code>.
     *
     * @return the linear dampitng
     */
    float getLinearDampitng();

    // optional float gravityScale = 11;
    /**
     * <code>optional float gravityScale = 11;</code>.
     *
     * @return true, if successful
     */
    boolean hasGravityScale();
    
    /**
     * <code>optional float gravityScale = 11;</code>.
     *
     * @return the gravity scale
     */
    float getGravityScale();

    // optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
     *
     * @return true, if successful
     */
    boolean hasLinearVelocity();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
     *
     * @return the linear velocity
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2 getLinearVelocity();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
     *
     * @return the linear velocity or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getLinearVelocityOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGBodyType type = 13;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBodyType type = 13;</code>
     *
     * @return true, if successful
     */
    boolean hasType();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBodyType type = 13;</code>
     *
     * @return the type
     */
    com.laex.cg2d.protobuf.GameObject.CGBodyType getType();

    // optional .com.laex.cg2d.protobuf.CGVector2 position = 14;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
     *
     * @return true, if successful
     */
    boolean hasPosition();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
     *
     * @return the position
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2 getPosition();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
     *
     * @return the position or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getPositionOrBuilder();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGBodyDef}
   */
  public static final class CGBodyDef extends
      com.google.protobuf.GeneratedMessage
      implements CGBodyDefOrBuilder {
    // Use CGBodyDef.newBuilder() to construct.
    /**
     * Instantiates a new cG body def.
     *
     * @param builder the builder
     */
    private CGBodyDef(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG body def.
     *
     * @param noInit the no init
     */
    private CGBodyDef(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGBodyDef defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGBodyDef getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGBodyDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG body def.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGBodyDef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              active_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              allowSleep_ = input.readBool();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              angle_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              angularDamping_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              angularVelocity_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              awake_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              bullet_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fixedRotation_ = input.readBool();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              intertialScale_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              linearDampitng_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              gravityScale_ = input.readFloat();
              break;
            }
            case 98: {
              com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = linearVelocity_.toBuilder();
              }
              linearVelocity_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGVector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(linearVelocity_);
                linearVelocity_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              com.laex.cg2d.protobuf.GameObject.CGBodyType value = com.laex.cg2d.protobuf.GameObject.CGBodyType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00001000;
                type_ = value;
              }
              break;
            }
            case 114: {
              com.laex.cg2d.protobuf.GameObject.CGVector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGVector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBodyDef_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBodyDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGBodyDef.class, com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGBodyDef> PARSER =
        new com.google.protobuf.AbstractParser<CGBodyDef>() {
      public CGBodyDef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGBodyDef(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGBodyDef> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional bool active = 1;
    /** The Constant ACTIVE_FIELD_NUMBER. */
    public static final int ACTIVE_FIELD_NUMBER = 1;
    
    /** The active_. */
    private boolean active_;
    
    /**
     * <code>optional bool active = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasActive() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional bool active = 1;</code>.
     *
     * @return the active
     */
    public boolean getActive() {
      return active_;
    }

    // optional bool allowSleep = 2;
    /** The Constant ALLOWSLEEP_FIELD_NUMBER. */
    public static final int ALLOWSLEEP_FIELD_NUMBER = 2;
    
    /** The allow sleep_. */
    private boolean allowSleep_;
    
    /**
     * <code>optional bool allowSleep = 2;</code>.
     *
     * @return true, if successful
     */
    public boolean hasAllowSleep() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional bool allowSleep = 2;</code>.
     *
     * @return the allow sleep
     */
    public boolean getAllowSleep() {
      return allowSleep_;
    }

    // optional float angle = 3;
    /** The Constant ANGLE_FIELD_NUMBER. */
    public static final int ANGLE_FIELD_NUMBER = 3;
    
    /** The angle_. */
    private float angle_;
    
    /**
     * <code>optional float angle = 3;</code>.
     *
     * @return true, if successful
     */
    public boolean hasAngle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional float angle = 3;</code>.
     *
     * @return the angle
     */
    public float getAngle() {
      return angle_;
    }

    // optional float angularDamping = 4;
    /** The Constant ANGULARDAMPING_FIELD_NUMBER. */
    public static final int ANGULARDAMPING_FIELD_NUMBER = 4;
    
    /** The angular damping_. */
    private float angularDamping_;
    
    /**
     * <code>optional float angularDamping = 4;</code>.
     *
     * @return true, if successful
     */
    public boolean hasAngularDamping() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    
    /**
     * <code>optional float angularDamping = 4;</code>.
     *
     * @return the angular damping
     */
    public float getAngularDamping() {
      return angularDamping_;
    }

    // optional float angularVelocity = 5;
    /** The Constant ANGULARVELOCITY_FIELD_NUMBER. */
    public static final int ANGULARVELOCITY_FIELD_NUMBER = 5;
    
    /** The angular velocity_. */
    private float angularVelocity_;
    
    /**
     * <code>optional float angularVelocity = 5;</code>.
     *
     * @return true, if successful
     */
    public boolean hasAngularVelocity() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    
    /**
     * <code>optional float angularVelocity = 5;</code>.
     *
     * @return the angular velocity
     */
    public float getAngularVelocity() {
      return angularVelocity_;
    }

    // optional bool awake = 6;
    /** The Constant AWAKE_FIELD_NUMBER. */
    public static final int AWAKE_FIELD_NUMBER = 6;
    
    /** The awake_. */
    private boolean awake_;
    
    /**
     * <code>optional bool awake = 6;</code>.
     *
     * @return true, if successful
     */
    public boolean hasAwake() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    
    /**
     * <code>optional bool awake = 6;</code>.
     *
     * @return the awake
     */
    public boolean getAwake() {
      return awake_;
    }

    // optional bool bullet = 7;
    /** The Constant BULLET_FIELD_NUMBER. */
    public static final int BULLET_FIELD_NUMBER = 7;
    
    /** The bullet_. */
    private boolean bullet_;
    
    /**
     * <code>optional bool bullet = 7;</code>.
     *
     * @return true, if successful
     */
    public boolean hasBullet() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    
    /**
     * <code>optional bool bullet = 7;</code>.
     *
     * @return the bullet
     */
    public boolean getBullet() {
      return bullet_;
    }

    // optional bool fixedRotation = 8;
    /** The Constant FIXEDROTATION_FIELD_NUMBER. */
    public static final int FIXEDROTATION_FIELD_NUMBER = 8;
    
    /** The fixed rotation_. */
    private boolean fixedRotation_;
    
    /**
     * <code>optional bool fixedRotation = 8;</code>.
     *
     * @return true, if successful
     */
    public boolean hasFixedRotation() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    
    /**
     * <code>optional bool fixedRotation = 8;</code>.
     *
     * @return the fixed rotation
     */
    public boolean getFixedRotation() {
      return fixedRotation_;
    }

    // optional float intertialScale = 9;
    /** The Constant INTERTIALSCALE_FIELD_NUMBER. */
    public static final int INTERTIALSCALE_FIELD_NUMBER = 9;
    
    /** The intertial scale_. */
    private float intertialScale_;
    
    /**
     * <code>optional float intertialScale = 9;</code>.
     *
     * @return true, if successful
     */
    public boolean hasIntertialScale() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    
    /**
     * <code>optional float intertialScale = 9;</code>.
     *
     * @return the intertial scale
     */
    public float getIntertialScale() {
      return intertialScale_;
    }

    // optional float linearDampitng = 10;
    /** The Constant LINEARDAMPITNG_FIELD_NUMBER. */
    public static final int LINEARDAMPITNG_FIELD_NUMBER = 10;
    
    /** The linear dampitng_. */
    private float linearDampitng_;
    
    /**
     * <code>optional float linearDampitng = 10;</code>.
     *
     * @return true, if successful
     */
    public boolean hasLinearDampitng() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    
    /**
     * <code>optional float linearDampitng = 10;</code>.
     *
     * @return the linear dampitng
     */
    public float getLinearDampitng() {
      return linearDampitng_;
    }

    // optional float gravityScale = 11;
    /** The Constant GRAVITYSCALE_FIELD_NUMBER. */
    public static final int GRAVITYSCALE_FIELD_NUMBER = 11;
    
    /** The gravity scale_. */
    private float gravityScale_;
    
    /**
     * <code>optional float gravityScale = 11;</code>.
     *
     * @return true, if successful
     */
    public boolean hasGravityScale() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    
    /**
     * <code>optional float gravityScale = 11;</code>.
     *
     * @return the gravity scale
     */
    public float getGravityScale() {
      return gravityScale_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;
    /** The Constant LINEARVELOCITY_FIELD_NUMBER. */
    public static final int LINEARVELOCITY_FIELD_NUMBER = 12;
    
    /** The linear velocity_. */
    private com.laex.cg2d.protobuf.GameObject.CGVector2 linearVelocity_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
     *
     * @return true, if successful
     */
    public boolean hasLinearVelocity() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
     *
     * @return the linear velocity
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2 getLinearVelocity() {
      return linearVelocity_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
     *
     * @return the linear velocity or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getLinearVelocityOrBuilder() {
      return linearVelocity_;
    }

    // optional .com.laex.cg2d.protobuf.CGBodyType type = 13;
    /** The Constant TYPE_FIELD_NUMBER. */
    public static final int TYPE_FIELD_NUMBER = 13;
    
    /** The type_. */
    private com.laex.cg2d.protobuf.GameObject.CGBodyType type_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBodyType type = 13;</code>
     *
     * @return true, if successful
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBodyType type = 13;</code>
     *
     * @return the type
     */
    public com.laex.cg2d.protobuf.GameObject.CGBodyType getType() {
      return type_;
    }

    // optional .com.laex.cg2d.protobuf.CGVector2 position = 14;
    /** The Constant POSITION_FIELD_NUMBER. */
    public static final int POSITION_FIELD_NUMBER = 14;
    
    /** The position_. */
    private com.laex.cg2d.protobuf.GameObject.CGVector2 position_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
     *
     * @return true, if successful
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
     *
     * @return the position
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2 getPosition() {
      return position_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
     *
     * @return the position or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getPositionOrBuilder() {
      return position_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      active_ = false;
      allowSleep_ = false;
      angle_ = 0F;
      angularDamping_ = 0F;
      angularVelocity_ = 0F;
      awake_ = false;
      bullet_ = false;
      fixedRotation_ = false;
      intertialScale_ = 0F;
      linearDampitng_ = 0F;
      gravityScale_ = 0F;
      linearVelocity_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      type_ = com.laex.cg2d.protobuf.GameObject.CGBodyType.STATIC;
      position_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasLinearVelocity()) {
        if (!getLinearVelocity().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPosition()) {
        if (!getPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, active_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, allowSleep_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, angle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, angularDamping_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, angularVelocity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, awake_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, bullet_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, fixedRotation_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, intertialScale_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, linearDampitng_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, gravityScale_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(12, linearVelocity_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeEnum(13, type_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(14, position_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, active_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, allowSleep_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, angle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, angularDamping_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, angularVelocity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, awake_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, bullet_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, fixedRotation_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, intertialScale_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, linearDampitng_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, gravityScale_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, linearVelocity_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, type_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, position_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg body def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg body def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg body def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg body def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg body def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg body def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg body def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg body def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg body def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg body def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGBodyDef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGBodyDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGBodyDef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBodyDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBodyDef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGBodyDef.class, com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGBodyDef.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLinearVelocityFieldBuilder();
          getPositionFieldBuilder();
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        active_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        allowSleep_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        angle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        angularDamping_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        angularVelocity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        awake_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        bullet_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        fixedRotation_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        intertialScale_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        linearDampitng_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        gravityScale_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (linearVelocityBuilder_ == null) {
          linearVelocity_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          linearVelocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        type_ = com.laex.cg2d.protobuf.GameObject.CGBodyType.STATIC;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (positionBuilder_ == null) {
          position_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGBodyDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGBodyDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGBodyDef build() {
        com.laex.cg2d.protobuf.GameObject.CGBodyDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGBodyDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGBodyDef result = new com.laex.cg2d.protobuf.GameObject.CGBodyDef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.active_ = active_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.allowSleep_ = allowSleep_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.angle_ = angle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.angularDamping_ = angularDamping_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.angularVelocity_ = angularVelocity_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.awake_ = awake_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bullet_ = bullet_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.fixedRotation_ = fixedRotation_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.intertialScale_ = intertialScale_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.linearDampitng_ = linearDampitng_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.gravityScale_ = gravityScale_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (linearVelocityBuilder_ == null) {
          result.linearVelocity_ = linearVelocity_;
        } else {
          result.linearVelocity_ = linearVelocityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGBodyDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGBodyDef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGBodyDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance()) return this;
        if (other.hasActive()) {
          setActive(other.getActive());
        }
        if (other.hasAllowSleep()) {
          setAllowSleep(other.getAllowSleep());
        }
        if (other.hasAngle()) {
          setAngle(other.getAngle());
        }
        if (other.hasAngularDamping()) {
          setAngularDamping(other.getAngularDamping());
        }
        if (other.hasAngularVelocity()) {
          setAngularVelocity(other.getAngularVelocity());
        }
        if (other.hasAwake()) {
          setAwake(other.getAwake());
        }
        if (other.hasBullet()) {
          setBullet(other.getBullet());
        }
        if (other.hasFixedRotation()) {
          setFixedRotation(other.getFixedRotation());
        }
        if (other.hasIntertialScale()) {
          setIntertialScale(other.getIntertialScale());
        }
        if (other.hasLinearDampitng()) {
          setLinearDampitng(other.getLinearDampitng());
        }
        if (other.hasGravityScale()) {
          setGravityScale(other.getGravityScale());
        }
        if (other.hasLinearVelocity()) {
          mergeLinearVelocity(other.getLinearVelocity());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        if (hasLinearVelocity()) {
          if (!getLinearVelocity().isInitialized()) {
            
            return false;
          }
        }
        if (hasPosition()) {
          if (!getPosition().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGBodyDef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGBodyDef) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional bool active = 1;
      /** The active_. */
      private boolean active_ ;
      
      /**
       * <code>optional bool active = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasActive() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional bool active = 1;</code>.
       *
       * @return the active
       */
      public boolean getActive() {
        return active_;
      }
      
      /**
       * <code>optional bool active = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setActive(boolean value) {
        bitField0_ |= 0x00000001;
        active_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool active = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearActive() {
        bitField0_ = (bitField0_ & ~0x00000001);
        active_ = false;
        onChanged();
        return this;
      }

      // optional bool allowSleep = 2;
      /** The allow sleep_. */
      private boolean allowSleep_ ;
      
      /**
       * <code>optional bool allowSleep = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasAllowSleep() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional bool allowSleep = 2;</code>.
       *
       * @return the allow sleep
       */
      public boolean getAllowSleep() {
        return allowSleep_;
      }
      
      /**
       * <code>optional bool allowSleep = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setAllowSleep(boolean value) {
        bitField0_ |= 0x00000002;
        allowSleep_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool allowSleep = 2;</code>.
       *
       * @return the builder
       */
      public Builder clearAllowSleep() {
        bitField0_ = (bitField0_ & ~0x00000002);
        allowSleep_ = false;
        onChanged();
        return this;
      }

      // optional float angle = 3;
      /** The angle_. */
      private float angle_ ;
      
      /**
       * <code>optional float angle = 3;</code>.
       *
       * @return true, if successful
       */
      public boolean hasAngle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional float angle = 3;</code>.
       *
       * @return the angle
       */
      public float getAngle() {
        return angle_;
      }
      
      /**
       * <code>optional float angle = 3;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setAngle(float value) {
        bitField0_ |= 0x00000004;
        angle_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float angle = 3;</code>.
       *
       * @return the builder
       */
      public Builder clearAngle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        angle_ = 0F;
        onChanged();
        return this;
      }

      // optional float angularDamping = 4;
      /** The angular damping_. */
      private float angularDamping_ ;
      
      /**
       * <code>optional float angularDamping = 4;</code>.
       *
       * @return true, if successful
       */
      public boolean hasAngularDamping() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional float angularDamping = 4;</code>.
       *
       * @return the angular damping
       */
      public float getAngularDamping() {
        return angularDamping_;
      }
      
      /**
       * <code>optional float angularDamping = 4;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setAngularDamping(float value) {
        bitField0_ |= 0x00000008;
        angularDamping_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float angularDamping = 4;</code>.
       *
       * @return the builder
       */
      public Builder clearAngularDamping() {
        bitField0_ = (bitField0_ & ~0x00000008);
        angularDamping_ = 0F;
        onChanged();
        return this;
      }

      // optional float angularVelocity = 5;
      /** The angular velocity_. */
      private float angularVelocity_ ;
      
      /**
       * <code>optional float angularVelocity = 5;</code>.
       *
       * @return true, if successful
       */
      public boolean hasAngularVelocity() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      
      /**
       * <code>optional float angularVelocity = 5;</code>.
       *
       * @return the angular velocity
       */
      public float getAngularVelocity() {
        return angularVelocity_;
      }
      
      /**
       * <code>optional float angularVelocity = 5;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setAngularVelocity(float value) {
        bitField0_ |= 0x00000010;
        angularVelocity_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float angularVelocity = 5;</code>.
       *
       * @return the builder
       */
      public Builder clearAngularVelocity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        angularVelocity_ = 0F;
        onChanged();
        return this;
      }

      // optional bool awake = 6;
      /** The awake_. */
      private boolean awake_ ;
      
      /**
       * <code>optional bool awake = 6;</code>.
       *
       * @return true, if successful
       */
      public boolean hasAwake() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      
      /**
       * <code>optional bool awake = 6;</code>.
       *
       * @return the awake
       */
      public boolean getAwake() {
        return awake_;
      }
      
      /**
       * <code>optional bool awake = 6;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setAwake(boolean value) {
        bitField0_ |= 0x00000020;
        awake_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool awake = 6;</code>.
       *
       * @return the builder
       */
      public Builder clearAwake() {
        bitField0_ = (bitField0_ & ~0x00000020);
        awake_ = false;
        onChanged();
        return this;
      }

      // optional bool bullet = 7;
      /** The bullet_. */
      private boolean bullet_ ;
      
      /**
       * <code>optional bool bullet = 7;</code>.
       *
       * @return true, if successful
       */
      public boolean hasBullet() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      
      /**
       * <code>optional bool bullet = 7;</code>.
       *
       * @return the bullet
       */
      public boolean getBullet() {
        return bullet_;
      }
      
      /**
       * <code>optional bool bullet = 7;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setBullet(boolean value) {
        bitField0_ |= 0x00000040;
        bullet_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool bullet = 7;</code>.
       *
       * @return the builder
       */
      public Builder clearBullet() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bullet_ = false;
        onChanged();
        return this;
      }

      // optional bool fixedRotation = 8;
      /** The fixed rotation_. */
      private boolean fixedRotation_ ;
      
      /**
       * <code>optional bool fixedRotation = 8;</code>.
       *
       * @return true, if successful
       */
      public boolean hasFixedRotation() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      
      /**
       * <code>optional bool fixedRotation = 8;</code>.
       *
       * @return the fixed rotation
       */
      public boolean getFixedRotation() {
        return fixedRotation_;
      }
      
      /**
       * <code>optional bool fixedRotation = 8;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setFixedRotation(boolean value) {
        bitField0_ |= 0x00000080;
        fixedRotation_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool fixedRotation = 8;</code>.
       *
       * @return the builder
       */
      public Builder clearFixedRotation() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fixedRotation_ = false;
        onChanged();
        return this;
      }

      // optional float intertialScale = 9;
      /** The intertial scale_. */
      private float intertialScale_ ;
      
      /**
       * <code>optional float intertialScale = 9;</code>.
       *
       * @return true, if successful
       */
      public boolean hasIntertialScale() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      
      /**
       * <code>optional float intertialScale = 9;</code>.
       *
       * @return the intertial scale
       */
      public float getIntertialScale() {
        return intertialScale_;
      }
      
      /**
       * <code>optional float intertialScale = 9;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setIntertialScale(float value) {
        bitField0_ |= 0x00000100;
        intertialScale_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float intertialScale = 9;</code>.
       *
       * @return the builder
       */
      public Builder clearIntertialScale() {
        bitField0_ = (bitField0_ & ~0x00000100);
        intertialScale_ = 0F;
        onChanged();
        return this;
      }

      // optional float linearDampitng = 10;
      /** The linear dampitng_. */
      private float linearDampitng_ ;
      
      /**
       * <code>optional float linearDampitng = 10;</code>.
       *
       * @return true, if successful
       */
      public boolean hasLinearDampitng() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      
      /**
       * <code>optional float linearDampitng = 10;</code>.
       *
       * @return the linear dampitng
       */
      public float getLinearDampitng() {
        return linearDampitng_;
      }
      
      /**
       * <code>optional float linearDampitng = 10;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setLinearDampitng(float value) {
        bitField0_ |= 0x00000200;
        linearDampitng_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float linearDampitng = 10;</code>.
       *
       * @return the builder
       */
      public Builder clearLinearDampitng() {
        bitField0_ = (bitField0_ & ~0x00000200);
        linearDampitng_ = 0F;
        onChanged();
        return this;
      }

      // optional float gravityScale = 11;
      /** The gravity scale_. */
      private float gravityScale_ ;
      
      /**
       * <code>optional float gravityScale = 11;</code>.
       *
       * @return true, if successful
       */
      public boolean hasGravityScale() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      
      /**
       * <code>optional float gravityScale = 11;</code>.
       *
       * @return the gravity scale
       */
      public float getGravityScale() {
        return gravityScale_;
      }
      
      /**
       * <code>optional float gravityScale = 11;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setGravityScale(float value) {
        bitField0_ |= 0x00000400;
        gravityScale_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float gravityScale = 11;</code>.
       *
       * @return the builder
       */
      public Builder clearGravityScale() {
        bitField0_ = (bitField0_ & ~0x00000400);
        gravityScale_ = 0F;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;
      /** The linear velocity_. */
      private com.laex.cg2d.protobuf.GameObject.CGVector2 linearVelocity_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      
      /** The linear velocity builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> linearVelocityBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
       *
       * @return true, if successful
       */
      public boolean hasLinearVelocity() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
       *
       * @return the linear velocity
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2 getLinearVelocity() {
        if (linearVelocityBuilder_ == null) {
          return linearVelocity_;
        } else {
          return linearVelocityBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setLinearVelocity(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (linearVelocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          linearVelocity_ = value;
          onChanged();
        } else {
          linearVelocityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setLinearVelocity(
          com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (linearVelocityBuilder_ == null) {
          linearVelocity_ = builderForValue.build();
          onChanged();
        } else {
          linearVelocityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeLinearVelocity(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (linearVelocityBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              linearVelocity_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            linearVelocity_ =
              com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(linearVelocity_).mergeFrom(value).buildPartial();
          } else {
            linearVelocity_ = value;
          }
          onChanged();
        } else {
          linearVelocityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
       *
       * @return the builder
       */
      public Builder clearLinearVelocity() {
        if (linearVelocityBuilder_ == null) {
          linearVelocity_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          linearVelocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
       *
       * @return the linear velocity builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getLinearVelocityBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getLinearVelocityFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
       *
       * @return the linear velocity or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getLinearVelocityOrBuilder() {
        if (linearVelocityBuilder_ != null) {
          return linearVelocityBuilder_.getMessageOrBuilder();
        } else {
          return linearVelocity_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 linearVelocity = 12;</code>
       *
       * @return the linear velocity field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> 
          getLinearVelocityFieldBuilder() {
        if (linearVelocityBuilder_ == null) {
          linearVelocityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
                  linearVelocity_,
                  getParentForChildren(),
                  isClean());
          linearVelocity_ = null;
        }
        return linearVelocityBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGBodyType type = 13;
      /** The type_. */
      private com.laex.cg2d.protobuf.GameObject.CGBodyType type_ = com.laex.cg2d.protobuf.GameObject.CGBodyType.STATIC;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyType type = 13;</code>
       *
       * @return true, if successful
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyType type = 13;</code>
       *
       * @return the type
       */
      public com.laex.cg2d.protobuf.GameObject.CGBodyType getType() {
        return type_;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyType type = 13;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setType(com.laex.cg2d.protobuf.GameObject.CGBodyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        type_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyType type = 13;</code>
       *
       * @return the builder
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00001000);
        type_ = com.laex.cg2d.protobuf.GameObject.CGBodyType.STATIC;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGVector2 position = 14;
      /** The position_. */
      private com.laex.cg2d.protobuf.GameObject.CGVector2 position_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
      
      /** The position builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> positionBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
       *
       * @return true, if successful
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
       *
       * @return the position
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2 getPosition() {
        if (positionBuilder_ == null) {
          return position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setPosition(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setPosition(
          com.laex.cg2d.protobuf.GameObject.CGVector2.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergePosition(com.laex.cg2d.protobuf.GameObject.CGVector2 value) {
        if (positionBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              position_ != com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance()) {
            position_ =
              com.laex.cg2d.protobuf.GameObject.CGVector2.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
       *
       * @return the builder
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = com.laex.cg2d.protobuf.GameObject.CGVector2.getDefaultInstance();
          onChanged();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
       *
       * @return the position builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2.Builder getPositionBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
       *
       * @return the position or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGVector2 position = 14;</code>
       *
       * @return the position field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGVector2, com.laex.cg2d.protobuf.GameObject.CGVector2.Builder, com.laex.cg2d.protobuf.GameObject.CGVector2OrBuilder>(
                  position_,
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGBodyDef)
    }

    static {
      defaultInstance = new CGBodyDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGBodyDef)
  }

  /**
   * The Interface CGFilterOrBuilder.
   */
  public interface CGFilterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 categoryBits = 1;
    /**
     * <code>optional int32 categoryBits = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasCategoryBits();
    
    /**
     * <code>optional int32 categoryBits = 1;</code>.
     *
     * @return the category bits
     */
    int getCategoryBits();

    // optional int32 maskBits = 2;
    /**
     * <code>optional int32 maskBits = 2;</code>.
     *
     * @return true, if successful
     */
    boolean hasMaskBits();
    
    /**
     * <code>optional int32 maskBits = 2;</code>.
     *
     * @return the mask bits
     */
    int getMaskBits();

    // optional int32 groupIndex = 3;
    /**
     * <code>optional int32 groupIndex = 3;</code>.
     *
     * @return true, if successful
     */
    boolean hasGroupIndex();
    
    /**
     * <code>optional int32 groupIndex = 3;</code>.
     *
     * @return the group index
     */
    int getGroupIndex();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGFilter}
   */
  public static final class CGFilter extends
      com.google.protobuf.GeneratedMessage
      implements CGFilterOrBuilder {
    // Use CGFilter.newBuilder() to construct.
    /**
     * Instantiates a new cG filter.
     *
     * @param builder the builder
     */
    private CGFilter(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG filter.
     *
     * @param noInit the no init
     */
    private CGFilter(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGFilter defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGFilter getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGFilter getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG filter.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGFilter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              categoryBits_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maskBits_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              groupIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFilter_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGFilter.class, com.laex.cg2d.protobuf.GameObject.CGFilter.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGFilter> PARSER =
        new com.google.protobuf.AbstractParser<CGFilter>() {
      public CGFilter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGFilter(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGFilter> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional int32 categoryBits = 1;
    /** The Constant CATEGORYBITS_FIELD_NUMBER. */
    public static final int CATEGORYBITS_FIELD_NUMBER = 1;
    
    /** The category bits_. */
    private int categoryBits_;
    
    /**
     * <code>optional int32 categoryBits = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasCategoryBits() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional int32 categoryBits = 1;</code>.
     *
     * @return the category bits
     */
    public int getCategoryBits() {
      return categoryBits_;
    }

    // optional int32 maskBits = 2;
    /** The Constant MASKBITS_FIELD_NUMBER. */
    public static final int MASKBITS_FIELD_NUMBER = 2;
    
    /** The mask bits_. */
    private int maskBits_;
    
    /**
     * <code>optional int32 maskBits = 2;</code>.
     *
     * @return true, if successful
     */
    public boolean hasMaskBits() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional int32 maskBits = 2;</code>.
     *
     * @return the mask bits
     */
    public int getMaskBits() {
      return maskBits_;
    }

    // optional int32 groupIndex = 3;
    /** The Constant GROUPINDEX_FIELD_NUMBER. */
    public static final int GROUPINDEX_FIELD_NUMBER = 3;
    
    /** The group index_. */
    private int groupIndex_;
    
    /**
     * <code>optional int32 groupIndex = 3;</code>.
     *
     * @return true, if successful
     */
    public boolean hasGroupIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional int32 groupIndex = 3;</code>.
     *
     * @return the group index
     */
    public int getGroupIndex() {
      return groupIndex_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      categoryBits_ = 0;
      maskBits_ = 0;
      groupIndex_ = 0;
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, categoryBits_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, maskBits_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, groupIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, categoryBits_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maskBits_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, groupIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg filter
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg filter
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg filter
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg filter
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg filter
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg filter
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg filter
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg filter
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg filter
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg filter
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGFilter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFilter_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFilter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGFilter.class, com.laex.cg2d.protobuf.GameObject.CGFilter.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGFilter.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        categoryBits_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maskBits_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        groupIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFilter_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGFilter getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGFilter build() {
        com.laex.cg2d.protobuf.GameObject.CGFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGFilter buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGFilter result = new com.laex.cg2d.protobuf.GameObject.CGFilter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.categoryBits_ = categoryBits_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maskBits_ = maskBits_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.groupIndex_ = groupIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGFilter) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGFilter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGFilter other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance()) return this;
        if (other.hasCategoryBits()) {
          setCategoryBits(other.getCategoryBits());
        }
        if (other.hasMaskBits()) {
          setMaskBits(other.getMaskBits());
        }
        if (other.hasGroupIndex()) {
          setGroupIndex(other.getGroupIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGFilter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGFilter) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional int32 categoryBits = 1;
      /** The category bits_. */
      private int categoryBits_ ;
      
      /**
       * <code>optional int32 categoryBits = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasCategoryBits() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional int32 categoryBits = 1;</code>.
       *
       * @return the category bits
       */
      public int getCategoryBits() {
        return categoryBits_;
      }
      
      /**
       * <code>optional int32 categoryBits = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setCategoryBits(int value) {
        bitField0_ |= 0x00000001;
        categoryBits_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional int32 categoryBits = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearCategoryBits() {
        bitField0_ = (bitField0_ & ~0x00000001);
        categoryBits_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maskBits = 2;
      /** The mask bits_. */
      private int maskBits_ ;
      
      /**
       * <code>optional int32 maskBits = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasMaskBits() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional int32 maskBits = 2;</code>.
       *
       * @return the mask bits
       */
      public int getMaskBits() {
        return maskBits_;
      }
      
      /**
       * <code>optional int32 maskBits = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setMaskBits(int value) {
        bitField0_ |= 0x00000002;
        maskBits_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional int32 maskBits = 2;</code>.
       *
       * @return the builder
       */
      public Builder clearMaskBits() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maskBits_ = 0;
        onChanged();
        return this;
      }

      // optional int32 groupIndex = 3;
      /** The group index_. */
      private int groupIndex_ ;
      
      /**
       * <code>optional int32 groupIndex = 3;</code>.
       *
       * @return true, if successful
       */
      public boolean hasGroupIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional int32 groupIndex = 3;</code>.
       *
       * @return the group index
       */
      public int getGroupIndex() {
        return groupIndex_;
      }
      
      /**
       * <code>optional int32 groupIndex = 3;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setGroupIndex(int value) {
        bitField0_ |= 0x00000004;
        groupIndex_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional int32 groupIndex = 3;</code>.
       *
       * @return the builder
       */
      public Builder clearGroupIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        groupIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGFilter)
    }

    static {
      defaultInstance = new CGFilter(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGFilter)
  }

  /**
   * The Interface CGFixtureDefOrBuilder.
   */
  public interface CGFixtureDefOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional float density = 1;
    /**
     * <code>optional float density = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasDensity();
    
    /**
     * <code>optional float density = 1;</code>.
     *
     * @return the density
     */
    float getDensity();

    // optional float friction = 2;
    /**
     * <code>optional float friction = 2;</code>.
     *
     * @return true, if successful
     */
    boolean hasFriction();
    
    /**
     * <code>optional float friction = 2;</code>.
     *
     * @return the friction
     */
    float getFriction();

    // optional float restitution = 3;
    /**
     * <code>optional float restitution = 3;</code>.
     *
     * @return true, if successful
     */
    boolean hasRestitution();
    
    /**
     * <code>optional float restitution = 3;</code>.
     *
     * @return the restitution
     */
    float getRestitution();

    // optional bool sensor = 4;
    /**
     * <code>optional bool sensor = 4;</code>.
     *
     * @return true, if successful
     */
    boolean hasSensor();
    
    /**
     * <code>optional bool sensor = 4;</code>.
     *
     * @return the sensor
     */
    boolean getSensor();

    // optional .com.laex.cg2d.protobuf.CGFilter filter = 5;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
     *
     * @return true, if successful
     */
    boolean hasFilter();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
     *
     * @return the filter
     */
    com.laex.cg2d.protobuf.GameObject.CGFilter getFilter();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
     *
     * @return the filter or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder getFilterOrBuilder();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGFixtureDef}
   */
  public static final class CGFixtureDef extends
      com.google.protobuf.GeneratedMessage
      implements CGFixtureDefOrBuilder {
    // Use CGFixtureDef.newBuilder() to construct.
    /**
     * Instantiates a new cG fixture def.
     *
     * @param builder the builder
     */
    private CGFixtureDef(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG fixture def.
     *
     * @param noInit the no init
     */
    private CGFixtureDef(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGFixtureDef defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGFixtureDef getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGFixtureDef getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG fixture def.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGFixtureDef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              density_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              friction_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              restitution_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              sensor_ = input.readBool();
              break;
            }
            case 42: {
              com.laex.cg2d.protobuf.GameObject.CGFilter.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = filter_.toBuilder();
              }
              filter_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGFilter.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(filter_);
                filter_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFixtureDef_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFixtureDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGFixtureDef.class, com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGFixtureDef> PARSER =
        new com.google.protobuf.AbstractParser<CGFixtureDef>() {
      public CGFixtureDef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGFixtureDef(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGFixtureDef> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional float density = 1;
    /** The Constant DENSITY_FIELD_NUMBER. */
    public static final int DENSITY_FIELD_NUMBER = 1;
    
    /** The density_. */
    private float density_;
    
    /**
     * <code>optional float density = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasDensity() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional float density = 1;</code>.
     *
     * @return the density
     */
    public float getDensity() {
      return density_;
    }

    // optional float friction = 2;
    /** The Constant FRICTION_FIELD_NUMBER. */
    public static final int FRICTION_FIELD_NUMBER = 2;
    
    /** The friction_. */
    private float friction_;
    
    /**
     * <code>optional float friction = 2;</code>.
     *
     * @return true, if successful
     */
    public boolean hasFriction() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional float friction = 2;</code>.
     *
     * @return the friction
     */
    public float getFriction() {
      return friction_;
    }

    // optional float restitution = 3;
    /** The Constant RESTITUTION_FIELD_NUMBER. */
    public static final int RESTITUTION_FIELD_NUMBER = 3;
    
    /** The restitution_. */
    private float restitution_;
    
    /**
     * <code>optional float restitution = 3;</code>.
     *
     * @return true, if successful
     */
    public boolean hasRestitution() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional float restitution = 3;</code>.
     *
     * @return the restitution
     */
    public float getRestitution() {
      return restitution_;
    }

    // optional bool sensor = 4;
    /** The Constant SENSOR_FIELD_NUMBER. */
    public static final int SENSOR_FIELD_NUMBER = 4;
    
    /** The sensor_. */
    private boolean sensor_;
    
    /**
     * <code>optional bool sensor = 4;</code>.
     *
     * @return true, if successful
     */
    public boolean hasSensor() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    
    /**
     * <code>optional bool sensor = 4;</code>.
     *
     * @return the sensor
     */
    public boolean getSensor() {
      return sensor_;
    }

    // optional .com.laex.cg2d.protobuf.CGFilter filter = 5;
    /** The Constant FILTER_FIELD_NUMBER. */
    public static final int FILTER_FIELD_NUMBER = 5;
    
    /** The filter_. */
    private com.laex.cg2d.protobuf.GameObject.CGFilter filter_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
     *
     * @return true, if successful
     */
    public boolean hasFilter() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
     *
     * @return the filter
     */
    public com.laex.cg2d.protobuf.GameObject.CGFilter getFilter() {
      return filter_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
     *
     * @return the filter or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder getFilterOrBuilder() {
      return filter_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      density_ = 0F;
      friction_ = 0F;
      restitution_ = 0F;
      sensor_ = false;
      filter_ = com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance();
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, density_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, friction_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, restitution_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, sensor_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, filter_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, density_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, friction_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, restitution_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, sensor_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, filter_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg fixture def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg fixture def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg fixture def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg fixture def
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg fixture def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg fixture def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg fixture def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg fixture def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg fixture def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg fixture def
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGFixtureDef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGFixtureDef prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGFixtureDef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFixtureDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFixtureDef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGFixtureDef.class, com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGFixtureDef.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFilterFieldBuilder();
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        density_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        friction_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        restitution_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        sensor_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (filterBuilder_ == null) {
          filter_ = com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance();
        } else {
          filterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGFixtureDef_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGFixtureDef getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGFixtureDef build() {
        com.laex.cg2d.protobuf.GameObject.CGFixtureDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGFixtureDef buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGFixtureDef result = new com.laex.cg2d.protobuf.GameObject.CGFixtureDef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.density_ = density_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.friction_ = friction_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.restitution_ = restitution_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sensor_ = sensor_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (filterBuilder_ == null) {
          result.filter_ = filter_;
        } else {
          result.filter_ = filterBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGFixtureDef) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGFixtureDef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGFixtureDef other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance()) return this;
        if (other.hasDensity()) {
          setDensity(other.getDensity());
        }
        if (other.hasFriction()) {
          setFriction(other.getFriction());
        }
        if (other.hasRestitution()) {
          setRestitution(other.getRestitution());
        }
        if (other.hasSensor()) {
          setSensor(other.getSensor());
        }
        if (other.hasFilter()) {
          mergeFilter(other.getFilter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGFixtureDef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGFixtureDef) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional float density = 1;
      /** The density_. */
      private float density_ ;
      
      /**
       * <code>optional float density = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasDensity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional float density = 1;</code>.
       *
       * @return the density
       */
      public float getDensity() {
        return density_;
      }
      
      /**
       * <code>optional float density = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setDensity(float value) {
        bitField0_ |= 0x00000001;
        density_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float density = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearDensity() {
        bitField0_ = (bitField0_ & ~0x00000001);
        density_ = 0F;
        onChanged();
        return this;
      }

      // optional float friction = 2;
      /** The friction_. */
      private float friction_ ;
      
      /**
       * <code>optional float friction = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasFriction() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional float friction = 2;</code>.
       *
       * @return the friction
       */
      public float getFriction() {
        return friction_;
      }
      
      /**
       * <code>optional float friction = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setFriction(float value) {
        bitField0_ |= 0x00000002;
        friction_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float friction = 2;</code>.
       *
       * @return the builder
       */
      public Builder clearFriction() {
        bitField0_ = (bitField0_ & ~0x00000002);
        friction_ = 0F;
        onChanged();
        return this;
      }

      // optional float restitution = 3;
      /** The restitution_. */
      private float restitution_ ;
      
      /**
       * <code>optional float restitution = 3;</code>.
       *
       * @return true, if successful
       */
      public boolean hasRestitution() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional float restitution = 3;</code>.
       *
       * @return the restitution
       */
      public float getRestitution() {
        return restitution_;
      }
      
      /**
       * <code>optional float restitution = 3;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setRestitution(float value) {
        bitField0_ |= 0x00000004;
        restitution_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional float restitution = 3;</code>.
       *
       * @return the builder
       */
      public Builder clearRestitution() {
        bitField0_ = (bitField0_ & ~0x00000004);
        restitution_ = 0F;
        onChanged();
        return this;
      }

      // optional bool sensor = 4;
      /** The sensor_. */
      private boolean sensor_ ;
      
      /**
       * <code>optional bool sensor = 4;</code>.
       *
       * @return true, if successful
       */
      public boolean hasSensor() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional bool sensor = 4;</code>.
       *
       * @return the sensor
       */
      public boolean getSensor() {
        return sensor_;
      }
      
      /**
       * <code>optional bool sensor = 4;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setSensor(boolean value) {
        bitField0_ |= 0x00000008;
        sensor_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool sensor = 4;</code>.
       *
       * @return the builder
       */
      public Builder clearSensor() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sensor_ = false;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGFilter filter = 5;
      /** The filter_. */
      private com.laex.cg2d.protobuf.GameObject.CGFilter filter_ = com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance();
      
      /** The filter builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGFilter, com.laex.cg2d.protobuf.GameObject.CGFilter.Builder, com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder> filterBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
       *
       * @return true, if successful
       */
      public boolean hasFilter() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
       *
       * @return the filter
       */
      public com.laex.cg2d.protobuf.GameObject.CGFilter getFilter() {
        if (filterBuilder_ == null) {
          return filter_;
        } else {
          return filterBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setFilter(com.laex.cg2d.protobuf.GameObject.CGFilter value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filter_ = value;
          onChanged();
        } else {
          filterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setFilter(
          com.laex.cg2d.protobuf.GameObject.CGFilter.Builder builderForValue) {
        if (filterBuilder_ == null) {
          filter_ = builderForValue.build();
          onChanged();
        } else {
          filterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeFilter(com.laex.cg2d.protobuf.GameObject.CGFilter value) {
        if (filterBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              filter_ != com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance()) {
            filter_ =
              com.laex.cg2d.protobuf.GameObject.CGFilter.newBuilder(filter_).mergeFrom(value).buildPartial();
          } else {
            filter_ = value;
          }
          onChanged();
        } else {
          filterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
       *
       * @return the builder
       */
      public Builder clearFilter() {
        if (filterBuilder_ == null) {
          filter_ = com.laex.cg2d.protobuf.GameObject.CGFilter.getDefaultInstance();
          onChanged();
        } else {
          filterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
       *
       * @return the filter builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGFilter.Builder getFilterBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getFilterFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
       *
       * @return the filter or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder getFilterOrBuilder() {
        if (filterBuilder_ != null) {
          return filterBuilder_.getMessageOrBuilder();
        } else {
          return filter_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFilter filter = 5;</code>
       *
       * @return the filter field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGFilter, com.laex.cg2d.protobuf.GameObject.CGFilter.Builder, com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder> 
          getFilterFieldBuilder() {
        if (filterBuilder_ == null) {
          filterBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGFilter, com.laex.cg2d.protobuf.GameObject.CGFilter.Builder, com.laex.cg2d.protobuf.GameObject.CGFilterOrBuilder>(
                  filter_,
                  getParentForChildren(),
                  isClean());
          filter_ = null;
        }
        return filterBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGFixtureDef)
    }

    static {
      defaultInstance = new CGFixtureDef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGFixtureDef)
  }

  /**
   * The Interface CGShapeOrBuilder.
   */
  public interface CGShapeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string id = 1;
    /**
     * <code>optional string id = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasId();
    
    /**
     * <code>optional string id = 1;</code>.
     *
     * @return the id
     */
    java.lang.String getId();
    
    /**
     * <code>optional string id = 1;</code>.
     *
     * @return the id bytes
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // optional bool visible = 2;
    /**
     * <code>optional bool visible = 2;</code>.
     *
     * @return true, if successful
     */
    boolean hasVisible();
    
    /**
     * <code>optional bool visible = 2;</code>.
     *
     * @return the visible
     */
    boolean getVisible();

    // optional bool locked = 3;
    /**
     * <code>optional bool locked = 3;</code>.
     *
     * @return true, if successful
     */
    boolean hasLocked();
    
    /**
     * <code>optional bool locked = 3;</code>.
     *
     * @return the locked
     */
    boolean getLocked();

    // optional bool background = 4;
    /**
     * <code>optional bool background = 4;</code>.
     *
     * @return true, if successful
     */
    boolean hasBackground();
    
    /**
     * <code>optional bool background = 4;</code>.
     *
     * @return the background
     */
    boolean getBackground();

    // optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
     *
     * @return true, if successful
     */
    boolean hasBackgroundResourceFile();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
     *
     * @return the background resource file
     */
    com.laex.cg2d.protobuf.GameObject.CGResourceFile getBackgroundResourceFile();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
     *
     * @return the background resource file or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getBackgroundResourceFileOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;</code>
     *
     * @return true, if successful
     */
    boolean hasEditorShapeType();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;</code>
     *
     * @return the editor shape type
     */
    com.laex.cg2d.protobuf.GameObject.CGEditorShapeType getEditorShapeType();

    // optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
     *
     * @return true, if successful
     */
    boolean hasBounds();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
     *
     * @return the bounds
     */
    com.laex.cg2d.protobuf.GameObject.CGBounds getBounds();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
     *
     * @return the bounds or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder getBoundsOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
     *
     * @return true, if successful
     */
    boolean hasBodyDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
     *
     * @return the body def
     */
    com.laex.cg2d.protobuf.GameObject.CGBodyDef getBodyDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
     *
     * @return the body def or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder getBodyDefOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
     *
     * @return true, if successful
     */
    boolean hasFixtureDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
     *
     * @return the fixture def
     */
    com.laex.cg2d.protobuf.GameObject.CGFixtureDef getFixtureDef();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
     *
     * @return the fixture def or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder getFixtureDefOrBuilder();

    // repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
     *
     * @return the joints list
     */
    java.util.List<com.laex.cg2d.protobuf.GameObject.CGJoint> 
        getJointsList();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
     *
     * @param index the index
     * @return the joints
     */
    com.laex.cg2d.protobuf.GameObject.CGJoint getJoints(int index);
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
     *
     * @return the joints count
     */
    int getJointsCount();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
     *
     * @return the joints or builder list
     */
    java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder> 
        getJointsOrBuilderList();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
     *
     * @param index the index
     * @return the joints or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder getJointsOrBuilder(
        int index);

    // optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
     *
     * @return true, if successful
     */
    boolean hasEntityRefFile();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
     *
     * @return the entity ref file
     */
    com.laex.cg2d.protobuf.GameObject.CGResourceFile getEntityRefFile();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
     *
     * @return the entity ref file or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getEntityRefFileOrBuilder();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGShape}
   */
  public static final class CGShape extends
      com.google.protobuf.GeneratedMessage
      implements CGShapeOrBuilder {
    // Use CGShape.newBuilder() to construct.
    /**
     * Instantiates a new cG shape.
     *
     * @param builder the builder
     */
    private CGShape(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG shape.
     *
     * @param noInit the no init
     */
    private CGShape(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGShape defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGShape getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGShape getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG shape.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGShape(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              visible_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              locked_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              background_ = input.readBool();
              break;
            }
            case 42: {
              com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = backgroundResourceFile_.toBuilder();
              }
              backgroundResourceFile_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGResourceFile.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(backgroundResourceFile_);
                backgroundResourceFile_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.laex.cg2d.protobuf.GameObject.CGEditorShapeType value = com.laex.cg2d.protobuf.GameObject.CGEditorShapeType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                editorShapeType_ = value;
              }
              break;
            }
            case 58: {
              com.laex.cg2d.protobuf.GameObject.CGBounds.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = bounds_.toBuilder();
              }
              bounds_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGBounds.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bounds_);
                bounds_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = bodyDef_.toBuilder();
              }
              bodyDef_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGBodyDef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bodyDef_);
                bodyDef_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = fixtureDef_.toBuilder();
              }
              fixtureDef_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGFixtureDef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fixtureDef_);
                fixtureDef_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                joints_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGJoint>();
                mutable_bitField0_ |= 0x00000200;
              }
              joints_.add(input.readMessage(com.laex.cg2d.protobuf.GameObject.CGJoint.PARSER, extensionRegistry));
              break;
            }
            case 90: {
              com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = entityRefFile_.toBuilder();
              }
              entityRefFile_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGResourceFile.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(entityRefFile_);
                entityRefFile_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          joints_ = java.util.Collections.unmodifiableList(joints_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGShape_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGShape_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGShape.class, com.laex.cg2d.protobuf.GameObject.CGShape.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGShape> PARSER =
        new com.google.protobuf.AbstractParser<CGShape>() {
      public CGShape parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGShape(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGShape> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional string id = 1;
    /** The Constant ID_FIELD_NUMBER. */
    public static final int ID_FIELD_NUMBER = 1;
    
    /** The id_. */
    private java.lang.Object id_;
    
    /**
     * <code>optional string id = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional string id = 1;</code>.
     *
     * @return the id
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    
    /**
     * <code>optional string id = 1;</code>.
     *
     * @return the id bytes
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool visible = 2;
    /** The Constant VISIBLE_FIELD_NUMBER. */
    public static final int VISIBLE_FIELD_NUMBER = 2;
    
    /** The visible_. */
    private boolean visible_;
    
    /**
     * <code>optional bool visible = 2;</code>.
     *
     * @return true, if successful
     */
    public boolean hasVisible() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional bool visible = 2;</code>.
     *
     * @return the visible
     */
    public boolean getVisible() {
      return visible_;
    }

    // optional bool locked = 3;
    /** The Constant LOCKED_FIELD_NUMBER. */
    public static final int LOCKED_FIELD_NUMBER = 3;
    
    /** The locked_. */
    private boolean locked_;
    
    /**
     * <code>optional bool locked = 3;</code>.
     *
     * @return true, if successful
     */
    public boolean hasLocked() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional bool locked = 3;</code>.
     *
     * @return the locked
     */
    public boolean getLocked() {
      return locked_;
    }

    // optional bool background = 4;
    /** The Constant BACKGROUND_FIELD_NUMBER. */
    public static final int BACKGROUND_FIELD_NUMBER = 4;
    
    /** The background_. */
    private boolean background_;
    
    /**
     * <code>optional bool background = 4;</code>.
     *
     * @return true, if successful
     */
    public boolean hasBackground() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    
    /**
     * <code>optional bool background = 4;</code>.
     *
     * @return the background
     */
    public boolean getBackground() {
      return background_;
    }

    // optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;
    /** The Constant BACKGROUNDRESOURCEFILE_FIELD_NUMBER. */
    public static final int BACKGROUNDRESOURCEFILE_FIELD_NUMBER = 5;
    
    /** The background resource file_. */
    private com.laex.cg2d.protobuf.GameObject.CGResourceFile backgroundResourceFile_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
     *
     * @return true, if successful
     */
    public boolean hasBackgroundResourceFile() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
     *
     * @return the background resource file
     */
    public com.laex.cg2d.protobuf.GameObject.CGResourceFile getBackgroundResourceFile() {
      return backgroundResourceFile_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
     *
     * @return the background resource file or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getBackgroundResourceFileOrBuilder() {
      return backgroundResourceFile_;
    }

    // optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;
    /** The Constant EDITORSHAPETYPE_FIELD_NUMBER. */
    public static final int EDITORSHAPETYPE_FIELD_NUMBER = 6;
    
    /** The editor shape type_. */
    private com.laex.cg2d.protobuf.GameObject.CGEditorShapeType editorShapeType_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;</code>
     *
     * @return true, if successful
     */
    public boolean hasEditorShapeType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;</code>
     *
     * @return the editor shape type
     */
    public com.laex.cg2d.protobuf.GameObject.CGEditorShapeType getEditorShapeType() {
      return editorShapeType_;
    }

    // optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;
    /** The Constant BOUNDS_FIELD_NUMBER. */
    public static final int BOUNDS_FIELD_NUMBER = 7;
    
    /** The bounds_. */
    private com.laex.cg2d.protobuf.GameObject.CGBounds bounds_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
     *
     * @return true, if successful
     */
    public boolean hasBounds() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
     *
     * @return the bounds
     */
    public com.laex.cg2d.protobuf.GameObject.CGBounds getBounds() {
      return bounds_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
     *
     * @return the bounds or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder getBoundsOrBuilder() {
      return bounds_;
    }

    // optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;
    /** The Constant BODYDEF_FIELD_NUMBER. */
    public static final int BODYDEF_FIELD_NUMBER = 8;
    
    /** The body def_. */
    private com.laex.cg2d.protobuf.GameObject.CGBodyDef bodyDef_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
     *
     * @return true, if successful
     */
    public boolean hasBodyDef() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
     *
     * @return the body def
     */
    public com.laex.cg2d.protobuf.GameObject.CGBodyDef getBodyDef() {
      return bodyDef_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
     *
     * @return the body def or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder getBodyDefOrBuilder() {
      return bodyDef_;
    }

    // optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;
    /** The Constant FIXTUREDEF_FIELD_NUMBER. */
    public static final int FIXTUREDEF_FIELD_NUMBER = 9;
    
    /** The fixture def_. */
    private com.laex.cg2d.protobuf.GameObject.CGFixtureDef fixtureDef_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
     *
     * @return true, if successful
     */
    public boolean hasFixtureDef() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
     *
     * @return the fixture def
     */
    public com.laex.cg2d.protobuf.GameObject.CGFixtureDef getFixtureDef() {
      return fixtureDef_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
     *
     * @return the fixture def or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder getFixtureDefOrBuilder() {
      return fixtureDef_;
    }

    // repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;
    /** The Constant JOINTS_FIELD_NUMBER. */
    public static final int JOINTS_FIELD_NUMBER = 10;
    
    /** The joints_. */
    private java.util.List<com.laex.cg2d.protobuf.GameObject.CGJoint> joints_;
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
     *
     * @return the joints list
     */
    public java.util.List<com.laex.cg2d.protobuf.GameObject.CGJoint> getJointsList() {
      return joints_;
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
     *
     * @return the joints or builder list
     */
    public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder> 
        getJointsOrBuilderList() {
      return joints_;
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
     *
     * @return the joints count
     */
    public int getJointsCount() {
      return joints_.size();
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
     *
     * @param index the index
     * @return the joints
     */
    public com.laex.cg2d.protobuf.GameObject.CGJoint getJoints(int index) {
      return joints_.get(index);
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
     *
     * @param index the index
     * @return the joints or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder getJointsOrBuilder(
        int index) {
      return joints_.get(index);
    }

    // optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;
    /** The Constant ENTITYREFFILE_FIELD_NUMBER. */
    public static final int ENTITYREFFILE_FIELD_NUMBER = 11;
    
    /** The entity ref file_. */
    private com.laex.cg2d.protobuf.GameObject.CGResourceFile entityRefFile_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
     *
     * @return true, if successful
     */
    public boolean hasEntityRefFile() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
     *
     * @return the entity ref file
     */
    public com.laex.cg2d.protobuf.GameObject.CGResourceFile getEntityRefFile() {
      return entityRefFile_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
     *
     * @return the entity ref file or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getEntityRefFileOrBuilder() {
      return entityRefFile_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      id_ = "";
      visible_ = false;
      locked_ = false;
      background_ = false;
      backgroundResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
      editorShapeType_ = com.laex.cg2d.protobuf.GameObject.CGEditorShapeType.SIMPLE_SHAPE_CIRCLE;
      bounds_ = com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance();
      bodyDef_ = com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance();
      fixtureDef_ = com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance();
      joints_ = java.util.Collections.emptyList();
      entityRefFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasBodyDef()) {
        if (!getBodyDef().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getJointsCount(); i++) {
        if (!getJoints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, visible_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, locked_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, background_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, backgroundResourceFile_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, editorShapeType_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, bounds_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, bodyDef_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, fixtureDef_);
      }
      for (int i = 0; i < joints_.size(); i++) {
        output.writeMessage(10, joints_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(11, entityRefFile_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, visible_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, locked_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, background_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, backgroundResourceFile_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, editorShapeType_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, bounds_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, bodyDef_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, fixtureDef_);
      }
      for (int i = 0; i < joints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, joints_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, entityRefFile_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg shape
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg shape
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg shape
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg shape
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg shape
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg shape
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg shape
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGShape parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg shape
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGShape parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg shape
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg shape
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGShape parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGShape prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGShape}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGShape_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGShape_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGShape.class, com.laex.cg2d.protobuf.GameObject.CGShape.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGShape.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBackgroundResourceFileFieldBuilder();
          getBoundsFieldBuilder();
          getBodyDefFieldBuilder();
          getFixtureDefFieldBuilder();
          getJointsFieldBuilder();
          getEntityRefFileFieldBuilder();
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        visible_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        locked_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        background_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (backgroundResourceFileBuilder_ == null) {
          backgroundResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
        } else {
          backgroundResourceFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        editorShapeType_ = com.laex.cg2d.protobuf.GameObject.CGEditorShapeType.SIMPLE_SHAPE_CIRCLE;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (boundsBuilder_ == null) {
          bounds_ = com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance();
        } else {
          boundsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (bodyDefBuilder_ == null) {
          bodyDef_ = com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance();
        } else {
          bodyDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (fixtureDefBuilder_ == null) {
          fixtureDef_ = com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance();
        } else {
          fixtureDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (jointsBuilder_ == null) {
          joints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          jointsBuilder_.clear();
        }
        if (entityRefFileBuilder_ == null) {
          entityRefFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
        } else {
          entityRefFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGShape_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGShape getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGShape.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGShape build() {
        com.laex.cg2d.protobuf.GameObject.CGShape result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGShape buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGShape result = new com.laex.cg2d.protobuf.GameObject.CGShape(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.visible_ = visible_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.locked_ = locked_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.background_ = background_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (backgroundResourceFileBuilder_ == null) {
          result.backgroundResourceFile_ = backgroundResourceFile_;
        } else {
          result.backgroundResourceFile_ = backgroundResourceFileBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.editorShapeType_ = editorShapeType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (boundsBuilder_ == null) {
          result.bounds_ = bounds_;
        } else {
          result.bounds_ = boundsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (bodyDefBuilder_ == null) {
          result.bodyDef_ = bodyDef_;
        } else {
          result.bodyDef_ = bodyDefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (fixtureDefBuilder_ == null) {
          result.fixtureDef_ = fixtureDef_;
        } else {
          result.fixtureDef_ = fixtureDefBuilder_.build();
        }
        if (jointsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            joints_ = java.util.Collections.unmodifiableList(joints_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.joints_ = joints_;
        } else {
          result.joints_ = jointsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        if (entityRefFileBuilder_ == null) {
          result.entityRefFile_ = entityRefFile_;
        } else {
          result.entityRefFile_ = entityRefFileBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGShape) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGShape)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGShape other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGShape.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasVisible()) {
          setVisible(other.getVisible());
        }
        if (other.hasLocked()) {
          setLocked(other.getLocked());
        }
        if (other.hasBackground()) {
          setBackground(other.getBackground());
        }
        if (other.hasBackgroundResourceFile()) {
          mergeBackgroundResourceFile(other.getBackgroundResourceFile());
        }
        if (other.hasEditorShapeType()) {
          setEditorShapeType(other.getEditorShapeType());
        }
        if (other.hasBounds()) {
          mergeBounds(other.getBounds());
        }
        if (other.hasBodyDef()) {
          mergeBodyDef(other.getBodyDef());
        }
        if (other.hasFixtureDef()) {
          mergeFixtureDef(other.getFixtureDef());
        }
        if (jointsBuilder_ == null) {
          if (!other.joints_.isEmpty()) {
            if (joints_.isEmpty()) {
              joints_ = other.joints_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureJointsIsMutable();
              joints_.addAll(other.joints_);
            }
            onChanged();
          }
        } else {
          if (!other.joints_.isEmpty()) {
            if (jointsBuilder_.isEmpty()) {
              jointsBuilder_.dispose();
              jointsBuilder_ = null;
              joints_ = other.joints_;
              bitField0_ = (bitField0_ & ~0x00000200);
              jointsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getJointsFieldBuilder() : null;
            } else {
              jointsBuilder_.addAllMessages(other.joints_);
            }
          }
        }
        if (other.hasEntityRefFile()) {
          mergeEntityRefFile(other.getEntityRefFile());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        if (hasBodyDef()) {
          if (!getBodyDef().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getJointsCount(); i++) {
          if (!getJoints(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGShape parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGShape) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional string id = 1;
      /** The id_. */
      private java.lang.Object id_ = "";
      
      /**
       * <code>optional string id = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional string id = 1;</code>.
       *
       * @return the id
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      
      /**
       * <code>optional string id = 1;</code>.
       *
       * @return the id bytes
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      /**
       * <code>optional string id = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string id = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string id = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      // optional bool visible = 2;
      /** The visible_. */
      private boolean visible_ ;
      
      /**
       * <code>optional bool visible = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasVisible() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional bool visible = 2;</code>.
       *
       * @return the visible
       */
      public boolean getVisible() {
        return visible_;
      }
      
      /**
       * <code>optional bool visible = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setVisible(boolean value) {
        bitField0_ |= 0x00000002;
        visible_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool visible = 2;</code>.
       *
       * @return the builder
       */
      public Builder clearVisible() {
        bitField0_ = (bitField0_ & ~0x00000002);
        visible_ = false;
        onChanged();
        return this;
      }

      // optional bool locked = 3;
      /** The locked_. */
      private boolean locked_ ;
      
      /**
       * <code>optional bool locked = 3;</code>.
       *
       * @return true, if successful
       */
      public boolean hasLocked() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional bool locked = 3;</code>.
       *
       * @return the locked
       */
      public boolean getLocked() {
        return locked_;
      }
      
      /**
       * <code>optional bool locked = 3;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setLocked(boolean value) {
        bitField0_ |= 0x00000004;
        locked_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool locked = 3;</code>.
       *
       * @return the builder
       */
      public Builder clearLocked() {
        bitField0_ = (bitField0_ & ~0x00000004);
        locked_ = false;
        onChanged();
        return this;
      }

      // optional bool background = 4;
      /** The background_. */
      private boolean background_ ;
      
      /**
       * <code>optional bool background = 4;</code>.
       *
       * @return true, if successful
       */
      public boolean hasBackground() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional bool background = 4;</code>.
       *
       * @return the background
       */
      public boolean getBackground() {
        return background_;
      }
      
      /**
       * <code>optional bool background = 4;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setBackground(boolean value) {
        bitField0_ |= 0x00000008;
        background_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool background = 4;</code>.
       *
       * @return the builder
       */
      public Builder clearBackground() {
        bitField0_ = (bitField0_ & ~0x00000008);
        background_ = false;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;
      /** The background resource file_. */
      private com.laex.cg2d.protobuf.GameObject.CGResourceFile backgroundResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
      
      /** The background resource file builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> backgroundResourceFileBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
       *
       * @return true, if successful
       */
      public boolean hasBackgroundResourceFile() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
       *
       * @return the background resource file
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFile getBackgroundResourceFile() {
        if (backgroundResourceFileBuilder_ == null) {
          return backgroundResourceFile_;
        } else {
          return backgroundResourceFileBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setBackgroundResourceFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (backgroundResourceFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backgroundResourceFile_ = value;
          onChanged();
        } else {
          backgroundResourceFileBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setBackgroundResourceFile(
          com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder builderForValue) {
        if (backgroundResourceFileBuilder_ == null) {
          backgroundResourceFile_ = builderForValue.build();
          onChanged();
        } else {
          backgroundResourceFileBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeBackgroundResourceFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (backgroundResourceFileBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              backgroundResourceFile_ != com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance()) {
            backgroundResourceFile_ =
              com.laex.cg2d.protobuf.GameObject.CGResourceFile.newBuilder(backgroundResourceFile_).mergeFrom(value).buildPartial();
          } else {
            backgroundResourceFile_ = value;
          }
          onChanged();
        } else {
          backgroundResourceFileBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
       *
       * @return the builder
       */
      public Builder clearBackgroundResourceFile() {
        if (backgroundResourceFileBuilder_ == null) {
          backgroundResourceFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
          onChanged();
        } else {
          backgroundResourceFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
       *
       * @return the background resource file builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder getBackgroundResourceFileBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getBackgroundResourceFileFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
       *
       * @return the background resource file or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getBackgroundResourceFileOrBuilder() {
        if (backgroundResourceFileBuilder_ != null) {
          return backgroundResourceFileBuilder_.getMessageOrBuilder();
        } else {
          return backgroundResourceFile_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile backgroundResourceFile = 5;</code>
       *
       * @return the background resource file field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> 
          getBackgroundResourceFileFieldBuilder() {
        if (backgroundResourceFileBuilder_ == null) {
          backgroundResourceFileBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder>(
                  backgroundResourceFile_,
                  getParentForChildren(),
                  isClean());
          backgroundResourceFile_ = null;
        }
        return backgroundResourceFileBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;
      /** The editor shape type_. */
      private com.laex.cg2d.protobuf.GameObject.CGEditorShapeType editorShapeType_ = com.laex.cg2d.protobuf.GameObject.CGEditorShapeType.SIMPLE_SHAPE_CIRCLE;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;</code>
       *
       * @return true, if successful
       */
      public boolean hasEditorShapeType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;</code>
       *
       * @return the editor shape type
       */
      public com.laex.cg2d.protobuf.GameObject.CGEditorShapeType getEditorShapeType() {
        return editorShapeType_;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setEditorShapeType(com.laex.cg2d.protobuf.GameObject.CGEditorShapeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        editorShapeType_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGEditorShapeType editorShapeType = 6;</code>
       *
       * @return the builder
       */
      public Builder clearEditorShapeType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        editorShapeType_ = com.laex.cg2d.protobuf.GameObject.CGEditorShapeType.SIMPLE_SHAPE_CIRCLE;
        onChanged();
        return this;
      }

      // optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;
      /** The bounds_. */
      private com.laex.cg2d.protobuf.GameObject.CGBounds bounds_ = com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance();
      
      /** The bounds builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGBounds, com.laex.cg2d.protobuf.GameObject.CGBounds.Builder, com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder> boundsBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
       *
       * @return true, if successful
       */
      public boolean hasBounds() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
       *
       * @return the bounds
       */
      public com.laex.cg2d.protobuf.GameObject.CGBounds getBounds() {
        if (boundsBuilder_ == null) {
          return bounds_;
        } else {
          return boundsBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setBounds(com.laex.cg2d.protobuf.GameObject.CGBounds value) {
        if (boundsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bounds_ = value;
          onChanged();
        } else {
          boundsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setBounds(
          com.laex.cg2d.protobuf.GameObject.CGBounds.Builder builderForValue) {
        if (boundsBuilder_ == null) {
          bounds_ = builderForValue.build();
          onChanged();
        } else {
          boundsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeBounds(com.laex.cg2d.protobuf.GameObject.CGBounds value) {
        if (boundsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              bounds_ != com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance()) {
            bounds_ =
              com.laex.cg2d.protobuf.GameObject.CGBounds.newBuilder(bounds_).mergeFrom(value).buildPartial();
          } else {
            bounds_ = value;
          }
          onChanged();
        } else {
          boundsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
       *
       * @return the builder
       */
      public Builder clearBounds() {
        if (boundsBuilder_ == null) {
          bounds_ = com.laex.cg2d.protobuf.GameObject.CGBounds.getDefaultInstance();
          onChanged();
        } else {
          boundsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
       *
       * @return the bounds builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGBounds.Builder getBoundsBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getBoundsFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
       *
       * @return the bounds or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder getBoundsOrBuilder() {
        if (boundsBuilder_ != null) {
          return boundsBuilder_.getMessageOrBuilder();
        } else {
          return bounds_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBounds bounds = 7;</code>
       *
       * @return the bounds field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGBounds, com.laex.cg2d.protobuf.GameObject.CGBounds.Builder, com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder> 
          getBoundsFieldBuilder() {
        if (boundsBuilder_ == null) {
          boundsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGBounds, com.laex.cg2d.protobuf.GameObject.CGBounds.Builder, com.laex.cg2d.protobuf.GameObject.CGBoundsOrBuilder>(
                  bounds_,
                  getParentForChildren(),
                  isClean());
          bounds_ = null;
        }
        return boundsBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;
      /** The body def_. */
      private com.laex.cg2d.protobuf.GameObject.CGBodyDef bodyDef_ = com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance();
      
      /** The body def builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGBodyDef, com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder, com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder> bodyDefBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
       *
       * @return true, if successful
       */
      public boolean hasBodyDef() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
       *
       * @return the body def
       */
      public com.laex.cg2d.protobuf.GameObject.CGBodyDef getBodyDef() {
        if (bodyDefBuilder_ == null) {
          return bodyDef_;
        } else {
          return bodyDefBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setBodyDef(com.laex.cg2d.protobuf.GameObject.CGBodyDef value) {
        if (bodyDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bodyDef_ = value;
          onChanged();
        } else {
          bodyDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setBodyDef(
          com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder builderForValue) {
        if (bodyDefBuilder_ == null) {
          bodyDef_ = builderForValue.build();
          onChanged();
        } else {
          bodyDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeBodyDef(com.laex.cg2d.protobuf.GameObject.CGBodyDef value) {
        if (bodyDefBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              bodyDef_ != com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance()) {
            bodyDef_ =
              com.laex.cg2d.protobuf.GameObject.CGBodyDef.newBuilder(bodyDef_).mergeFrom(value).buildPartial();
          } else {
            bodyDef_ = value;
          }
          onChanged();
        } else {
          bodyDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
       *
       * @return the builder
       */
      public Builder clearBodyDef() {
        if (bodyDefBuilder_ == null) {
          bodyDef_ = com.laex.cg2d.protobuf.GameObject.CGBodyDef.getDefaultInstance();
          onChanged();
        } else {
          bodyDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
       *
       * @return the body def builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder getBodyDefBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getBodyDefFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
       *
       * @return the body def or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder getBodyDefOrBuilder() {
        if (bodyDefBuilder_ != null) {
          return bodyDefBuilder_.getMessageOrBuilder();
        } else {
          return bodyDef_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGBodyDef bodyDef = 8;</code>
       *
       * @return the body def field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGBodyDef, com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder, com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder> 
          getBodyDefFieldBuilder() {
        if (bodyDefBuilder_ == null) {
          bodyDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGBodyDef, com.laex.cg2d.protobuf.GameObject.CGBodyDef.Builder, com.laex.cg2d.protobuf.GameObject.CGBodyDefOrBuilder>(
                  bodyDef_,
                  getParentForChildren(),
                  isClean());
          bodyDef_ = null;
        }
        return bodyDefBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;
      /** The fixture def_. */
      private com.laex.cg2d.protobuf.GameObject.CGFixtureDef fixtureDef_ = com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance();
      
      /** The fixture def builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGFixtureDef, com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder, com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder> fixtureDefBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
       *
       * @return true, if successful
       */
      public boolean hasFixtureDef() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
       *
       * @return the fixture def
       */
      public com.laex.cg2d.protobuf.GameObject.CGFixtureDef getFixtureDef() {
        if (fixtureDefBuilder_ == null) {
          return fixtureDef_;
        } else {
          return fixtureDefBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setFixtureDef(com.laex.cg2d.protobuf.GameObject.CGFixtureDef value) {
        if (fixtureDefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fixtureDef_ = value;
          onChanged();
        } else {
          fixtureDefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setFixtureDef(
          com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder builderForValue) {
        if (fixtureDefBuilder_ == null) {
          fixtureDef_ = builderForValue.build();
          onChanged();
        } else {
          fixtureDefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeFixtureDef(com.laex.cg2d.protobuf.GameObject.CGFixtureDef value) {
        if (fixtureDefBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              fixtureDef_ != com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance()) {
            fixtureDef_ =
              com.laex.cg2d.protobuf.GameObject.CGFixtureDef.newBuilder(fixtureDef_).mergeFrom(value).buildPartial();
          } else {
            fixtureDef_ = value;
          }
          onChanged();
        } else {
          fixtureDefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
       *
       * @return the builder
       */
      public Builder clearFixtureDef() {
        if (fixtureDefBuilder_ == null) {
          fixtureDef_ = com.laex.cg2d.protobuf.GameObject.CGFixtureDef.getDefaultInstance();
          onChanged();
        } else {
          fixtureDefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
       *
       * @return the fixture def builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder getFixtureDefBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getFixtureDefFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
       *
       * @return the fixture def or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder getFixtureDefOrBuilder() {
        if (fixtureDefBuilder_ != null) {
          return fixtureDefBuilder_.getMessageOrBuilder();
        } else {
          return fixtureDef_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGFixtureDef fixtureDef = 9;</code>
       *
       * @return the fixture def field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGFixtureDef, com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder, com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder> 
          getFixtureDefFieldBuilder() {
        if (fixtureDefBuilder_ == null) {
          fixtureDefBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGFixtureDef, com.laex.cg2d.protobuf.GameObject.CGFixtureDef.Builder, com.laex.cg2d.protobuf.GameObject.CGFixtureDefOrBuilder>(
                  fixtureDef_,
                  getParentForChildren(),
                  isClean());
          fixtureDef_ = null;
        }
        return fixtureDefBuilder_;
      }

      // repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;
      /** The joints_. */
      private java.util.List<com.laex.cg2d.protobuf.GameObject.CGJoint> joints_ =
        java.util.Collections.emptyList();
      
      /**
       * Ensure joints is mutable.
       */
      private void ensureJointsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          joints_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGJoint>(joints_);
          bitField0_ |= 0x00000200;
         }
      }

      /** The joints builder_. */
      private com.google.protobuf.RepeatedFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGJoint, com.laex.cg2d.protobuf.GameObject.CGJoint.Builder, com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder> jointsBuilder_;

      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @return the joints list
       */
      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGJoint> getJointsList() {
        if (jointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(joints_);
        } else {
          return jointsBuilder_.getMessageList();
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @return the joints count
       */
      public int getJointsCount() {
        if (jointsBuilder_ == null) {
          return joints_.size();
        } else {
          return jointsBuilder_.getCount();
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @param index the index
       * @return the joints
       */
      public com.laex.cg2d.protobuf.GameObject.CGJoint getJoints(int index) {
        if (jointsBuilder_ == null) {
          return joints_.get(index);
        } else {
          return jointsBuilder_.getMessage(index);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @param index the index
       * @param value the value
       * @return the builder
       */
      public Builder setJoints(
          int index, com.laex.cg2d.protobuf.GameObject.CGJoint value) {
        if (jointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJointsIsMutable();
          joints_.set(index, value);
          onChanged();
        } else {
          jointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @param index the index
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setJoints(
          int index, com.laex.cg2d.protobuf.GameObject.CGJoint.Builder builderForValue) {
        if (jointsBuilder_ == null) {
          ensureJointsIsMutable();
          joints_.set(index, builderForValue.build());
          onChanged();
        } else {
          jointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder addJoints(com.laex.cg2d.protobuf.GameObject.CGJoint value) {
        if (jointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJointsIsMutable();
          joints_.add(value);
          onChanged();
        } else {
          jointsBuilder_.addMessage(value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @param index the index
       * @param value the value
       * @return the builder
       */
      public Builder addJoints(
          int index, com.laex.cg2d.protobuf.GameObject.CGJoint value) {
        if (jointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJointsIsMutable();
          joints_.add(index, value);
          onChanged();
        } else {
          jointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder addJoints(
          com.laex.cg2d.protobuf.GameObject.CGJoint.Builder builderForValue) {
        if (jointsBuilder_ == null) {
          ensureJointsIsMutable();
          joints_.add(builderForValue.build());
          onChanged();
        } else {
          jointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @param index the index
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder addJoints(
          int index, com.laex.cg2d.protobuf.GameObject.CGJoint.Builder builderForValue) {
        if (jointsBuilder_ == null) {
          ensureJointsIsMutable();
          joints_.add(index, builderForValue.build());
          onChanged();
        } else {
          jointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @param values the values
       * @return the builder
       */
      public Builder addAllJoints(
          java.lang.Iterable<? extends com.laex.cg2d.protobuf.GameObject.CGJoint> values) {
        if (jointsBuilder_ == null) {
          ensureJointsIsMutable();
          super.addAll(values, joints_);
          onChanged();
        } else {
          jointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @return the builder
       */
      public Builder clearJoints() {
        if (jointsBuilder_ == null) {
          joints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          jointsBuilder_.clear();
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @param index the index
       * @return the builder
       */
      public Builder removeJoints(int index) {
        if (jointsBuilder_ == null) {
          ensureJointsIsMutable();
          joints_.remove(index);
          onChanged();
        } else {
          jointsBuilder_.remove(index);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @param index the index
       * @return the joints builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGJoint.Builder getJointsBuilder(
          int index) {
        return getJointsFieldBuilder().getBuilder(index);
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @param index the index
       * @return the joints or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder getJointsOrBuilder(
          int index) {
        if (jointsBuilder_ == null) {
          return joints_.get(index);  } else {
          return jointsBuilder_.getMessageOrBuilder(index);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @return the joints or builder list
       */
      public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder> 
           getJointsOrBuilderList() {
        if (jointsBuilder_ != null) {
          return jointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(joints_);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @return the com.laex.cg2d.protobuf. game object. cg joint. builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGJoint.Builder addJointsBuilder() {
        return getJointsFieldBuilder().addBuilder(
            com.laex.cg2d.protobuf.GameObject.CGJoint.getDefaultInstance());
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @param index the index
       * @return the com.laex.cg2d.protobuf. game object. cg joint. builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGJoint.Builder addJointsBuilder(
          int index) {
        return getJointsFieldBuilder().addBuilder(
            index, com.laex.cg2d.protobuf.GameObject.CGJoint.getDefaultInstance());
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGJoint joints = 10;</code>
       *
       * @return the joints builder list
       */
      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGJoint.Builder> 
           getJointsBuilderList() {
        return getJointsFieldBuilder().getBuilderList();
      }
      
      /**
       * Gets the joints field builder.
       *
       * @return the joints field builder
       */
      private com.google.protobuf.RepeatedFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGJoint, com.laex.cg2d.protobuf.GameObject.CGJoint.Builder, com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder> 
          getJointsFieldBuilder() {
        if (jointsBuilder_ == null) {
          jointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGJoint, com.laex.cg2d.protobuf.GameObject.CGJoint.Builder, com.laex.cg2d.protobuf.GameObject.CGJointOrBuilder>(
                  joints_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          joints_ = null;
        }
        return jointsBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;
      /** The entity ref file_. */
      private com.laex.cg2d.protobuf.GameObject.CGResourceFile entityRefFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
      
      /** The entity ref file builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> entityRefFileBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
       *
       * @return true, if successful
       */
      public boolean hasEntityRefFile() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
       *
       * @return the entity ref file
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFile getEntityRefFile() {
        if (entityRefFileBuilder_ == null) {
          return entityRefFile_;
        } else {
          return entityRefFileBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setEntityRefFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (entityRefFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          entityRefFile_ = value;
          onChanged();
        } else {
          entityRefFileBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setEntityRefFile(
          com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder builderForValue) {
        if (entityRefFileBuilder_ == null) {
          entityRefFile_ = builderForValue.build();
          onChanged();
        } else {
          entityRefFileBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeEntityRefFile(com.laex.cg2d.protobuf.GameObject.CGResourceFile value) {
        if (entityRefFileBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              entityRefFile_ != com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance()) {
            entityRefFile_ =
              com.laex.cg2d.protobuf.GameObject.CGResourceFile.newBuilder(entityRefFile_).mergeFrom(value).buildPartial();
          } else {
            entityRefFile_ = value;
          }
          onChanged();
        } else {
          entityRefFileBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
       *
       * @return the builder
       */
      public Builder clearEntityRefFile() {
        if (entityRefFileBuilder_ == null) {
          entityRefFile_ = com.laex.cg2d.protobuf.GameObject.CGResourceFile.getDefaultInstance();
          onChanged();
        } else {
          entityRefFileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
       *
       * @return the entity ref file builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder getEntityRefFileBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getEntityRefFileFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
       *
       * @return the entity ref file or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder getEntityRefFileOrBuilder() {
        if (entityRefFileBuilder_ != null) {
          return entityRefFileBuilder_.getMessageOrBuilder();
        } else {
          return entityRefFile_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGResourceFile entityRefFile = 11;</code>
       *
       * @return the entity ref file field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder> 
          getEntityRefFileFieldBuilder() {
        if (entityRefFileBuilder_ == null) {
          entityRefFileBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGResourceFile, com.laex.cg2d.protobuf.GameObject.CGResourceFile.Builder, com.laex.cg2d.protobuf.GameObject.CGResourceFileOrBuilder>(
                  entityRefFile_,
                  getParentForChildren(),
                  isClean());
          entityRefFile_ = null;
        }
        return entityRefFileBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGShape)
    }

    static {
      defaultInstance = new CGShape(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGShape)
  }

  /**
   * The Interface CGLayerOrBuilder.
   */
  public interface CGLayerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>.
     *
     * @return true, if successful
     */
    boolean hasId();
    
    /**
     * <code>optional int32 id = 1;</code>.
     *
     * @return the id
     */
    int getId();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>.
     *
     * @return true, if successful
     */
    boolean hasName();
    
    /**
     * <code>optional string name = 2;</code>.
     *
     * @return the name
     */
    java.lang.String getName();
    
    /**
     * <code>optional string name = 2;</code>.
     *
     * @return the name bytes
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional bool visible = 3;
    /**
     * <code>optional bool visible = 3;</code>.
     *
     * @return true, if successful
     */
    boolean hasVisible();
    
    /**
     * <code>optional bool visible = 3;</code>.
     *
     * @return the visible
     */
    boolean getVisible();

    // optional bool locked = 4;
    /**
     * <code>optional bool locked = 4;</code>.
     *
     * @return true, if successful
     */
    boolean hasLocked();
    
    /**
     * <code>optional bool locked = 4;</code>.
     *
     * @return the locked
     */
    boolean getLocked();

    // repeated .com.laex.cg2d.protobuf.CGShape shape = 5;
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
     *
     * @return the shape list
     */
    java.util.List<com.laex.cg2d.protobuf.GameObject.CGShape> 
        getShapeList();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
     *
     * @param index the index
     * @return the shape
     */
    com.laex.cg2d.protobuf.GameObject.CGShape getShape(int index);
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
     *
     * @return the shape count
     */
    int getShapeCount();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
     *
     * @return the shape or builder list
     */
    java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder> 
        getShapeOrBuilderList();
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
     *
     * @param index the index
     * @return the shape or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder getShapeOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGLayer}
   */
  public static final class CGLayer extends
      com.google.protobuf.GeneratedMessage
      implements CGLayerOrBuilder {
    // Use CGLayer.newBuilder() to construct.
    /**
     * Instantiates a new cG layer.
     *
     * @param builder the builder
     */
    private CGLayer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG layer.
     *
     * @param noInit the no init
     */
    private CGLayer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGLayer defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGLayer getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGLayer getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG layer.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGLayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              visible_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              locked_ = input.readBool();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                shape_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGShape>();
                mutable_bitField0_ |= 0x00000010;
              }
              shape_.add(input.readMessage(com.laex.cg2d.protobuf.GameObject.CGShape.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGLayer_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGLayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGLayer.class, com.laex.cg2d.protobuf.GameObject.CGLayer.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGLayer> PARSER =
        new com.google.protobuf.AbstractParser<CGLayer>() {
      public CGLayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGLayer(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGLayer> getParserForType() {
      return PARSER;
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional int32 id = 1;
    /** The Constant ID_FIELD_NUMBER. */
    public static final int ID_FIELD_NUMBER = 1;
    
    /** The id_. */
    private int id_;
    
    /**
     * <code>optional int32 id = 1;</code>.
     *
     * @return true, if successful
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional int32 id = 1;</code>.
     *
     * @return the id
     */
    public int getId() {
      return id_;
    }

    // optional string name = 2;
    /** The Constant NAME_FIELD_NUMBER. */
    public static final int NAME_FIELD_NUMBER = 2;
    
    /** The name_. */
    private java.lang.Object name_;
    
    /**
     * <code>optional string name = 2;</code>.
     *
     * @return true, if successful
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional string name = 2;</code>.
     *
     * @return the name
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    
    /**
     * <code>optional string name = 2;</code>.
     *
     * @return the name bytes
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool visible = 3;
    /** The Constant VISIBLE_FIELD_NUMBER. */
    public static final int VISIBLE_FIELD_NUMBER = 3;
    
    /** The visible_. */
    private boolean visible_;
    
    /**
     * <code>optional bool visible = 3;</code>.
     *
     * @return true, if successful
     */
    public boolean hasVisible() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional bool visible = 3;</code>.
     *
     * @return the visible
     */
    public boolean getVisible() {
      return visible_;
    }

    // optional bool locked = 4;
    /** The Constant LOCKED_FIELD_NUMBER. */
    public static final int LOCKED_FIELD_NUMBER = 4;
    
    /** The locked_. */
    private boolean locked_;
    
    /**
     * <code>optional bool locked = 4;</code>.
     *
     * @return true, if successful
     */
    public boolean hasLocked() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    
    /**
     * <code>optional bool locked = 4;</code>.
     *
     * @return the locked
     */
    public boolean getLocked() {
      return locked_;
    }

    // repeated .com.laex.cg2d.protobuf.CGShape shape = 5;
    /** The Constant SHAPE_FIELD_NUMBER. */
    public static final int SHAPE_FIELD_NUMBER = 5;
    
    /** The shape_. */
    private java.util.List<com.laex.cg2d.protobuf.GameObject.CGShape> shape_;
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
     *
     * @return the shape list
     */
    public java.util.List<com.laex.cg2d.protobuf.GameObject.CGShape> getShapeList() {
      return shape_;
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
     *
     * @return the shape or builder list
     */
    public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder> 
        getShapeOrBuilderList() {
      return shape_;
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
     *
     * @return the shape count
     */
    public int getShapeCount() {
      return shape_.size();
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
     *
     * @param index the index
     * @return the shape
     */
    public com.laex.cg2d.protobuf.GameObject.CGShape getShape(int index) {
      return shape_.get(index);
    }
    
    /**
     * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
     *
     * @param index the index
     * @return the shape or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder getShapeOrBuilder(
        int index) {
      return shape_.get(index);
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      id_ = 0;
      name_ = "";
      visible_ = false;
      locked_ = false;
      shape_ = java.util.Collections.emptyList();
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getShapeCount(); i++) {
        if (!getShape(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, visible_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, locked_);
      }
      for (int i = 0; i < shape_.size(); i++) {
        output.writeMessage(5, shape_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, visible_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, locked_);
      }
      for (int i = 0; i < shape_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, shape_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg layer
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg layer
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg layer
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg layer
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg layer
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg layer
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg layer
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg layer
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg layer
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg layer
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGLayer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGLayerOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGLayer_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGLayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGLayer.class, com.laex.cg2d.protobuf.GameObject.CGLayer.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGLayer.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getShapeFieldBuilder();
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        visible_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        locked_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (shapeBuilder_ == null) {
          shape_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          shapeBuilder_.clear();
        }
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGLayer_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGLayer getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGLayer.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGLayer build() {
        com.laex.cg2d.protobuf.GameObject.CGLayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGLayer buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGLayer result = new com.laex.cg2d.protobuf.GameObject.CGLayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.visible_ = visible_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.locked_ = locked_;
        if (shapeBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            shape_ = java.util.Collections.unmodifiableList(shape_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.shape_ = shape_;
        } else {
          result.shape_ = shapeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGLayer) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGLayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGLayer other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGLayer.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasVisible()) {
          setVisible(other.getVisible());
        }
        if (other.hasLocked()) {
          setLocked(other.getLocked());
        }
        if (shapeBuilder_ == null) {
          if (!other.shape_.isEmpty()) {
            if (shape_.isEmpty()) {
              shape_ = other.shape_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureShapeIsMutable();
              shape_.addAll(other.shape_);
            }
            onChanged();
          }
        } else {
          if (!other.shape_.isEmpty()) {
            if (shapeBuilder_.isEmpty()) {
              shapeBuilder_.dispose();
              shapeBuilder_ = null;
              shape_ = other.shape_;
              bitField0_ = (bitField0_ & ~0x00000010);
              shapeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getShapeFieldBuilder() : null;
            } else {
              shapeBuilder_.addAllMessages(other.shape_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        for (int i = 0; i < getShapeCount(); i++) {
          if (!getShape(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGLayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGLayer) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional int32 id = 1;
      /** The id_. */
      private int id_ ;
      
      /**
       * <code>optional int32 id = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional int32 id = 1;</code>.
       *
       * @return the id
       */
      public int getId() {
        return id_;
      }
      
      /**
       * <code>optional int32 id = 1;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional int32 id = 1;</code>.
       *
       * @return the builder
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional string name = 2;
      /** The name_. */
      private java.lang.Object name_ = "";
      
      /**
       * <code>optional string name = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional string name = 2;</code>.
       *
       * @return the name
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      
      /**
       * <code>optional string name = 2;</code>.
       *
       * @return the name bytes
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      /**
       * <code>optional string name = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string name = 2;</code>.
       *
       * @return the builder
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      
      /**
       * <code>optional string name = 2;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional bool visible = 3;
      /** The visible_. */
      private boolean visible_ ;
      
      /**
       * <code>optional bool visible = 3;</code>.
       *
       * @return true, if successful
       */
      public boolean hasVisible() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional bool visible = 3;</code>.
       *
       * @return the visible
       */
      public boolean getVisible() {
        return visible_;
      }
      
      /**
       * <code>optional bool visible = 3;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setVisible(boolean value) {
        bitField0_ |= 0x00000004;
        visible_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool visible = 3;</code>.
       *
       * @return the builder
       */
      public Builder clearVisible() {
        bitField0_ = (bitField0_ & ~0x00000004);
        visible_ = false;
        onChanged();
        return this;
      }

      // optional bool locked = 4;
      /** The locked_. */
      private boolean locked_ ;
      
      /**
       * <code>optional bool locked = 4;</code>.
       *
       * @return true, if successful
       */
      public boolean hasLocked() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional bool locked = 4;</code>.
       *
       * @return the locked
       */
      public boolean getLocked() {
        return locked_;
      }
      
      /**
       * <code>optional bool locked = 4;</code>.
       *
       * @param value the value
       * @return the builder
       */
      public Builder setLocked(boolean value) {
        bitField0_ |= 0x00000008;
        locked_ = value;
        onChanged();
        return this;
      }
      
      /**
       * <code>optional bool locked = 4;</code>.
       *
       * @return the builder
       */
      public Builder clearLocked() {
        bitField0_ = (bitField0_ & ~0x00000008);
        locked_ = false;
        onChanged();
        return this;
      }

      // repeated .com.laex.cg2d.protobuf.CGShape shape = 5;
      /** The shape_. */
      private java.util.List<com.laex.cg2d.protobuf.GameObject.CGShape> shape_ =
        java.util.Collections.emptyList();
      
      /**
       * Ensure shape is mutable.
       */
      private void ensureShapeIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          shape_ = new java.util.ArrayList<com.laex.cg2d.protobuf.GameObject.CGShape>(shape_);
          bitField0_ |= 0x00000010;
         }
      }

      /** The shape builder_. */
      private com.google.protobuf.RepeatedFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGShape, com.laex.cg2d.protobuf.GameObject.CGShape.Builder, com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder> shapeBuilder_;

      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @return the shape list
       */
      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGShape> getShapeList() {
        if (shapeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shape_);
        } else {
          return shapeBuilder_.getMessageList();
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @return the shape count
       */
      public int getShapeCount() {
        if (shapeBuilder_ == null) {
          return shape_.size();
        } else {
          return shapeBuilder_.getCount();
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @param index the index
       * @return the shape
       */
      public com.laex.cg2d.protobuf.GameObject.CGShape getShape(int index) {
        if (shapeBuilder_ == null) {
          return shape_.get(index);
        } else {
          return shapeBuilder_.getMessage(index);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @param index the index
       * @param value the value
       * @return the builder
       */
      public Builder setShape(
          int index, com.laex.cg2d.protobuf.GameObject.CGShape value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapeIsMutable();
          shape_.set(index, value);
          onChanged();
        } else {
          shapeBuilder_.setMessage(index, value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @param index the index
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setShape(
          int index, com.laex.cg2d.protobuf.GameObject.CGShape.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          ensureShapeIsMutable();
          shape_.set(index, builderForValue.build());
          onChanged();
        } else {
          shapeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder addShape(com.laex.cg2d.protobuf.GameObject.CGShape value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapeIsMutable();
          shape_.add(value);
          onChanged();
        } else {
          shapeBuilder_.addMessage(value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @param index the index
       * @param value the value
       * @return the builder
       */
      public Builder addShape(
          int index, com.laex.cg2d.protobuf.GameObject.CGShape value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapeIsMutable();
          shape_.add(index, value);
          onChanged();
        } else {
          shapeBuilder_.addMessage(index, value);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder addShape(
          com.laex.cg2d.protobuf.GameObject.CGShape.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          ensureShapeIsMutable();
          shape_.add(builderForValue.build());
          onChanged();
        } else {
          shapeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @param index the index
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder addShape(
          int index, com.laex.cg2d.protobuf.GameObject.CGShape.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          ensureShapeIsMutable();
          shape_.add(index, builderForValue.build());
          onChanged();
        } else {
          shapeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @param values the values
       * @return the builder
       */
      public Builder addAllShape(
          java.lang.Iterable<? extends com.laex.cg2d.protobuf.GameObject.CGShape> values) {
        if (shapeBuilder_ == null) {
          ensureShapeIsMutable();
          super.addAll(values, shape_);
          onChanged();
        } else {
          shapeBuilder_.addAllMessages(values);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @return the builder
       */
      public Builder clearShape() {
        if (shapeBuilder_ == null) {
          shape_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          shapeBuilder_.clear();
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @param index the index
       * @return the builder
       */
      public Builder removeShape(int index) {
        if (shapeBuilder_ == null) {
          ensureShapeIsMutable();
          shape_.remove(index);
          onChanged();
        } else {
          shapeBuilder_.remove(index);
        }
        return this;
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @param index the index
       * @return the shape builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGShape.Builder getShapeBuilder(
          int index) {
        return getShapeFieldBuilder().getBuilder(index);
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @param index the index
       * @return the shape or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder getShapeOrBuilder(
          int index) {
        if (shapeBuilder_ == null) {
          return shape_.get(index);  } else {
          return shapeBuilder_.getMessageOrBuilder(index);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @return the shape or builder list
       */
      public java.util.List<? extends com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder> 
           getShapeOrBuilderList() {
        if (shapeBuilder_ != null) {
          return shapeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shape_);
        }
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @return the com.laex.cg2d.protobuf. game object. cg shape. builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGShape.Builder addShapeBuilder() {
        return getShapeFieldBuilder().addBuilder(
            com.laex.cg2d.protobuf.GameObject.CGShape.getDefaultInstance());
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @param index the index
       * @return the com.laex.cg2d.protobuf. game object. cg shape. builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGShape.Builder addShapeBuilder(
          int index) {
        return getShapeFieldBuilder().addBuilder(
            index, com.laex.cg2d.protobuf.GameObject.CGShape.getDefaultInstance());
      }
      
      /**
       * <code>repeated .com.laex.cg2d.protobuf.CGShape shape = 5;</code>
       *
       * @return the shape builder list
       */
      public java.util.List<com.laex.cg2d.protobuf.GameObject.CGShape.Builder> 
           getShapeBuilderList() {
        return getShapeFieldBuilder().getBuilderList();
      }
      
      /**
       * Gets the shape field builder.
       *
       * @return the shape field builder
       */
      private com.google.protobuf.RepeatedFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGShape, com.laex.cg2d.protobuf.GameObject.CGShape.Builder, com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder> 
          getShapeFieldBuilder() {
        if (shapeBuilder_ == null) {
          shapeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGShape, com.laex.cg2d.protobuf.GameObject.CGShape.Builder, com.laex.cg2d.protobuf.GameObject.CGShapeOrBuilder>(
                  shape_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          shape_ = null;
        }
        return shapeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGLayer)
    }

    static {
      defaultInstance = new CGLayer(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGLayer)
  }

  /**
   * The Interface CGScreenPreferencesOrBuilder.
   */
  public interface CGScreenPreferencesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
     *
     * @return true, if successful
     */
    boolean hasDebugDrawPrefs();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
     *
     * @return the debug draw prefs
     */
    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences getDebugDrawPrefs();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
     *
     * @return the debug draw prefs or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder getDebugDrawPrefsOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
     *
     * @return true, if successful
     */
    boolean hasWorldPrefs();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
     *
     * @return the world prefs
     */
    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences getWorldPrefs();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
     *
     * @return the world prefs or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder getWorldPrefsOrBuilder();

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
     *
     * @return true, if successful
     */
    boolean hasCardPrefs();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
     *
     * @return the card prefs
     */
    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences getCardPrefs();
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
     *
     * @return the card prefs or builder
     */
    com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder getCardPrefsOrBuilder();
  }
  /**
   * Protobuf type {@code com.laex.cg2d.protobuf.CGScreenPreferences}
   */
  public static final class CGScreenPreferences extends
      com.google.protobuf.GeneratedMessage
      implements CGScreenPreferencesOrBuilder {
    // Use CGScreenPreferences.newBuilder() to construct.
    /**
     * Instantiates a new cG screen preferences.
     *
     * @param builder the builder
     */
    private CGScreenPreferences(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    
    /**
     * Instantiates a new cG screen preferences.
     *
     * @param noInit the no init
     */
    private CGScreenPreferences(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    /** The Constant defaultInstance. */
    private static final CGScreenPreferences defaultInstance;
    
    /**
     * Gets the default instance.
     *
     * @return the default instance
     */
    public static CGScreenPreferences getDefaultInstance() {
      return defaultInstance;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
     */
    public CGScreenPreferences getDefaultInstanceForType() {
      return defaultInstance;
    }

    /** The unknown fields. */
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
     */
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    
    /**
     * Instantiates a new cG screen preferences.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    private CGScreenPreferences(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = debugDrawPrefs_.toBuilder();
              }
              debugDrawPrefs_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(debugDrawPrefs_);
                debugDrawPrefs_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = worldPrefs_.toBuilder();
              }
              worldPrefs_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(worldPrefs_);
                worldPrefs_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = cardPrefs_.toBuilder();
              }
              cardPrefs_ = input.readMessage(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cardPrefs_);
                cardPrefs_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    
    /**
     * Gets the descriptor.
     *
     * @return the descriptor
     */
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
     */
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.class, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder.class);
    }

    /** The parser. */
    public static com.google.protobuf.Parser<CGScreenPreferences> PARSER =
        new com.google.protobuf.AbstractParser<CGScreenPreferences>() {
      public CGScreenPreferences parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGScreenPreferences(input, extensionRegistry);
      }
    };

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#getParserForType()
     */
    @java.lang.Override
    public com.google.protobuf.Parser<CGScreenPreferences> getParserForType() {
      return PARSER;
    }

    /**
     * The Interface DebugDrawPreferencesOrBuilder.
     */
    public interface DebugDrawPreferencesOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional bool drawBodies = 1;
      /**
       * <code>optional bool drawBodies = 1;</code>.
       *
       * @return true, if successful
       */
      boolean hasDrawBodies();
      
      /**
       * <code>optional bool drawBodies = 1;</code>.
       *
       * @return the draw bodies
       */
      boolean getDrawBodies();

      // optional bool drawJoints = 2;
      /**
       * <code>optional bool drawJoints = 2;</code>.
       *
       * @return true, if successful
       */
      boolean hasDrawJoints();
      
      /**
       * <code>optional bool drawJoints = 2;</code>.
       *
       * @return the draw joints
       */
      boolean getDrawJoints();

      // optional bool drawAABB = 3;
      /**
       * <code>optional bool drawAABB = 3;</code>.
       *
       * @return true, if successful
       */
      boolean hasDrawAABB();
      
      /**
       * <code>optional bool drawAABB = 3;</code>.
       *
       * @return the draw aabb
       */
      boolean getDrawAABB();

      // optional bool drawInactiveBodies = 4;
      /**
       * <code>optional bool drawInactiveBodies = 4;</code>.
       *
       * @return true, if successful
       */
      boolean hasDrawInactiveBodies();
      
      /**
       * <code>optional bool drawInactiveBodies = 4;</code>.
       *
       * @return the draw inactive bodies
       */
      boolean getDrawInactiveBodies();

      // optional bool installMouseJoint = 5;
      /**
       * <code>optional bool installMouseJoint = 5;</code>.
       *
       * @return true, if successful
       */
      boolean hasInstallMouseJoint();
      
      /**
       * <code>optional bool installMouseJoint = 5;</code>.
       *
       * @return the install mouse joint
       */
      boolean getInstallMouseJoint();

      // optional bool drawDebugData = 6;
      /**
       * <code>optional bool drawDebugData = 6;</code>.
       *
       * @return true, if successful
       */
      boolean hasDrawDebugData();
      
      /**
       * <code>optional bool drawDebugData = 6;</code>.
       *
       * @return the draw debug data
       */
      boolean getDrawDebugData();

      // optional bool drawEntities = 7;
      /**
       * <code>optional bool drawEntities = 7;</code>.
       *
       * @return true, if successful
       */
      boolean hasDrawEntities();
      
      /**
       * <code>optional bool drawEntities = 7;</code>.
       *
       * @return the draw entities
       */
      boolean getDrawEntities();
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences}
     */
    public static final class DebugDrawPreferences extends
        com.google.protobuf.GeneratedMessage
        implements DebugDrawPreferencesOrBuilder {
      // Use DebugDrawPreferences.newBuilder() to construct.
      /**
       * Instantiates a new debug draw preferences.
       *
       * @param builder the builder
       */
      private DebugDrawPreferences(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      
      /**
       * Instantiates a new debug draw preferences.
       *
       * @param noInit the no init
       */
      private DebugDrawPreferences(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      /** The Constant defaultInstance. */
      private static final DebugDrawPreferences defaultInstance;
      
      /**
       * Gets the default instance.
       *
       * @return the default instance
       */
      public static DebugDrawPreferences getDefaultInstance() {
        return defaultInstance;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public DebugDrawPreferences getDefaultInstanceForType() {
        return defaultInstance;
      }

      /** The unknown fields. */
      private final com.google.protobuf.UnknownFieldSet unknownFields;
      
      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
       */
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      
      /**
       * Instantiates a new debug draw preferences.
       *
       * @param input the input
       * @param extensionRegistry the extension registry
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      private DebugDrawPreferences(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                drawBodies_ = input.readBool();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                drawJoints_ = input.readBool();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                drawAABB_ = input.readBool();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                drawInactiveBodies_ = input.readBool();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                installMouseJoint_ = input.readBool();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                drawDebugData_ = input.readBool();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                drawEntities_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.class, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder.class);
      }

      /** The parser. */
      public static com.google.protobuf.Parser<DebugDrawPreferences> PARSER =
          new com.google.protobuf.AbstractParser<DebugDrawPreferences>() {
        public DebugDrawPreferences parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugDrawPreferences(input, extensionRegistry);
        }
      };

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#getParserForType()
       */
      @java.lang.Override
      public com.google.protobuf.Parser<DebugDrawPreferences> getParserForType() {
        return PARSER;
      }

      /** The bit field0_. */
      private int bitField0_;
      // optional bool drawBodies = 1;
      /** The Constant DRAWBODIES_FIELD_NUMBER. */
      public static final int DRAWBODIES_FIELD_NUMBER = 1;
      
      /** The draw bodies_. */
      private boolean drawBodies_;
      
      /**
       * <code>optional bool drawBodies = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasDrawBodies() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional bool drawBodies = 1;</code>.
       *
       * @return the draw bodies
       */
      public boolean getDrawBodies() {
        return drawBodies_;
      }

      // optional bool drawJoints = 2;
      /** The Constant DRAWJOINTS_FIELD_NUMBER. */
      public static final int DRAWJOINTS_FIELD_NUMBER = 2;
      
      /** The draw joints_. */
      private boolean drawJoints_;
      
      /**
       * <code>optional bool drawJoints = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasDrawJoints() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional bool drawJoints = 2;</code>.
       *
       * @return the draw joints
       */
      public boolean getDrawJoints() {
        return drawJoints_;
      }

      // optional bool drawAABB = 3;
      /** The Constant DRAWAABB_FIELD_NUMBER. */
      public static final int DRAWAABB_FIELD_NUMBER = 3;
      
      /** The draw aab b_. */
      private boolean drawAABB_;
      
      /**
       * <code>optional bool drawAABB = 3;</code>.
       *
       * @return true, if successful
       */
      public boolean hasDrawAABB() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional bool drawAABB = 3;</code>.
       *
       * @return the draw aabb
       */
      public boolean getDrawAABB() {
        return drawAABB_;
      }

      // optional bool drawInactiveBodies = 4;
      /** The Constant DRAWINACTIVEBODIES_FIELD_NUMBER. */
      public static final int DRAWINACTIVEBODIES_FIELD_NUMBER = 4;
      
      /** The draw inactive bodies_. */
      private boolean drawInactiveBodies_;
      
      /**
       * <code>optional bool drawInactiveBodies = 4;</code>.
       *
       * @return true, if successful
       */
      public boolean hasDrawInactiveBodies() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional bool drawInactiveBodies = 4;</code>.
       *
       * @return the draw inactive bodies
       */
      public boolean getDrawInactiveBodies() {
        return drawInactiveBodies_;
      }

      // optional bool installMouseJoint = 5;
      /** The Constant INSTALLMOUSEJOINT_FIELD_NUMBER. */
      public static final int INSTALLMOUSEJOINT_FIELD_NUMBER = 5;
      
      /** The install mouse joint_. */
      private boolean installMouseJoint_;
      
      /**
       * <code>optional bool installMouseJoint = 5;</code>.
       *
       * @return true, if successful
       */
      public boolean hasInstallMouseJoint() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      
      /**
       * <code>optional bool installMouseJoint = 5;</code>.
       *
       * @return the install mouse joint
       */
      public boolean getInstallMouseJoint() {
        return installMouseJoint_;
      }

      // optional bool drawDebugData = 6;
      /** The Constant DRAWDEBUGDATA_FIELD_NUMBER. */
      public static final int DRAWDEBUGDATA_FIELD_NUMBER = 6;
      
      /** The draw debug data_. */
      private boolean drawDebugData_;
      
      /**
       * <code>optional bool drawDebugData = 6;</code>.
       *
       * @return true, if successful
       */
      public boolean hasDrawDebugData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      
      /**
       * <code>optional bool drawDebugData = 6;</code>.
       *
       * @return the draw debug data
       */
      public boolean getDrawDebugData() {
        return drawDebugData_;
      }

      // optional bool drawEntities = 7;
      /** The Constant DRAWENTITIES_FIELD_NUMBER. */
      public static final int DRAWENTITIES_FIELD_NUMBER = 7;
      
      /** The draw entities_. */
      private boolean drawEntities_;
      
      /**
       * <code>optional bool drawEntities = 7;</code>.
       *
       * @return true, if successful
       */
      public boolean hasDrawEntities() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      
      /**
       * <code>optional bool drawEntities = 7;</code>.
       *
       * @return the draw entities
       */
      public boolean getDrawEntities() {
        return drawEntities_;
      }

      /**
       * Inits the fields.
       */
      private void initFields() {
        drawBodies_ = false;
        drawJoints_ = false;
        drawAABB_ = false;
        drawInactiveBodies_ = false;
        installMouseJoint_ = false;
        drawDebugData_ = false;
        drawEntities_ = false;
      }
      
      /** The memoized is initialized. */
      private byte memoizedIsInitialized = -1;
      
      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#isInitialized()
       */
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
       */
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, drawBodies_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, drawJoints_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, drawAABB_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(4, drawInactiveBodies_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, installMouseJoint_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(6, drawDebugData_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBool(7, drawEntities_);
        }
        getUnknownFields().writeTo(output);
      }

      /** The memoized serialized size. */
      private int memoizedSerializedSize = -1;
      
      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage#getSerializedSize()
       */
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, drawBodies_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, drawJoints_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, drawAABB_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, drawInactiveBodies_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, installMouseJoint_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, drawDebugData_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, drawEntities_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      /** The Constant serialVersionUID. */
      private static final long serialVersionUID = 0L;
      
      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#writeReplace()
       */
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      /**
       * Parses the from.
       *
       * @param data the data
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. debug draw preferences
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      
      /**
       * Parses the from.
       *
       * @param data the data
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. debug draw preferences
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      
      /**
       * Parses the from.
       *
       * @param data the data
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. debug draw preferences
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      
      /**
       * Parses the from.
       *
       * @param data the data
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. debug draw preferences
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      
      /**
       * Parses the from.
       *
       * @param input the input
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. debug draw preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      
      /**
       * Parses the from.
       *
       * @param input the input
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. debug draw preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      
      /**
       * Parses the delimited from.
       *
       * @param input the input
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. debug draw preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      
      /**
       * Parses the delimited from.
       *
       * @param input the input
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. debug draw preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      
      /**
       * Parses the from.
       *
       * @param input the input
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. debug draw preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      
      /**
       * Parses the from.
       *
       * @param input the input
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. debug draw preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      /**
       * New builder.
       *
       * @return the builder
       */
      public static Builder newBuilder() { return Builder.create(); }
      
      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite#newBuilderForType()
       */
      public Builder newBuilderForType() { return newBuilder(); }
      
      /**
       * New builder.
       *
       * @param prototype the prototype
       * @return the builder
       */
      public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      
      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite#toBuilder()
       */
      public Builder toBuilder() { return newBuilder(this); }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
       */
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder {
        
        /**
         * Gets the descriptor.
         *
         * @return the descriptor
         */
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_descriptor;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
         */
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.class, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder.class);
        }

        // Construct using com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.newBuilder()
        /**
         * Instantiates a new builder.
         */
        private Builder() {
          maybeForceBuilderInitialization();
        }

        /**
         * Instantiates a new builder.
         *
         * @param parent the parent
         */
        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        
        /**
         * Maybe force builder initialization.
         */
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        
        /**
         * Creates the.
         *
         * @return the builder
         */
        private static Builder create() {
          return new Builder();
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#clear()
         */
        public Builder clear() {
          super.clear();
          drawBodies_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          drawJoints_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          drawAABB_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          drawInactiveBodies_ = false;
          bitField0_ = (bitField0_ & ~0x00000008);
          installMouseJoint_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          drawDebugData_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          drawEntities_ = false;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#clone()
         */
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
         */
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_descriptor;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
         */
        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences getDefaultInstanceForType() {
          return com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.getDefaultInstance();
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.MessageLite.Builder#build()
         */
        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences build() {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.MessageLite.Builder#buildPartial()
         */
        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences buildPartial() {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences result = new com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.drawBodies_ = drawBodies_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.drawJoints_ = drawJoints_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.drawAABB_ = drawAABB_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.drawInactiveBodies_ = drawInactiveBodies_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.installMouseJoint_ = installMouseJoint_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.drawDebugData_ = drawDebugData_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.drawEntities_ = drawEntities_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
         */
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences) {
            return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        /**
         * Merge from.
         *
         * @param other the other
         * @return the builder
         */
        public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences other) {
          if (other == com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.getDefaultInstance()) return this;
          if (other.hasDrawBodies()) {
            setDrawBodies(other.getDrawBodies());
          }
          if (other.hasDrawJoints()) {
            setDrawJoints(other.getDrawJoints());
          }
          if (other.hasDrawAABB()) {
            setDrawAABB(other.getDrawAABB());
          }
          if (other.hasDrawInactiveBodies()) {
            setDrawInactiveBodies(other.getDrawInactiveBodies());
          }
          if (other.hasInstallMouseJoint()) {
            setInstallMouseJoint(other.getInstallMouseJoint());
          }
          if (other.hasDrawDebugData()) {
            setDrawDebugData(other.getDrawDebugData());
          }
          if (other.hasDrawEntities()) {
            setDrawEntities(other.getDrawEntities());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
         */
        public final boolean isInitialized() {
          return true;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
         */
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        
        /** The bit field0_. */
        private int bitField0_;

        // optional bool drawBodies = 1;
        /** The draw bodies_. */
        private boolean drawBodies_ ;
        
        /**
         * <code>optional bool drawBodies = 1;</code>.
         *
         * @return true, if successful
         */
        public boolean hasDrawBodies() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        
        /**
         * <code>optional bool drawBodies = 1;</code>.
         *
         * @return the draw bodies
         */
        public boolean getDrawBodies() {
          return drawBodies_;
        }
        
        /**
         * <code>optional bool drawBodies = 1;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setDrawBodies(boolean value) {
          bitField0_ |= 0x00000001;
          drawBodies_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional bool drawBodies = 1;</code>.
         *
         * @return the builder
         */
        public Builder clearDrawBodies() {
          bitField0_ = (bitField0_ & ~0x00000001);
          drawBodies_ = false;
          onChanged();
          return this;
        }

        // optional bool drawJoints = 2;
        /** The draw joints_. */
        private boolean drawJoints_ ;
        
        /**
         * <code>optional bool drawJoints = 2;</code>.
         *
         * @return true, if successful
         */
        public boolean hasDrawJoints() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        
        /**
         * <code>optional bool drawJoints = 2;</code>.
         *
         * @return the draw joints
         */
        public boolean getDrawJoints() {
          return drawJoints_;
        }
        
        /**
         * <code>optional bool drawJoints = 2;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setDrawJoints(boolean value) {
          bitField0_ |= 0x00000002;
          drawJoints_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional bool drawJoints = 2;</code>.
         *
         * @return the builder
         */
        public Builder clearDrawJoints() {
          bitField0_ = (bitField0_ & ~0x00000002);
          drawJoints_ = false;
          onChanged();
          return this;
        }

        // optional bool drawAABB = 3;
        /** The draw aab b_. */
        private boolean drawAABB_ ;
        
        /**
         * <code>optional bool drawAABB = 3;</code>.
         *
         * @return true, if successful
         */
        public boolean hasDrawAABB() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        
        /**
         * <code>optional bool drawAABB = 3;</code>.
         *
         * @return the draw aabb
         */
        public boolean getDrawAABB() {
          return drawAABB_;
        }
        
        /**
         * <code>optional bool drawAABB = 3;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setDrawAABB(boolean value) {
          bitField0_ |= 0x00000004;
          drawAABB_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional bool drawAABB = 3;</code>.
         *
         * @return the builder
         */
        public Builder clearDrawAABB() {
          bitField0_ = (bitField0_ & ~0x00000004);
          drawAABB_ = false;
          onChanged();
          return this;
        }

        // optional bool drawInactiveBodies = 4;
        /** The draw inactive bodies_. */
        private boolean drawInactiveBodies_ ;
        
        /**
         * <code>optional bool drawInactiveBodies = 4;</code>.
         *
         * @return true, if successful
         */
        public boolean hasDrawInactiveBodies() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        
        /**
         * <code>optional bool drawInactiveBodies = 4;</code>.
         *
         * @return the draw inactive bodies
         */
        public boolean getDrawInactiveBodies() {
          return drawInactiveBodies_;
        }
        
        /**
         * <code>optional bool drawInactiveBodies = 4;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setDrawInactiveBodies(boolean value) {
          bitField0_ |= 0x00000008;
          drawInactiveBodies_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional bool drawInactiveBodies = 4;</code>.
         *
         * @return the builder
         */
        public Builder clearDrawInactiveBodies() {
          bitField0_ = (bitField0_ & ~0x00000008);
          drawInactiveBodies_ = false;
          onChanged();
          return this;
        }

        // optional bool installMouseJoint = 5;
        /** The install mouse joint_. */
        private boolean installMouseJoint_ ;
        
        /**
         * <code>optional bool installMouseJoint = 5;</code>.
         *
         * @return true, if successful
         */
        public boolean hasInstallMouseJoint() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        
        /**
         * <code>optional bool installMouseJoint = 5;</code>.
         *
         * @return the install mouse joint
         */
        public boolean getInstallMouseJoint() {
          return installMouseJoint_;
        }
        
        /**
         * <code>optional bool installMouseJoint = 5;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setInstallMouseJoint(boolean value) {
          bitField0_ |= 0x00000010;
          installMouseJoint_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional bool installMouseJoint = 5;</code>.
         *
         * @return the builder
         */
        public Builder clearInstallMouseJoint() {
          bitField0_ = (bitField0_ & ~0x00000010);
          installMouseJoint_ = false;
          onChanged();
          return this;
        }

        // optional bool drawDebugData = 6;
        /** The draw debug data_. */
        private boolean drawDebugData_ ;
        
        /**
         * <code>optional bool drawDebugData = 6;</code>.
         *
         * @return true, if successful
         */
        public boolean hasDrawDebugData() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        
        /**
         * <code>optional bool drawDebugData = 6;</code>.
         *
         * @return the draw debug data
         */
        public boolean getDrawDebugData() {
          return drawDebugData_;
        }
        
        /**
         * <code>optional bool drawDebugData = 6;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setDrawDebugData(boolean value) {
          bitField0_ |= 0x00000020;
          drawDebugData_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional bool drawDebugData = 6;</code>.
         *
         * @return the builder
         */
        public Builder clearDrawDebugData() {
          bitField0_ = (bitField0_ & ~0x00000020);
          drawDebugData_ = false;
          onChanged();
          return this;
        }

        // optional bool drawEntities = 7;
        /** The draw entities_. */
        private boolean drawEntities_ ;
        
        /**
         * <code>optional bool drawEntities = 7;</code>.
         *
         * @return true, if successful
         */
        public boolean hasDrawEntities() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        
        /**
         * <code>optional bool drawEntities = 7;</code>.
         *
         * @return the draw entities
         */
        public boolean getDrawEntities() {
          return drawEntities_;
        }
        
        /**
         * <code>optional bool drawEntities = 7;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setDrawEntities(boolean value) {
          bitField0_ |= 0x00000040;
          drawEntities_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional bool drawEntities = 7;</code>.
         *
         * @return the builder
         */
        public Builder clearDrawEntities() {
          bitField0_ = (bitField0_ & ~0x00000040);
          drawEntities_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences)
      }

      static {
        defaultInstance = new DebugDrawPreferences(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences)
    }

    /**
     * The Interface WorldPreferencesOrBuilder.
     */
    public interface WorldPreferencesOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int32 ptmRatio = 1;
      /**
       * <code>optional int32 ptmRatio = 1;</code>.
       *
       * @return true, if successful
       */
      boolean hasPtmRatio();
      
      /**
       * <code>optional int32 ptmRatio = 1;</code>.
       *
       * @return the ptm ratio
       */
      int getPtmRatio();

      // optional int32 velocityIterations = 2;
      /**
       * <code>optional int32 velocityIterations = 2;</code>.
       *
       * @return true, if successful
       */
      boolean hasVelocityIterations();
      
      /**
       * <code>optional int32 velocityIterations = 2;</code>.
       *
       * @return the velocity iterations
       */
      int getVelocityIterations();

      // optional int32 positionIterations = 3;
      /**
       * <code>optional int32 positionIterations = 3;</code>.
       *
       * @return true, if successful
       */
      boolean hasPositionIterations();
      
      /**
       * <code>optional int32 positionIterations = 3;</code>.
       *
       * @return the position iterations
       */
      int getPositionIterations();

      // optional float timeStep = 4;
      /**
       * <code>optional float timeStep = 4;</code>.
       *
       * @return true, if successful
       */
      boolean hasTimeStep();
      
      /**
       * <code>optional float timeStep = 4;</code>.
       *
       * @return the time step
       */
      float getTimeStep();

      // optional float gravityX = 5;
      /**
       * <code>optional float gravityX = 5;</code>.
       *
       * @return true, if successful
       */
      boolean hasGravityX();
      
      /**
       * <code>optional float gravityX = 5;</code>.
       *
       * @return the gravity x
       */
      float getGravityX();

      // optional float gravityY = 6;
      /**
       * <code>optional float gravityY = 6;</code>.
       *
       * @return true, if successful
       */
      boolean hasGravityY();
      
      /**
       * <code>optional float gravityY = 6;</code>.
       *
       * @return the gravity y
       */
      float getGravityY();
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences}
     */
    public static final class WorldPreferences extends
        com.google.protobuf.GeneratedMessage
        implements WorldPreferencesOrBuilder {
      // Use WorldPreferences.newBuilder() to construct.
      /**
       * Instantiates a new world preferences.
       *
       * @param builder the builder
       */
      private WorldPreferences(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      
      /**
       * Instantiates a new world preferences.
       *
       * @param noInit the no init
       */
      private WorldPreferences(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      /** The Constant defaultInstance. */
      private static final WorldPreferences defaultInstance;
      
      /**
       * Gets the default instance.
       *
       * @return the default instance
       */
      public static WorldPreferences getDefaultInstance() {
        return defaultInstance;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public WorldPreferences getDefaultInstanceForType() {
        return defaultInstance;
      }

      /** The unknown fields. */
      private final com.google.protobuf.UnknownFieldSet unknownFields;
      
      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
       */
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      
      /**
       * Instantiates a new world preferences.
       *
       * @param input the input
       * @param extensionRegistry the extension registry
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      private WorldPreferences(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                ptmRatio_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                velocityIterations_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                positionIterations_ = input.readInt32();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                timeStep_ = input.readFloat();
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                gravityX_ = input.readFloat();
                break;
              }
              case 53: {
                bitField0_ |= 0x00000020;
                gravityY_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.class, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder.class);
      }

      /** The parser. */
      public static com.google.protobuf.Parser<WorldPreferences> PARSER =
          new com.google.protobuf.AbstractParser<WorldPreferences>() {
        public WorldPreferences parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new WorldPreferences(input, extensionRegistry);
        }
      };

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#getParserForType()
       */
      @java.lang.Override
      public com.google.protobuf.Parser<WorldPreferences> getParserForType() {
        return PARSER;
      }

      /** The bit field0_. */
      private int bitField0_;
      // optional int32 ptmRatio = 1;
      /** The Constant PTMRATIO_FIELD_NUMBER. */
      public static final int PTMRATIO_FIELD_NUMBER = 1;
      
      /** The ptm ratio_. */
      private int ptmRatio_;
      
      /**
       * <code>optional int32 ptmRatio = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasPtmRatio() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional int32 ptmRatio = 1;</code>.
       *
       * @return the ptm ratio
       */
      public int getPtmRatio() {
        return ptmRatio_;
      }

      // optional int32 velocityIterations = 2;
      /** The Constant VELOCITYITERATIONS_FIELD_NUMBER. */
      public static final int VELOCITYITERATIONS_FIELD_NUMBER = 2;
      
      /** The velocity iterations_. */
      private int velocityIterations_;
      
      /**
       * <code>optional int32 velocityIterations = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasVelocityIterations() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional int32 velocityIterations = 2;</code>.
       *
       * @return the velocity iterations
       */
      public int getVelocityIterations() {
        return velocityIterations_;
      }

      // optional int32 positionIterations = 3;
      /** The Constant POSITIONITERATIONS_FIELD_NUMBER. */
      public static final int POSITIONITERATIONS_FIELD_NUMBER = 3;
      
      /** The position iterations_. */
      private int positionIterations_;
      
      /**
       * <code>optional int32 positionIterations = 3;</code>.
       *
       * @return true, if successful
       */
      public boolean hasPositionIterations() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional int32 positionIterations = 3;</code>.
       *
       * @return the position iterations
       */
      public int getPositionIterations() {
        return positionIterations_;
      }

      // optional float timeStep = 4;
      /** The Constant TIMESTEP_FIELD_NUMBER. */
      public static final int TIMESTEP_FIELD_NUMBER = 4;
      
      /** The time step_. */
      private float timeStep_;
      
      /**
       * <code>optional float timeStep = 4;</code>.
       *
       * @return true, if successful
       */
      public boolean hasTimeStep() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional float timeStep = 4;</code>.
       *
       * @return the time step
       */
      public float getTimeStep() {
        return timeStep_;
      }

      // optional float gravityX = 5;
      /** The Constant GRAVITYX_FIELD_NUMBER. */
      public static final int GRAVITYX_FIELD_NUMBER = 5;
      
      /** The gravity x_. */
      private float gravityX_;
      
      /**
       * <code>optional float gravityX = 5;</code>.
       *
       * @return true, if successful
       */
      public boolean hasGravityX() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      
      /**
       * <code>optional float gravityX = 5;</code>.
       *
       * @return the gravity x
       */
      public float getGravityX() {
        return gravityX_;
      }

      // optional float gravityY = 6;
      /** The Constant GRAVITYY_FIELD_NUMBER. */
      public static final int GRAVITYY_FIELD_NUMBER = 6;
      
      /** The gravity y_. */
      private float gravityY_;
      
      /**
       * <code>optional float gravityY = 6;</code>.
       *
       * @return true, if successful
       */
      public boolean hasGravityY() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      
      /**
       * <code>optional float gravityY = 6;</code>.
       *
       * @return the gravity y
       */
      public float getGravityY() {
        return gravityY_;
      }

      /**
       * Inits the fields.
       */
      private void initFields() {
        ptmRatio_ = 0;
        velocityIterations_ = 0;
        positionIterations_ = 0;
        timeStep_ = 0F;
        gravityX_ = 0F;
        gravityY_ = 0F;
      }
      
      /** The memoized is initialized. */
      private byte memoizedIsInitialized = -1;
      
      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#isInitialized()
       */
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
       */
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, ptmRatio_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, velocityIterations_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, positionIterations_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, timeStep_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(5, gravityX_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeFloat(6, gravityY_);
        }
        getUnknownFields().writeTo(output);
      }

      /** The memoized serialized size. */
      private int memoizedSerializedSize = -1;
      
      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage#getSerializedSize()
       */
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, ptmRatio_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, velocityIterations_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, positionIterations_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, timeStep_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, gravityX_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(6, gravityY_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      /** The Constant serialVersionUID. */
      private static final long serialVersionUID = 0L;
      
      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#writeReplace()
       */
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      /**
       * Parses the from.
       *
       * @param data the data
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. world preferences
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      
      /**
       * Parses the from.
       *
       * @param data the data
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. world preferences
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      
      /**
       * Parses the from.
       *
       * @param data the data
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. world preferences
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      
      /**
       * Parses the from.
       *
       * @param data the data
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. world preferences
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      
      /**
       * Parses the from.
       *
       * @param input the input
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. world preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      
      /**
       * Parses the from.
       *
       * @param input the input
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. world preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      
      /**
       * Parses the delimited from.
       *
       * @param input the input
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. world preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      
      /**
       * Parses the delimited from.
       *
       * @param input the input
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. world preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      
      /**
       * Parses the from.
       *
       * @param input the input
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. world preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      
      /**
       * Parses the from.
       *
       * @param input the input
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. world preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      /**
       * New builder.
       *
       * @return the builder
       */
      public static Builder newBuilder() { return Builder.create(); }
      
      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite#newBuilderForType()
       */
      public Builder newBuilderForType() { return newBuilder(); }
      
      /**
       * New builder.
       *
       * @param prototype the prototype
       * @return the builder
       */
      public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      
      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite#toBuilder()
       */
      public Builder toBuilder() { return newBuilder(this); }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
       */
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder {
        
        /**
         * Gets the descriptor.
         *
         * @return the descriptor
         */
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_descriptor;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
         */
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.class, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder.class);
        }

        // Construct using com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.newBuilder()
        /**
         * Instantiates a new builder.
         */
        private Builder() {
          maybeForceBuilderInitialization();
        }

        /**
         * Instantiates a new builder.
         *
         * @param parent the parent
         */
        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        
        /**
         * Maybe force builder initialization.
         */
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        
        /**
         * Creates the.
         *
         * @return the builder
         */
        private static Builder create() {
          return new Builder();
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#clear()
         */
        public Builder clear() {
          super.clear();
          ptmRatio_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          velocityIterations_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          positionIterations_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          timeStep_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          gravityX_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          gravityY_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#clone()
         */
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
         */
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_descriptor;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
         */
        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences getDefaultInstanceForType() {
          return com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDefaultInstance();
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.MessageLite.Builder#build()
         */
        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences build() {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.MessageLite.Builder#buildPartial()
         */
        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences buildPartial() {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences result = new com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.ptmRatio_ = ptmRatio_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.velocityIterations_ = velocityIterations_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.positionIterations_ = positionIterations_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.timeStep_ = timeStep_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.gravityX_ = gravityX_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.gravityY_ = gravityY_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
         */
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences) {
            return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        /**
         * Merge from.
         *
         * @param other the other
         * @return the builder
         */
        public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences other) {
          if (other == com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDefaultInstance()) return this;
          if (other.hasPtmRatio()) {
            setPtmRatio(other.getPtmRatio());
          }
          if (other.hasVelocityIterations()) {
            setVelocityIterations(other.getVelocityIterations());
          }
          if (other.hasPositionIterations()) {
            setPositionIterations(other.getPositionIterations());
          }
          if (other.hasTimeStep()) {
            setTimeStep(other.getTimeStep());
          }
          if (other.hasGravityX()) {
            setGravityX(other.getGravityX());
          }
          if (other.hasGravityY()) {
            setGravityY(other.getGravityY());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
         */
        public final boolean isInitialized() {
          return true;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
         */
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        
        /** The bit field0_. */
        private int bitField0_;

        // optional int32 ptmRatio = 1;
        /** The ptm ratio_. */
        private int ptmRatio_ ;
        
        /**
         * <code>optional int32 ptmRatio = 1;</code>.
         *
         * @return true, if successful
         */
        public boolean hasPtmRatio() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        
        /**
         * <code>optional int32 ptmRatio = 1;</code>.
         *
         * @return the ptm ratio
         */
        public int getPtmRatio() {
          return ptmRatio_;
        }
        
        /**
         * <code>optional int32 ptmRatio = 1;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setPtmRatio(int value) {
          bitField0_ |= 0x00000001;
          ptmRatio_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional int32 ptmRatio = 1;</code>.
         *
         * @return the builder
         */
        public Builder clearPtmRatio() {
          bitField0_ = (bitField0_ & ~0x00000001);
          ptmRatio_ = 0;
          onChanged();
          return this;
        }

        // optional int32 velocityIterations = 2;
        /** The velocity iterations_. */
        private int velocityIterations_ ;
        
        /**
         * <code>optional int32 velocityIterations = 2;</code>.
         *
         * @return true, if successful
         */
        public boolean hasVelocityIterations() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        
        /**
         * <code>optional int32 velocityIterations = 2;</code>.
         *
         * @return the velocity iterations
         */
        public int getVelocityIterations() {
          return velocityIterations_;
        }
        
        /**
         * <code>optional int32 velocityIterations = 2;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setVelocityIterations(int value) {
          bitField0_ |= 0x00000002;
          velocityIterations_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional int32 velocityIterations = 2;</code>.
         *
         * @return the builder
         */
        public Builder clearVelocityIterations() {
          bitField0_ = (bitField0_ & ~0x00000002);
          velocityIterations_ = 0;
          onChanged();
          return this;
        }

        // optional int32 positionIterations = 3;
        /** The position iterations_. */
        private int positionIterations_ ;
        
        /**
         * <code>optional int32 positionIterations = 3;</code>.
         *
         * @return true, if successful
         */
        public boolean hasPositionIterations() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        
        /**
         * <code>optional int32 positionIterations = 3;</code>.
         *
         * @return the position iterations
         */
        public int getPositionIterations() {
          return positionIterations_;
        }
        
        /**
         * <code>optional int32 positionIterations = 3;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setPositionIterations(int value) {
          bitField0_ |= 0x00000004;
          positionIterations_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional int32 positionIterations = 3;</code>.
         *
         * @return the builder
         */
        public Builder clearPositionIterations() {
          bitField0_ = (bitField0_ & ~0x00000004);
          positionIterations_ = 0;
          onChanged();
          return this;
        }

        // optional float timeStep = 4;
        /** The time step_. */
        private float timeStep_ ;
        
        /**
         * <code>optional float timeStep = 4;</code>.
         *
         * @return true, if successful
         */
        public boolean hasTimeStep() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        
        /**
         * <code>optional float timeStep = 4;</code>.
         *
         * @return the time step
         */
        public float getTimeStep() {
          return timeStep_;
        }
        
        /**
         * <code>optional float timeStep = 4;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setTimeStep(float value) {
          bitField0_ |= 0x00000008;
          timeStep_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional float timeStep = 4;</code>.
         *
         * @return the builder
         */
        public Builder clearTimeStep() {
          bitField0_ = (bitField0_ & ~0x00000008);
          timeStep_ = 0F;
          onChanged();
          return this;
        }

        // optional float gravityX = 5;
        /** The gravity x_. */
        private float gravityX_ ;
        
        /**
         * <code>optional float gravityX = 5;</code>.
         *
         * @return true, if successful
         */
        public boolean hasGravityX() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        
        /**
         * <code>optional float gravityX = 5;</code>.
         *
         * @return the gravity x
         */
        public float getGravityX() {
          return gravityX_;
        }
        
        /**
         * <code>optional float gravityX = 5;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setGravityX(float value) {
          bitField0_ |= 0x00000010;
          gravityX_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional float gravityX = 5;</code>.
         *
         * @return the builder
         */
        public Builder clearGravityX() {
          bitField0_ = (bitField0_ & ~0x00000010);
          gravityX_ = 0F;
          onChanged();
          return this;
        }

        // optional float gravityY = 6;
        /** The gravity y_. */
        private float gravityY_ ;
        
        /**
         * <code>optional float gravityY = 6;</code>.
         *
         * @return true, if successful
         */
        public boolean hasGravityY() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        
        /**
         * <code>optional float gravityY = 6;</code>.
         *
         * @return the gravity y
         */
        public float getGravityY() {
          return gravityY_;
        }
        
        /**
         * <code>optional float gravityY = 6;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setGravityY(float value) {
          bitField0_ |= 0x00000020;
          gravityY_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional float gravityY = 6;</code>.
         *
         * @return the builder
         */
        public Builder clearGravityY() {
          bitField0_ = (bitField0_ & ~0x00000020);
          gravityY_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences)
      }

      static {
        defaultInstance = new WorldPreferences(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences)
    }

    /**
     * The Interface CardPreferencesOrBuilder.
     */
    public interface CardPreferencesOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int32 cardNoX = 1;
      /**
       * <code>optional int32 cardNoX = 1;</code>.
       *
       * @return true, if successful
       */
      boolean hasCardNoX();
      
      /**
       * <code>optional int32 cardNoX = 1;</code>.
       *
       * @return the card no x
       */
      int getCardNoX();

      // optional int32 cardNoY = 2;
      /**
       * <code>optional int32 cardNoY = 2;</code>.
       *
       * @return true, if successful
       */
      boolean hasCardNoY();
      
      /**
       * <code>optional int32 cardNoY = 2;</code>.
       *
       * @return the card no y
       */
      int getCardNoY();

      // optional int32 cardWidth = 3;
      /**
       * <code>optional int32 cardWidth = 3;</code>.
       *
       * @return true, if successful
       */
      boolean hasCardWidth();
      
      /**
       * <code>optional int32 cardWidth = 3;</code>.
       *
       * @return the card width
       */
      int getCardWidth();

      // optional int32 cardHeight = 4;
      /**
       * <code>optional int32 cardHeight = 4;</code>.
       *
       * @return true, if successful
       */
      boolean hasCardHeight();
      
      /**
       * <code>optional int32 cardHeight = 4;</code>.
       *
       * @return the card height
       */
      int getCardHeight();
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences}
     */
    public static final class CardPreferences extends
        com.google.protobuf.GeneratedMessage
        implements CardPreferencesOrBuilder {
      // Use CardPreferences.newBuilder() to construct.
      /**
       * Instantiates a new card preferences.
       *
       * @param builder the builder
       */
      private CardPreferences(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      
      /**
       * Instantiates a new card preferences.
       *
       * @param noInit the no init
       */
      private CardPreferences(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      /** The Constant defaultInstance. */
      private static final CardPreferences defaultInstance;
      
      /**
       * Gets the default instance.
       *
       * @return the default instance
       */
      public static CardPreferences getDefaultInstance() {
        return defaultInstance;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public CardPreferences getDefaultInstanceForType() {
        return defaultInstance;
      }

      /** The unknown fields. */
      private final com.google.protobuf.UnknownFieldSet unknownFields;
      
      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#getUnknownFields()
       */
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      
      /**
       * Instantiates a new card preferences.
       *
       * @param input the input
       * @param extensionRegistry the extension registry
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      private CardPreferences(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                cardNoX_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                cardNoY_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                cardWidth_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                cardHeight_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.class, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder.class);
      }

      /** The parser. */
      public static com.google.protobuf.Parser<CardPreferences> PARSER =
          new com.google.protobuf.AbstractParser<CardPreferences>() {
        public CardPreferences parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CardPreferences(input, extensionRegistry);
        }
      };

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#getParserForType()
       */
      @java.lang.Override
      public com.google.protobuf.Parser<CardPreferences> getParserForType() {
        return PARSER;
      }

      /** The bit field0_. */
      private int bitField0_;
      // optional int32 cardNoX = 1;
      /** The Constant CARDNOX_FIELD_NUMBER. */
      public static final int CARDNOX_FIELD_NUMBER = 1;
      
      /** The card no x_. */
      private int cardNoX_;
      
      /**
       * <code>optional int32 cardNoX = 1;</code>.
       *
       * @return true, if successful
       */
      public boolean hasCardNoX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional int32 cardNoX = 1;</code>.
       *
       * @return the card no x
       */
      public int getCardNoX() {
        return cardNoX_;
      }

      // optional int32 cardNoY = 2;
      /** The Constant CARDNOY_FIELD_NUMBER. */
      public static final int CARDNOY_FIELD_NUMBER = 2;
      
      /** The card no y_. */
      private int cardNoY_;
      
      /**
       * <code>optional int32 cardNoY = 2;</code>.
       *
       * @return true, if successful
       */
      public boolean hasCardNoY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional int32 cardNoY = 2;</code>.
       *
       * @return the card no y
       */
      public int getCardNoY() {
        return cardNoY_;
      }

      // optional int32 cardWidth = 3;
      /** The Constant CARDWIDTH_FIELD_NUMBER. */
      public static final int CARDWIDTH_FIELD_NUMBER = 3;
      
      /** The card width_. */
      private int cardWidth_;
      
      /**
       * <code>optional int32 cardWidth = 3;</code>.
       *
       * @return true, if successful
       */
      public boolean hasCardWidth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional int32 cardWidth = 3;</code>.
       *
       * @return the card width
       */
      public int getCardWidth() {
        return cardWidth_;
      }

      // optional int32 cardHeight = 4;
      /** The Constant CARDHEIGHT_FIELD_NUMBER. */
      public static final int CARDHEIGHT_FIELD_NUMBER = 4;
      
      /** The card height_. */
      private int cardHeight_;
      
      /**
       * <code>optional int32 cardHeight = 4;</code>.
       *
       * @return true, if successful
       */
      public boolean hasCardHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      
      /**
       * <code>optional int32 cardHeight = 4;</code>.
       *
       * @return the card height
       */
      public int getCardHeight() {
        return cardHeight_;
      }

      /**
       * Inits the fields.
       */
      private void initFields() {
        cardNoX_ = 0;
        cardNoY_ = 0;
        cardWidth_ = 0;
        cardHeight_ = 0;
      }
      
      /** The memoized is initialized. */
      private byte memoizedIsInitialized = -1;
      
      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#isInitialized()
       */
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
       */
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, cardNoX_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, cardNoY_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, cardWidth_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, cardHeight_);
        }
        getUnknownFields().writeTo(output);
      }

      /** The memoized serialized size. */
      private int memoizedSerializedSize = -1;
      
      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage#getSerializedSize()
       */
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, cardNoX_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, cardNoY_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, cardWidth_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, cardHeight_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      /** The Constant serialVersionUID. */
      private static final long serialVersionUID = 0L;
      
      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#writeReplace()
       */
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      /**
       * Parses the from.
       *
       * @param data the data
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. card preferences
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      
      /**
       * Parses the from.
       *
       * @param data the data
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. card preferences
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      
      /**
       * Parses the from.
       *
       * @param data the data
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. card preferences
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      
      /**
       * Parses the from.
       *
       * @param data the data
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. card preferences
       * @throws InvalidProtocolBufferException the invalid protocol buffer exception
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      
      /**
       * Parses the from.
       *
       * @param input the input
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. card preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      
      /**
       * Parses the from.
       *
       * @param input the input
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. card preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      
      /**
       * Parses the delimited from.
       *
       * @param input the input
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. card preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      
      /**
       * Parses the delimited from.
       *
       * @param input the input
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. card preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      
      /**
       * Parses the from.
       *
       * @param input the input
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. card preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      
      /**
       * Parses the from.
       *
       * @param input the input
       * @param extensionRegistry the extension registry
       * @return the com.laex.cg2d.protobuf. game object. cg screen preferences. card preferences
       * @throws IOException Signals that an I/O exception has occurred.
       */
      public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      /**
       * New builder.
       *
       * @return the builder
       */
      public static Builder newBuilder() { return Builder.create(); }
      
      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite#newBuilderForType()
       */
      public Builder newBuilderForType() { return newBuilder(); }
      
      /**
       * New builder.
       *
       * @param prototype the prototype
       * @return the builder
       */
      public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      
      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite#toBuilder()
       */
      public Builder toBuilder() { return newBuilder(this); }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
       */
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder {
        
        /**
         * Gets the descriptor.
         *
         * @return the descriptor
         */
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_descriptor;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
         */
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.class, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder.class);
        }

        // Construct using com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.newBuilder()
        /**
         * Instantiates a new builder.
         */
        private Builder() {
          maybeForceBuilderInitialization();
        }

        /**
         * Instantiates a new builder.
         *
         * @param parent the parent
         */
        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        
        /**
         * Maybe force builder initialization.
         */
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        
        /**
         * Creates the.
         *
         * @return the builder
         */
        private static Builder create() {
          return new Builder();
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#clear()
         */
        public Builder clear() {
          super.clear();
          cardNoX_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          cardNoY_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          cardWidth_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          cardHeight_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#clone()
         */
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
         */
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_descriptor;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
         */
        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences getDefaultInstanceForType() {
          return com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDefaultInstance();
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.MessageLite.Builder#build()
         */
        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences build() {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.MessageLite.Builder#buildPartial()
         */
        public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences buildPartial() {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences result = new com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.cardNoX_ = cardNoX_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.cardNoY_ = cardNoY_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.cardWidth_ = cardWidth_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.cardHeight_ = cardHeight_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
         */
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences) {
            return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        /**
         * Merge from.
         *
         * @param other the other
         * @return the builder
         */
        public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences other) {
          if (other == com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDefaultInstance()) return this;
          if (other.hasCardNoX()) {
            setCardNoX(other.getCardNoX());
          }
          if (other.hasCardNoY()) {
            setCardNoY(other.getCardNoY());
          }
          if (other.hasCardWidth()) {
            setCardWidth(other.getCardWidth());
          }
          if (other.hasCardHeight()) {
            setCardHeight(other.getCardHeight());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
         */
        public final boolean isInitialized() {
          return true;
        }

        /* (non-Javadoc)
         * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
         */
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        
        /** The bit field0_. */
        private int bitField0_;

        // optional int32 cardNoX = 1;
        /** The card no x_. */
        private int cardNoX_ ;
        
        /**
         * <code>optional int32 cardNoX = 1;</code>.
         *
         * @return true, if successful
         */
        public boolean hasCardNoX() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        
        /**
         * <code>optional int32 cardNoX = 1;</code>.
         *
         * @return the card no x
         */
        public int getCardNoX() {
          return cardNoX_;
        }
        
        /**
         * <code>optional int32 cardNoX = 1;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setCardNoX(int value) {
          bitField0_ |= 0x00000001;
          cardNoX_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional int32 cardNoX = 1;</code>.
         *
         * @return the builder
         */
        public Builder clearCardNoX() {
          bitField0_ = (bitField0_ & ~0x00000001);
          cardNoX_ = 0;
          onChanged();
          return this;
        }

        // optional int32 cardNoY = 2;
        /** The card no y_. */
        private int cardNoY_ ;
        
        /**
         * <code>optional int32 cardNoY = 2;</code>.
         *
         * @return true, if successful
         */
        public boolean hasCardNoY() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        
        /**
         * <code>optional int32 cardNoY = 2;</code>.
         *
         * @return the card no y
         */
        public int getCardNoY() {
          return cardNoY_;
        }
        
        /**
         * <code>optional int32 cardNoY = 2;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setCardNoY(int value) {
          bitField0_ |= 0x00000002;
          cardNoY_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional int32 cardNoY = 2;</code>.
         *
         * @return the builder
         */
        public Builder clearCardNoY() {
          bitField0_ = (bitField0_ & ~0x00000002);
          cardNoY_ = 0;
          onChanged();
          return this;
        }

        // optional int32 cardWidth = 3;
        /** The card width_. */
        private int cardWidth_ ;
        
        /**
         * <code>optional int32 cardWidth = 3;</code>.
         *
         * @return true, if successful
         */
        public boolean hasCardWidth() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        
        /**
         * <code>optional int32 cardWidth = 3;</code>.
         *
         * @return the card width
         */
        public int getCardWidth() {
          return cardWidth_;
        }
        
        /**
         * <code>optional int32 cardWidth = 3;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setCardWidth(int value) {
          bitField0_ |= 0x00000004;
          cardWidth_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional int32 cardWidth = 3;</code>.
         *
         * @return the builder
         */
        public Builder clearCardWidth() {
          bitField0_ = (bitField0_ & ~0x00000004);
          cardWidth_ = 0;
          onChanged();
          return this;
        }

        // optional int32 cardHeight = 4;
        /** The card height_. */
        private int cardHeight_ ;
        
        /**
         * <code>optional int32 cardHeight = 4;</code>.
         *
         * @return true, if successful
         */
        public boolean hasCardHeight() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        
        /**
         * <code>optional int32 cardHeight = 4;</code>.
         *
         * @return the card height
         */
        public int getCardHeight() {
          return cardHeight_;
        }
        
        /**
         * <code>optional int32 cardHeight = 4;</code>.
         *
         * @param value the value
         * @return the builder
         */
        public Builder setCardHeight(int value) {
          bitField0_ |= 0x00000008;
          cardHeight_ = value;
          onChanged();
          return this;
        }
        
        /**
         * <code>optional int32 cardHeight = 4;</code>.
         *
         * @return the builder
         */
        public Builder clearCardHeight() {
          bitField0_ = (bitField0_ & ~0x00000008);
          cardHeight_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences)
      }

      static {
        defaultInstance = new CardPreferences(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences)
    }

    /** The bit field0_. */
    private int bitField0_;
    // optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;
    /** The Constant DEBUGDRAWPREFS_FIELD_NUMBER. */
    public static final int DEBUGDRAWPREFS_FIELD_NUMBER = 1;
    
    /** The debug draw prefs_. */
    private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
     *
     * @return true, if successful
     */
    public boolean hasDebugDrawPrefs() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
     *
     * @return the debug draw prefs
     */
    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences getDebugDrawPrefs() {
      return debugDrawPrefs_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
     *
     * @return the debug draw prefs or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder getDebugDrawPrefsOrBuilder() {
      return debugDrawPrefs_;
    }

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;
    /** The Constant WORLDPREFS_FIELD_NUMBER. */
    public static final int WORLDPREFS_FIELD_NUMBER = 2;
    
    /** The world prefs_. */
    private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences worldPrefs_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
     *
     * @return true, if successful
     */
    public boolean hasWorldPrefs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
     *
     * @return the world prefs
     */
    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences getWorldPrefs() {
      return worldPrefs_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
     *
     * @return the world prefs or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder getWorldPrefsOrBuilder() {
      return worldPrefs_;
    }

    // optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;
    /** The Constant CARDPREFS_FIELD_NUMBER. */
    public static final int CARDPREFS_FIELD_NUMBER = 3;
    
    /** The card prefs_. */
    private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences cardPrefs_;
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
     *
     * @return true, if successful
     */
    public boolean hasCardPrefs() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
     *
     * @return the card prefs
     */
    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences getCardPrefs() {
      return cardPrefs_;
    }
    
    /**
     * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
     *
     * @return the card prefs or builder
     */
    public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder getCardPrefsOrBuilder() {
      return cardPrefs_;
    }

    /**
     * Inits the fields.
     */
    private void initFields() {
      debugDrawPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.getDefaultInstance();
      worldPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDefaultInstance();
      cardPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDefaultInstance();
    }
    
    /** The memoized is initialized. */
    private byte memoizedIsInitialized = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#isInitialized()
     */
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#writeTo(com.google.protobuf.CodedOutputStream)
     */
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, debugDrawPrefs_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, worldPrefs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, cardPrefs_);
      }
      getUnknownFields().writeTo(output);
    }

    /** The memoized serialized size. */
    private int memoizedSerializedSize = -1;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.AbstractMessage#getSerializedSize()
     */
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, debugDrawPrefs_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, worldPrefs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, cardPrefs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 0L;
    
    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#writeReplace()
     */
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg screen preferences
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg screen preferences
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @return the com.laex.cg2d.protobuf. game object. cg screen preferences
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    
    /**
     * Parses the from.
     *
     * @param data the data
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg screen preferences
     * @throws InvalidProtocolBufferException the invalid protocol buffer exception
     */
    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg screen preferences
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg screen preferences
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg screen preferences
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    
    /**
     * Parses the delimited from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg screen preferences
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @return the com.laex.cg2d.protobuf. game object. cg screen preferences
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    
    /**
     * Parses the from.
     *
     * @param input the input
     * @param extensionRegistry the extension registry
     * @return the com.laex.cg2d.protobuf. game object. cg screen preferences
     * @throws IOException Signals that an I/O exception has occurred.
     */
    public static com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    /**
     * New builder.
     *
     * @return the builder
     */
    public static Builder newBuilder() { return Builder.create(); }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#newBuilderForType()
     */
    public Builder newBuilderForType() { return newBuilder(); }
    
    /**
     * New builder.
     *
     * @param prototype the prototype
     * @return the builder
     */
    public static Builder newBuilder(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    
    /* (non-Javadoc)
     * @see com.google.protobuf.MessageLite#toBuilder()
     */
    public Builder toBuilder() { return newBuilder(this); }

    /* (non-Javadoc)
     * @see com.google.protobuf.GeneratedMessage#newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent)
     */
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.laex.cg2d.protobuf.CGScreenPreferences}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.laex.cg2d.protobuf.GameObject.CGScreenPreferencesOrBuilder {
      
      /**
       * Gets the descriptor.
       *
       * @return the descriptor
       */
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#internalGetFieldAccessorTable()
       */
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.class, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.Builder.class);
      }

      // Construct using com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.newBuilder()
      /**
       * Instantiates a new builder.
       */
      private Builder() {
        maybeForceBuilderInitialization();
      }

      /**
       * Instantiates a new builder.
       *
       * @param parent the parent
       */
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      
      /**
       * Maybe force builder initialization.
       */
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDebugDrawPrefsFieldBuilder();
          getWorldPrefsFieldBuilder();
          getCardPrefsFieldBuilder();
        }
      }
      
      /**
       * Creates the.
       *
       * @return the builder
       */
      private static Builder create() {
        return new Builder();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clear()
       */
      public Builder clear() {
        super.clear();
        if (debugDrawPrefsBuilder_ == null) {
          debugDrawPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.getDefaultInstance();
        } else {
          debugDrawPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (worldPrefsBuilder_ == null) {
          worldPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDefaultInstance();
        } else {
          worldPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (cardPrefsBuilder_ == null) {
          cardPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDefaultInstance();
        } else {
          cardPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#clone()
       */
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#getDescriptorForType()
       */
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.laex.cg2d.protobuf.GameObject.internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLiteOrBuilder#getDefaultInstanceForType()
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences getDefaultInstanceForType() {
        return com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance();
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#build()
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences build() {
        com.laex.cg2d.protobuf.GameObject.CGScreenPreferences result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.MessageLite.Builder#buildPartial()
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences buildPartial() {
        com.laex.cg2d.protobuf.GameObject.CGScreenPreferences result = new com.laex.cg2d.protobuf.GameObject.CGScreenPreferences(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (debugDrawPrefsBuilder_ == null) {
          result.debugDrawPrefs_ = debugDrawPrefs_;
        } else {
          result.debugDrawPrefs_ = debugDrawPrefsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (worldPrefsBuilder_ == null) {
          result.worldPrefs_ = worldPrefs_;
        } else {
          result.worldPrefs_ = worldPrefsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (cardPrefsBuilder_ == null) {
          result.cardPrefs_ = cardPrefs_;
        } else {
          result.cardPrefs_ = cardPrefsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.Message)
       */
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.laex.cg2d.protobuf.GameObject.CGScreenPreferences) {
          return mergeFrom((com.laex.cg2d.protobuf.GameObject.CGScreenPreferences)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      /**
       * Merge from.
       *
       * @param other the other
       * @return the builder
       */
      public Builder mergeFrom(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences other) {
        if (other == com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.getDefaultInstance()) return this;
        if (other.hasDebugDrawPrefs()) {
          mergeDebugDrawPrefs(other.getDebugDrawPrefs());
        }
        if (other.hasWorldPrefs()) {
          mergeWorldPrefs(other.getWorldPrefs());
        }
        if (other.hasCardPrefs()) {
          mergeCardPrefs(other.getCardPrefs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.GeneratedMessage.Builder#isInitialized()
       */
      public final boolean isInitialized() {
        return true;
      }

      /* (non-Javadoc)
       * @see com.google.protobuf.AbstractMessage.Builder#mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)
       */
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.laex.cg2d.protobuf.GameObject.CGScreenPreferences parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.laex.cg2d.protobuf.GameObject.CGScreenPreferences) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      
      /** The bit field0_. */
      private int bitField0_;

      // optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;
      /** The debug draw prefs_. */
      private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.getDefaultInstance();
      
      /** The debug draw prefs builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder> debugDrawPrefsBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
       *
       * @return true, if successful
       */
      public boolean hasDebugDrawPrefs() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
       *
       * @return the debug draw prefs
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences getDebugDrawPrefs() {
        if (debugDrawPrefsBuilder_ == null) {
          return debugDrawPrefs_;
        } else {
          return debugDrawPrefsBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setDebugDrawPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences value) {
        if (debugDrawPrefsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          debugDrawPrefs_ = value;
          onChanged();
        } else {
          debugDrawPrefsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setDebugDrawPrefs(
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder builderForValue) {
        if (debugDrawPrefsBuilder_ == null) {
          debugDrawPrefs_ = builderForValue.build();
          onChanged();
        } else {
          debugDrawPrefsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeDebugDrawPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences value) {
        if (debugDrawPrefsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              debugDrawPrefs_ != com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.getDefaultInstance()) {
            debugDrawPrefs_ =
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.newBuilder(debugDrawPrefs_).mergeFrom(value).buildPartial();
          } else {
            debugDrawPrefs_ = value;
          }
          onChanged();
        } else {
          debugDrawPrefsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
       *
       * @return the builder
       */
      public Builder clearDebugDrawPrefs() {
        if (debugDrawPrefsBuilder_ == null) {
          debugDrawPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.getDefaultInstance();
          onChanged();
        } else {
          debugDrawPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
       *
       * @return the debug draw prefs builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder getDebugDrawPrefsBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getDebugDrawPrefsFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
       *
       * @return the debug draw prefs or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder getDebugDrawPrefsOrBuilder() {
        if (debugDrawPrefsBuilder_ != null) {
          return debugDrawPrefsBuilder_.getMessageOrBuilder();
        } else {
          return debugDrawPrefs_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.DebugDrawPreferences debugDrawPrefs = 1;</code>
       *
       * @return the debug draw prefs field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder> 
          getDebugDrawPrefsFieldBuilder() {
        if (debugDrawPrefsBuilder_ == null) {
          debugDrawPrefsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.DebugDrawPreferencesOrBuilder>(
                  debugDrawPrefs_,
                  getParentForChildren(),
                  isClean());
          debugDrawPrefs_ = null;
        }
        return debugDrawPrefsBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;
      /** The world prefs_. */
      private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences worldPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDefaultInstance();
      
      /** The world prefs builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder> worldPrefsBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
       *
       * @return true, if successful
       */
      public boolean hasWorldPrefs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
       *
       * @return the world prefs
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences getWorldPrefs() {
        if (worldPrefsBuilder_ == null) {
          return worldPrefs_;
        } else {
          return worldPrefsBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setWorldPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences value) {
        if (worldPrefsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          worldPrefs_ = value;
          onChanged();
        } else {
          worldPrefsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setWorldPrefs(
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder builderForValue) {
        if (worldPrefsBuilder_ == null) {
          worldPrefs_ = builderForValue.build();
          onChanged();
        } else {
          worldPrefsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeWorldPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences value) {
        if (worldPrefsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              worldPrefs_ != com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDefaultInstance()) {
            worldPrefs_ =
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.newBuilder(worldPrefs_).mergeFrom(value).buildPartial();
          } else {
            worldPrefs_ = value;
          }
          onChanged();
        } else {
          worldPrefsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
       *
       * @return the builder
       */
      public Builder clearWorldPrefs() {
        if (worldPrefsBuilder_ == null) {
          worldPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.getDefaultInstance();
          onChanged();
        } else {
          worldPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
       *
       * @return the world prefs builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder getWorldPrefsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getWorldPrefsFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
       *
       * @return the world prefs or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder getWorldPrefsOrBuilder() {
        if (worldPrefsBuilder_ != null) {
          return worldPrefsBuilder_.getMessageOrBuilder();
        } else {
          return worldPrefs_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.WorldPreferences worldPrefs = 2;</code>
       *
       * @return the world prefs field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder> 
          getWorldPrefsFieldBuilder() {
        if (worldPrefsBuilder_ == null) {
          worldPrefsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.WorldPreferencesOrBuilder>(
                  worldPrefs_,
                  getParentForChildren(),
                  isClean());
          worldPrefs_ = null;
        }
        return worldPrefsBuilder_;
      }

      // optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;
      /** The card prefs_. */
      private com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences cardPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDefaultInstance();
      
      /** The card prefs builder_. */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder> cardPrefsBuilder_;
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
       *
       * @return true, if successful
       */
      public boolean hasCardPrefs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
       *
       * @return the card prefs
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences getCardPrefs() {
        if (cardPrefsBuilder_ == null) {
          return cardPrefs_;
        } else {
          return cardPrefsBuilder_.getMessage();
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder setCardPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences value) {
        if (cardPrefsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cardPrefs_ = value;
          onChanged();
        } else {
          cardPrefsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
       *
       * @param builderForValue the builder for value
       * @return the builder
       */
      public Builder setCardPrefs(
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder builderForValue) {
        if (cardPrefsBuilder_ == null) {
          cardPrefs_ = builderForValue.build();
          onChanged();
        } else {
          cardPrefsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
       *
       * @param value the value
       * @return the builder
       */
      public Builder mergeCardPrefs(com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences value) {
        if (cardPrefsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              cardPrefs_ != com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDefaultInstance()) {
            cardPrefs_ =
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.newBuilder(cardPrefs_).mergeFrom(value).buildPartial();
          } else {
            cardPrefs_ = value;
          }
          onChanged();
        } else {
          cardPrefsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
       *
       * @return the builder
       */
      public Builder clearCardPrefs() {
        if (cardPrefsBuilder_ == null) {
          cardPrefs_ = com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.getDefaultInstance();
          onChanged();
        } else {
          cardPrefsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
       *
       * @return the card prefs builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder getCardPrefsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCardPrefsFieldBuilder().getBuilder();
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
       *
       * @return the card prefs or builder
       */
      public com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder getCardPrefsOrBuilder() {
        if (cardPrefsBuilder_ != null) {
          return cardPrefsBuilder_.getMessageOrBuilder();
        } else {
          return cardPrefs_;
        }
      }
      
      /**
       * <code>optional .com.laex.cg2d.protobuf.CGScreenPreferences.CardPreferences cardPrefs = 3;</code>
       *
       * @return the card prefs field builder
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder> 
          getCardPrefsFieldBuilder() {
        if (cardPrefsBuilder_ == null) {
          cardPrefsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferences.Builder, com.laex.cg2d.protobuf.GameObject.CGScreenPreferences.CardPreferencesOrBuilder>(
                  cardPrefs_,
                  getParentForChildren(),
                  isClean());
          cardPrefs_ = null;
        }
        return cardPrefsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.laex.cg2d.protobuf.CGScreenPreferences)
    }

    static {
      defaultInstance = new CGScreenPreferences(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.laex.cg2d.protobuf.CGScreenPreferences)
  }

  /** The internal_static_com_laex_cg2d_protobuf_ cg game model_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGGameModel_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg game model_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGGameModel_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg joint_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGJoint_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg joint_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGJoint_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg distance joint def_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg distance joint def_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg revolute joint def_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg revolute joint def_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg prismatic joint def_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg prismatic joint def_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg pulley joint def_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg pulley joint def_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg friction joint def_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg friction joint def_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg weld joint def_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg weld joint def_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg resource file_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGResourceFile_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg resource file_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGResourceFile_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg entity animation_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg entity animation_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg entity_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGEntity_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg entity_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGEntity_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg bounds_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGBounds_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg bounds_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGBounds_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg vector2_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGVector2_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg vector2_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGVector2_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg body def_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGBodyDef_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg body def_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGBodyDef_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg filter_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGFilter_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg filter_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGFilter_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg fixture def_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGFixtureDef_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg fixture def_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGFixtureDef_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg shape_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGShape_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg shape_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGShape_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg layer_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGLayer_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg layer_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGLayer_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg screen preferences_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg screen preferences_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg screen preferences_ debug draw preferences_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg screen preferences_ debug draw preferences_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg screen preferences_ world preferences_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg screen preferences_ world preferences_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_fieldAccessorTable;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg screen preferences_ card preferences_descriptor. */
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_descriptor;
  
  /** The internal_static_com_laex_cg2d_protobuf_ cg screen preferences_ card preferences_field accessor table. */
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_fieldAccessorTable;

  /**
   * Gets the descriptor.
   *
   * @return the descriptor
   */
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  
  /** The descriptor. */
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'com/laex/cg2d/protobuf/GameObject.prot" +
      "o\022\026com.laex.cg2d.protobuf\"\200\001\n\013CGGameMode" +
      "l\022/\n\006layers\030\001 \003(\0132\037.com.laex.cg2d.protob" +
      "uf.CGLayer\022@\n\013screenPrefs\030\002 \001(\0132+.com.la" +
      "ex.cg2d.protobuf.CGScreenPreferences\"\204\004\n" +
      "\007CGJoint\022\025\n\rsourceShapeId\030\001 \001(\t\022\025\n\rtarge" +
      "tShapeId\030\002 \001(\t\0221\n\004type\030\003 \001(\0162#.com.laex." +
      "cg2d.protobuf.CGJointType\022D\n\020distanceJoi" +
      "ntDef\030\005 \001(\0132*.com.laex.cg2d.protobuf.CGD" +
      "istanceJointDef\022D\n\020revoluteJointDef\030\006 \001(",
      "\0132*.com.laex.cg2d.protobuf.CGRevoluteJoi" +
      "ntDef\022F\n\021prismaticJointDef\030\007 \001(\0132+.com.l" +
      "aex.cg2d.protobuf.CGPrismaticJointDef\022@\n" +
      "\016pulleyJointDef\030\010 \001(\0132(.com.laex.cg2d.pr" +
      "otobuf.CGPulleyJointDef\022D\n\020frictionJoint" +
      "Def\030\t \001(\0132*.com.laex.cg2d.protobuf.CGFri" +
      "ctionJointDef\022<\n\014weldJointDef\030\n \001(\0132&.co" +
      "m.laex.cg2d.protobuf.CGWeldJointDef\"X\n\022C" +
      "GDistanceJointDef\022\030\n\020collideConnected\030\001 " +
      "\001(\010\022\022\n\nfreqencyHz\030\002 \001(\002\022\024\n\014dampingRatio\030",
      "\003 \001(\002\"\374\001\n\022CGRevoluteJointDef\022\030\n\020collideC" +
      "onnected\030\001 \001(\010\022\026\n\016referenceAngle\030\002 \001(\002\022\023" +
      "\n\013enableLimit\030\003 \001(\010\022\022\n\nlowerAngle\030\004 \001(\002\022" +
      "\022\n\nupperAngle\030\005 \001(\002\022\023\n\013enableMotor\030\006 \001(\010" +
      "\022\022\n\nmotorSpeed\030\007 \001(\002\022\026\n\016maxMotorTorque\030\010" +
      " \001(\002\0226\n\013worldAnchor\030\t \001(\0132!.com.laex.cg2" +
      "d.protobuf.CGVector2\"\264\002\n\023CGPrismaticJoin" +
      "tDef\022\030\n\020collideConnected\030\001 \001(\010\0221\n\006anchor" +
      "\030\002 \001(\0132!.com.laex.cg2d.protobuf.CGVector" +
      "2\022/\n\004axis\030\003 \001(\0132!.com.laex.cg2d.protobuf",
      ".CGVector2\022\026\n\016referenceAngle\030\005 \001(\002\022\023\n\013en" +
      "ableLimit\030\006 \001(\010\022\030\n\020lowerTranslation\030\007 \001(" +
      "\002\022\030\n\020upperTranslation\030\010 \001(\002\022\023\n\013enableMot" +
      "or\030\t \001(\010\022\025\n\rmaxMotorForce\030\n \001(\002\022\022\n\nmotor" +
      "Speed\030\013 \001(\002\"\257\001\n\020CGPulleyJointDef\022\030\n\020coll" +
      "ideConnected\030\001 \001(\010\0228\n\rgroundAnchorA\030\002 \001(" +
      "\0132!.com.laex.cg2d.protobuf.CGVector2\0228\n\r" +
      "groundAnchorB\030\003 \001(\0132!.com.laex.cg2d.prot" +
      "obuf.CGVector2\022\r\n\005ratio\030\004 \001(\002\"S\n\022CGFrict" +
      "ionJointDef\022\030\n\020collideConnected\030\001 \001(\010\022\020\n",
      "\010maxForce\030\002 \001(\002\022\021\n\tmaxTorque\030\003 \001(\002\"*\n\016CG" +
      "WeldJointDef\022\030\n\020collideConnected\030\001 \001(\010\"D" +
      "\n\016CGResourceFile\022\024\n\014resourceFile\030\001 \001(\t\022\034" +
      "\n\024resourceFileAbsolute\030\002 \001(\t\"\273\003\n\021CGEntit" +
      "yAnimation\022\025\n\ranimationName\030\001 \001(\t\022E\n\025ani" +
      "mationResourceFile\030\002 \001(\0132&.com.laex.cg2d" +
      ".protobuf.CGResourceFile\022;\n\013fixtureFile\030" +
      "\003 \001(\0132&.com.laex.cg2d.protobuf.CGResourc" +
      "eFile\022\031\n\021animationDuration\030\004 \001(\002\022\030\n\020defa" +
      "ultAnimation\030\005 \001(\010\022\014\n\004cols\030\006 \001(\005\022\014\n\004rows",
      "\030\007 \001(\005\022D\n\rcollisionType\030\010 \001(\0162-.com.laex" +
      ".cg2d.protobuf.CGEntityCollisionType\022\014\n\004" +
      "shpX\030\t \001(\005\022\014\n\004shpY\030\n \001(\005\022\020\n\010shpWidth\030\013 \001" +
      "(\005\022\021\n\tshpHeight\030\014 \001(\005\0223\n\010vertices\030\r \003(\0132" +
      "!.com.laex.cg2d.protobuf.CGVector2\"_\n\010CG" +
      "Entity\022\024\n\014internalName\030\001 \001(\t\022=\n\nanimatio" +
      "ns\030\002 \003(\0132).com.laex.cg2d.protobuf.CGEnti" +
      "tyAnimation\"?\n\010CGBounds\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030" +
      "\002 \001(\002\022\r\n\005width\030\003 \001(\002\022\016\n\006height\030\004 \001(\002\"!\n\t" +
      "CGVector2\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\"\215\003\n\tCGBo",
      "dyDef\022\016\n\006active\030\001 \001(\010\022\022\n\nallowSleep\030\002 \001(" +
      "\010\022\r\n\005angle\030\003 \001(\002\022\026\n\016angularDamping\030\004 \001(\002" +
      "\022\027\n\017angularVelocity\030\005 \001(\002\022\r\n\005awake\030\006 \001(\010" +
      "\022\016\n\006bullet\030\007 \001(\010\022\025\n\rfixedRotation\030\010 \001(\010\022" +
      "\026\n\016intertialScale\030\t \001(\002\022\026\n\016linearDampitn" +
      "g\030\n \001(\002\022\024\n\014gravityScale\030\013 \001(\002\0229\n\016linearV" +
      "elocity\030\014 \001(\0132!.com.laex.cg2d.protobuf.C" +
      "GVector2\0220\n\004type\030\r \001(\0162\".com.laex.cg2d.p" +
      "rotobuf.CGBodyType\0223\n\010position\030\016 \001(\0132!.c" +
      "om.laex.cg2d.protobuf.CGVector2\"F\n\010CGFil",
      "ter\022\024\n\014categoryBits\030\001 \001(\005\022\020\n\010maskBits\030\002 " +
      "\001(\005\022\022\n\ngroupIndex\030\003 \001(\005\"\210\001\n\014CGFixtureDef" +
      "\022\017\n\007density\030\001 \001(\002\022\020\n\010friction\030\002 \001(\002\022\023\n\013r" +
      "estitution\030\003 \001(\002\022\016\n\006sensor\030\004 \001(\010\0220\n\006filt" +
      "er\030\005 \001(\0132 .com.laex.cg2d.protobuf.CGFilt" +
      "er\"\346\003\n\007CGShape\022\n\n\002id\030\001 \001(\t\022\017\n\007visible\030\002 " +
      "\001(\010\022\016\n\006locked\030\003 \001(\010\022\022\n\nbackground\030\004 \001(\010\022" +
      "F\n\026backgroundResourceFile\030\005 \001(\0132&.com.la" +
      "ex.cg2d.protobuf.CGResourceFile\022B\n\017edito" +
      "rShapeType\030\006 \001(\0162).com.laex.cg2d.protobu",
      "f.CGEditorShapeType\0220\n\006bounds\030\007 \001(\0132 .co" +
      "m.laex.cg2d.protobuf.CGBounds\0222\n\007bodyDef" +
      "\030\010 \001(\0132!.com.laex.cg2d.protobuf.CGBodyDe" +
      "f\0228\n\nfixtureDef\030\t \001(\0132$.com.laex.cg2d.pr" +
      "otobuf.CGFixtureDef\022/\n\006joints\030\n \003(\0132\037.co" +
      "m.laex.cg2d.protobuf.CGJoint\022=\n\rentityRe" +
      "fFile\030\013 \001(\0132&.com.laex.cg2d.protobuf.CGR" +
      "esourceFile\"t\n\007CGLayer\022\n\n\002id\030\001 \001(\005\022\014\n\004na" +
      "me\030\002 \001(\t\022\017\n\007visible\030\003 \001(\010\022\016\n\006locked\030\004 \001(" +
      "\010\022.\n\005shape\030\005 \003(\0132\037.com.laex.cg2d.protobu",
      "f.CGShape\"\271\005\n\023CGScreenPreferences\022X\n\016deb" +
      "ugDrawPrefs\030\001 \001(\0132@.com.laex.cg2d.protob" +
      "uf.CGScreenPreferences.DebugDrawPreferen" +
      "ces\022P\n\nworldPrefs\030\002 \001(\0132<.com.laex.cg2d." +
      "protobuf.CGScreenPreferences.WorldPrefer" +
      "ences\022N\n\tcardPrefs\030\003 \001(\0132;.com.laex.cg2d" +
      ".protobuf.CGScreenPreferences.CardPrefer" +
      "ences\032\264\001\n\024DebugDrawPreferences\022\022\n\ndrawBo" +
      "dies\030\001 \001(\010\022\022\n\ndrawJoints\030\002 \001(\010\022\020\n\010drawAA" +
      "BB\030\003 \001(\010\022\032\n\022drawInactiveBodies\030\004 \001(\010\022\031\n\021",
      "installMouseJoint\030\005 \001(\010\022\025\n\rdrawDebugData" +
      "\030\006 \001(\010\022\024\n\014drawEntities\030\007 \001(\010\032\222\001\n\020WorldPr" +
      "eferences\022\020\n\010ptmRatio\030\001 \001(\005\022\032\n\022velocityI" +
      "terations\030\002 \001(\005\022\032\n\022positionIterations\030\003 " +
      "\001(\005\022\020\n\010timeStep\030\004 \001(\002\022\020\n\010gravityX\030\005 \001(\002\022" +
      "\020\n\010gravityY\030\006 \001(\002\032Z\n\017CardPreferences\022\017\n\007" +
      "cardNoX\030\001 \001(\005\022\017\n\007cardNoY\030\002 \001(\005\022\021\n\tcardWi" +
      "dth\030\003 \001(\005\022\022\n\ncardHeight\030\004 \001(\005*\223\001\n\013CGJoin" +
      "tType\022\013\n\007UNKNOWN\020\001\022\014\n\010REVOLUTE\020\002\022\r\n\tPRIS" +
      "MATIC\020\003\022\014\n\010DISTANCE\020\004\022\n\n\006PULLEY\020\005\022\t\n\005MOU",
      "SE\020\006\022\010\n\004GEAR\020\007\022\t\n\005WHEEL\020\010\022\010\n\004WELD\020\t\022\014\n\010F" +
      "RICTION\020\n\022\010\n\004ROPE\020\013*B\n\025CGEntityCollision" +
      "Type\022\010\n\004NONE\020\000\022\007\n\003BOX\020\001\022\n\n\006CIRCLE\020\002\022\n\n\006C" +
      "USTOM\020\003*4\n\nCGBodyType\022\n\n\006STATIC\020\001\022\r\n\tKIN" +
      "EMATIC\020\002\022\013\n\007DYNAMIC\020\003*\232\001\n\021CGEditorShapeT" +
      "ype\022\027\n\023SIMPLE_SHAPE_CIRCLE\020\001\022\024\n\020SIMPLE_S" +
      "HAPE_BOX\020\002\022\026\n\022SIMPLE_SHAPE_HEDGE\020\003\022\026\n\022SI" +
      "MPLE_SHAPE_VEDGE\020\004\022\024\n\020BACKGROUND_SHAPE\020\005" +
      "\022\020\n\014ENTITY_SHAPE\020\006"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_laex_cg2d_protobuf_CGGameModel_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_laex_cg2d_protobuf_CGGameModel_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGGameModel_descriptor,
              new java.lang.String[] { "Layers", "ScreenPrefs", });
          internal_static_com_laex_cg2d_protobuf_CGJoint_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_laex_cg2d_protobuf_CGJoint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGJoint_descriptor,
              new java.lang.String[] { "SourceShapeId", "TargetShapeId", "Type", "DistanceJointDef", "RevoluteJointDef", "PrismaticJointDef", "PulleyJointDef", "FrictionJointDef", "WeldJointDef", });
          internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGDistanceJointDef_descriptor,
              new java.lang.String[] { "CollideConnected", "FreqencyHz", "DampingRatio", });
          internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGRevoluteJointDef_descriptor,
              new java.lang.String[] { "CollideConnected", "ReferenceAngle", "EnableLimit", "LowerAngle", "UpperAngle", "EnableMotor", "MotorSpeed", "MaxMotorTorque", "WorldAnchor", });
          internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGPrismaticJointDef_descriptor,
              new java.lang.String[] { "CollideConnected", "Anchor", "Axis", "ReferenceAngle", "EnableLimit", "LowerTranslation", "UpperTranslation", "EnableMotor", "MaxMotorForce", "MotorSpeed", });
          internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGPulleyJointDef_descriptor,
              new java.lang.String[] { "CollideConnected", "GroundAnchorA", "GroundAnchorB", "Ratio", });
          internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGFrictionJointDef_descriptor,
              new java.lang.String[] { "CollideConnected", "MaxForce", "MaxTorque", });
          internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGWeldJointDef_descriptor,
              new java.lang.String[] { "CollideConnected", });
          internal_static_com_laex_cg2d_protobuf_CGResourceFile_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_laex_cg2d_protobuf_CGResourceFile_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGResourceFile_descriptor,
              new java.lang.String[] { "ResourceFile", "ResourceFileAbsolute", });
          internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGEntityAnimation_descriptor,
              new java.lang.String[] { "AnimationName", "AnimationResourceFile", "FixtureFile", "AnimationDuration", "DefaultAnimation", "Cols", "Rows", "CollisionType", "ShpX", "ShpY", "ShpWidth", "ShpHeight", "Vertices", });
          internal_static_com_laex_cg2d_protobuf_CGEntity_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_laex_cg2d_protobuf_CGEntity_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGEntity_descriptor,
              new java.lang.String[] { "InternalName", "Animations", });
          internal_static_com_laex_cg2d_protobuf_CGBounds_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_com_laex_cg2d_protobuf_CGBounds_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGBounds_descriptor,
              new java.lang.String[] { "X", "Y", "Width", "Height", });
          internal_static_com_laex_cg2d_protobuf_CGVector2_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_com_laex_cg2d_protobuf_CGVector2_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGVector2_descriptor,
              new java.lang.String[] { "X", "Y", });
          internal_static_com_laex_cg2d_protobuf_CGBodyDef_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_com_laex_cg2d_protobuf_CGBodyDef_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGBodyDef_descriptor,
              new java.lang.String[] { "Active", "AllowSleep", "Angle", "AngularDamping", "AngularVelocity", "Awake", "Bullet", "FixedRotation", "IntertialScale", "LinearDampitng", "GravityScale", "LinearVelocity", "Type", "Position", });
          internal_static_com_laex_cg2d_protobuf_CGFilter_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_com_laex_cg2d_protobuf_CGFilter_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGFilter_descriptor,
              new java.lang.String[] { "CategoryBits", "MaskBits", "GroupIndex", });
          internal_static_com_laex_cg2d_protobuf_CGFixtureDef_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_com_laex_cg2d_protobuf_CGFixtureDef_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGFixtureDef_descriptor,
              new java.lang.String[] { "Density", "Friction", "Restitution", "Sensor", "Filter", });
          internal_static_com_laex_cg2d_protobuf_CGShape_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_com_laex_cg2d_protobuf_CGShape_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGShape_descriptor,
              new java.lang.String[] { "Id", "Visible", "Locked", "Background", "BackgroundResourceFile", "EditorShapeType", "Bounds", "BodyDef", "FixtureDef", "Joints", "EntityRefFile", });
          internal_static_com_laex_cg2d_protobuf_CGLayer_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_com_laex_cg2d_protobuf_CGLayer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGLayer_descriptor,
              new java.lang.String[] { "Id", "Name", "Visible", "Locked", "Shape", });
          internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor,
              new java.lang.String[] { "DebugDrawPrefs", "WorldPrefs", "CardPrefs", });
          internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_descriptor =
            internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor.getNestedTypes().get(0);
          internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_DebugDrawPreferences_descriptor,
              new java.lang.String[] { "DrawBodies", "DrawJoints", "DrawAABB", "DrawInactiveBodies", "InstallMouseJoint", "DrawDebugData", "DrawEntities", });
          internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_descriptor =
            internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor.getNestedTypes().get(1);
          internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_WorldPreferences_descriptor,
              new java.lang.String[] { "PtmRatio", "VelocityIterations", "PositionIterations", "TimeStep", "GravityX", "GravityY", });
          internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_descriptor =
            internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_descriptor.getNestedTypes().get(2);
          internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_laex_cg2d_protobuf_CGScreenPreferences_CardPreferences_descriptor,
              new java.lang.String[] { "CardNoX", "CardNoY", "CardWidth", "CardHeight", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
